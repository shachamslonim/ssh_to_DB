<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://impl.version3_5.fapi.emc.com/" targetNamespace="http://impl.version3_5.fapi.emc.com/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="FunctionalAPIActionFailedException" type="tns:FunctionalAPIActionFailedException" />
  <xs:element name="FunctionalAPIInternalError" type="tns:FunctionalAPIInternalError" />
  <xs:element name="FunctionalAPIValidationException" type="tns:FunctionalAPIValidationException" />
  <xs:element name="abortSnapshotsConsolidation" type="tns:abortSnapshotsConsolidation" />
  <xs:element name="abortSnapshotsConsolidationResponse" type="tns:abortSnapshotsConsolidationResponse" />
  <xs:element name="abortTransaction" type="tns:abortTransaction" />
  <xs:element name="abortTransactionResponse" type="tns:abortTransactionResponse" />
  <xs:element name="acquireSiteManagementIP" type="tns:acquireSiteManagementIP" />
  <xs:element name="acquireSiteManagementIPResponse" type="tns:acquireSiteManagementIPResponse" />
  <xs:element name="addAndAttachUserVolume" type="tns:addAndAttachUserVolume" />
  <xs:element name="addAndAttachUserVolumeResponse" type="tns:addAndAttachUserVolumeResponse" />
  <xs:element name="addBrocadeBinding" type="tns:addBrocadeBinding" />
  <xs:element name="addBrocadeBindingResponse" type="tns:addBrocadeBindingResponse" />
  <xs:element name="addBrocadeBindings" type="tns:addBrocadeBindings" />
  <xs:element name="addBrocadeBindingsResponse" type="tns:addBrocadeBindingsResponse" />
  <xs:element name="addBrocadeSafeBinding" type="tns:addBrocadeSafeBinding" />
  <xs:element name="addBrocadeSafeBindingResponse" type="tns:addBrocadeSafeBindingResponse" />
  <xs:element name="addBrocadeSafeBindings" type="tns:addBrocadeSafeBindings" />
  <xs:element name="addBrocadeSafeBindingsResponse" type="tns:addBrocadeSafeBindingsResponse" />
  <xs:element name="addConsistencyGroup" type="tns:addConsistencyGroup" />
  <xs:element name="addConsistencyGroupAndCopiesCommand" type="tns:addConsistencyGroupAndCopiesCommand" />
  <xs:element name="addConsistencyGroupAndCopiesCommandResponse" type="tns:addConsistencyGroupAndCopiesCommandResponse" />
  <xs:element name="addConsistencyGroupCopy" type="tns:addConsistencyGroupCopy" />
  <xs:element name="addConsistencyGroupCopyResponse" type="tns:addConsistencyGroupCopyResponse" />
  <xs:element name="addConsistencyGroupCopyWithDefaultPolicy" type="tns:addConsistencyGroupCopyWithDefaultPolicy" />
  <xs:element name="addConsistencyGroupCopyWithDefaultPolicyResponse" type="tns:addConsistencyGroupCopyWithDefaultPolicyResponse" />
  <xs:element name="addConsistencyGroupResponse" type="tns:addConsistencyGroupResponse" />
  <xs:element name="addConsistencyGroupSet" type="tns:addConsistencyGroupSet" />
  <xs:element name="addConsistencyGroupSetResponse" type="tns:addConsistencyGroupSetResponse" />
  <xs:element name="addConsistencyGroupWithDefaultPolicy" type="tns:addConsistencyGroupWithDefaultPolicy" />
  <xs:element name="addConsistencyGroupWithDefaultPolicyResponse" type="tns:addConsistencyGroupWithDefaultPolicyResponse" />
  <xs:element name="addDistributedConsistencyGroupWithDefaultPolicy" type="tns:addDistributedConsistencyGroupWithDefaultPolicy" />
  <xs:element name="addDistributedConsistencyGroupWithDefaultPolicyResponse" type="tns:addDistributedConsistencyGroupWithDefaultPolicyResponse" />
  <xs:element name="addJournalVolume" type="tns:addJournalVolume" />
  <xs:element name="addJournalVolumeResponse" type="tns:addJournalVolumeResponse" />
  <xs:element name="addRecoverPointUser" type="tns:addRecoverPointUser" />
  <xs:element name="addRecoverPointUserResponse" type="tns:addRecoverPointUserResponse" />
  <xs:element name="addReplicationSet" type="tns:addReplicationSet" />
  <xs:element name="addReplicationSetResponse" type="tns:addReplicationSetResponse" />
  <xs:element name="addSNMPUser" type="tns:addSNMPUser" />
  <xs:element name="addSNMPUserResponse" type="tns:addSNMPUserResponse" />
  <xs:element name="addSSHKey" type="tns:addSSHKey" />
  <xs:element name="addSSHKeyResponse" type="tns:addSSHKeyResponse" />
  <xs:element name="addSplitter" type="tns:addSplitter" />
  <xs:element name="addSplitterResponse" type="tns:addSplitterResponse" />
  <xs:element name="addSystemEventLogsFilter" type="tns:addSystemEventLogsFilter" />
  <xs:element name="addSystemEventLogsFilterResponse" type="tns:addSystemEventLogsFilterResponse" />
  <xs:element name="addUserRole" type="tns:addUserRole" />
  <xs:element name="addUserRoleResponse" type="tns:addUserRoleResponse" />
  <xs:element name="addUserVolume" type="tns:addUserVolume" />
  <xs:element name="addUserVolumeResponse" type="tns:addUserVolumeResponse" />
  <xs:element name="addVCenterServer" type="tns:addVCenterServer" />
  <xs:element name="addVCenterServerFilter" type="tns:addVCenterServerFilter" />
  <xs:element name="addVCenterServerFilterResponse" type="tns:addVCenterServerFilterResponse" />
  <xs:element name="addVCenterServerResponse" type="tns:addVCenterServerResponse" />
  <xs:element name="approveBrocadeSafeBinding" type="tns:approveBrocadeSafeBinding" />
  <xs:element name="approveBrocadeSafeBindingResponse" type="tns:approveBrocadeSafeBindingResponse" />
  <xs:element name="approveBrocadeSafeBindings" type="tns:approveBrocadeSafeBindings" />
  <xs:element name="approveBrocadeSafeBindingsResponse" type="tns:approveBrocadeSafeBindingsResponse" />
  <xs:element name="areThereSystemSettingsConflicts" type="tns:areThereSystemSettingsConflicts" />
  <xs:element name="areThereSystemSettingsConflictsResponse" type="tns:areThereSystemSettingsConflictsResponse" />
  <xs:element name="attachPhoenixCluster" type="tns:attachPhoenixCluster" />
  <xs:element name="attachPhoenixClusterResponse" type="tns:attachPhoenixClusterResponse" />
  <xs:element name="attachVolumeToSplitter" type="tns:attachVolumeToSplitter" />
  <xs:element name="attachVolumeToSplitterResponse" type="tns:attachVolumeToSplitterResponse" />
  <xs:element name="balanceLoad" type="tns:balanceLoad" />
  <xs:element name="balanceLoadResponse" type="tns:balanceLoadResponse" />
  <xs:element name="balanceLoadWithGroupsToExclude" type="tns:balanceLoadWithGroupsToExclude" />
  <xs:element name="balanceLoadWithGroupsToExcludeResponse" type="tns:balanceLoadWithGroupsToExcludeResponse" />
  <xs:element name="clearLDAPSettings" type="tns:clearLDAPSettings" />
  <xs:element name="clearLDAPSettingsResponse" type="tns:clearLDAPSettingsResponse" />
  <xs:element name="clearLongTermStatistics" type="tns:clearLongTermStatistics" />
  <xs:element name="clearLongTermStatisticsResponse" type="tns:clearLongTermStatisticsResponse" />
  <xs:element name="clearSettings" type="tns:clearSettings" />
  <xs:element name="clearSettingsResponse" type="tns:clearSettingsResponse" />
  <xs:element name="clearSplitterCredentials" type="tns:clearSplitterCredentials" />
  <xs:element name="clearSplitterCredentialsResponse" type="tns:clearSplitterCredentialsResponse" />
  <xs:element name="collectLogs" type="tns:collectLogs" />
  <xs:element name="collectLogsResponse" type="tns:collectLogsResponse" />
  <xs:element name="configAllSantapAVTZones" type="tns:configAllSantapAVTZones" />
  <xs:element name="configAllSantapAVTZonesResponse" type="tns:configAllSantapAVTZonesResponse" />
  <xs:element name="configSantapAVTZonesForSplitter" type="tns:configSantapAVTZonesForSplitter" />
  <xs:element name="configSantapAVTZonesForSplitterResponse" type="tns:configSantapAVTZonesForSplitterResponse" />
  <xs:element name="consolidateSnapshots" type="tns:consolidateSnapshots" />
  <xs:element name="consolidateSnapshotsResponse" type="tns:consolidateSnapshotsResponse" />
  <xs:element name="createBookmark" type="tns:createBookmark" />
  <xs:element name="createBookmarkResponse" type="tns:createBookmarkResponse" />
  <xs:element name="createClariionRaidGroups" type="tns:createClariionRaidGroups" />
  <xs:element name="createClariionRaidGroupsResponse" type="tns:createClariionRaidGroupsResponse" />
  <xs:element name="detachPhoenixCluster" type="tns:detachPhoenixCluster" />
  <xs:element name="detachPhoenixClusterResponse" type="tns:detachPhoenixClusterResponse" />
  <xs:element name="detachVolumeFromSplitter" type="tns:detachVolumeFromSplitter" />
  <xs:element name="detachVolumeFromSplitterResponse" type="tns:detachVolumeFromSplitterResponse" />
  <xs:element name="detectBottlenecks" type="tns:detectBottlenecks" />
  <xs:element name="detectBottlenecksResponse" type="tns:detectBottlenecksResponse" />
  <xs:element name="disableConsistencyGroup" type="tns:disableConsistencyGroup" />
  <xs:element name="disableConsistencyGroupCopy" type="tns:disableConsistencyGroupCopy" />
  <xs:element name="disableConsistencyGroupCopyResponse" type="tns:disableConsistencyGroupCopyResponse" />
  <xs:element name="disableConsistencyGroupResponse" type="tns:disableConsistencyGroupResponse" />
  <xs:element name="disableFirstTimeWizard" type="tns:disableFirstTimeWizard" />
  <xs:element name="disableFirstTimeWizardResponse" type="tns:disableFirstTimeWizardResponse" />
  <xs:element name="disableImageAccess" type="tns:disableImageAccess" />
  <xs:element name="disableImageAccessResponse" type="tns:disableImageAccessResponse" />
  <xs:element name="disableLDAP" type="tns:disableLDAP" />
  <xs:element name="disableLDAPResponse" type="tns:disableLDAPResponse" />
  <xs:element name="disableSNMP" type="tns:disableSNMP" />
  <xs:element name="disableSNMPResponse" type="tns:disableSNMPResponse" />
  <xs:element name="disableSyslog" type="tns:disableSyslog" />
  <xs:element name="disableSyslogResponse" type="tns:disableSyslogResponse" />
  <xs:element name="disableSystemAlerts" type="tns:disableSystemAlerts" />
  <xs:element name="disableSystemAlertsResponse" type="tns:disableSystemAlertsResponse" />
  <xs:element name="disableSystemReport" type="tns:disableSystemReport" />
  <xs:element name="disableSystemReportResponse" type="tns:disableSystemReportResponse" />
  <xs:element name="enableConsistencyGroup" type="tns:enableConsistencyGroup" />
  <xs:element name="enableConsistencyGroupCopy" type="tns:enableConsistencyGroupCopy" />
  <xs:element name="enableConsistencyGroupCopyResponse" type="tns:enableConsistencyGroupCopyResponse" />
  <xs:element name="enableConsistencyGroupResponse" type="tns:enableConsistencyGroupResponse" />
  <xs:element name="enableDirectAccess" type="tns:enableDirectAccess" />
  <xs:element name="enableDirectAccessResponse" type="tns:enableDirectAccessResponse" />
  <xs:element name="enableImageAccess" type="tns:enableImageAccess" />
  <xs:element name="enableImageAccessResponse" type="tns:enableImageAccessResponse" />
  <xs:element name="enableImageAccessWithParams" type="tns:enableImageAccessWithParams" />
  <xs:element name="enableImageAccessWithParamsResponse" type="tns:enableImageAccessWithParamsResponse" />
  <xs:element name="enableLDAP" type="tns:enableLDAP" />
  <xs:element name="enableLDAPResponse" type="tns:enableLDAPResponse" />
  <xs:element name="enableSNMP" type="tns:enableSNMP" />
  <xs:element name="enableSNMPResponse" type="tns:enableSNMPResponse" />
  <xs:element name="enableSyslog" type="tns:enableSyslog" />
  <xs:element name="enableSyslogResponse" type="tns:enableSyslogResponse" />
  <xs:element name="enableSystemAlerts" type="tns:enableSystemAlerts" />
  <xs:element name="enableSystemAlertsResponse" type="tns:enableSystemAlertsResponse" />
  <xs:element name="enableSystemReport" type="tns:enableSystemReport" />
  <xs:element name="enableSystemReportResponse" type="tns:enableSystemReportResponse" />
  <xs:element name="exportConsolidatedStatisticsByTimeFrame" type="tns:exportConsolidatedStatisticsByTimeFrame" />
  <xs:element name="exportConsolidatedStatisticsByTimeFrameResponse" type="tns:exportConsolidatedStatisticsByTimeFrameResponse" />
  <xs:element name="exportConsolidatedStatisticsByTimeFrames" type="tns:exportConsolidatedStatisticsByTimeFrames" />
  <xs:element name="exportConsolidatedStatisticsByTimeFramesResponse" type="tns:exportConsolidatedStatisticsByTimeFramesResponse" />
  <xs:element name="exportStatistics" type="tns:exportStatistics" />
  <xs:element name="exportStatisticsResponse" type="tns:exportStatisticsResponse" />
  <xs:element name="exportStatisticsToDefaultFile" type="tns:exportStatisticsToDefaultFile" />
  <xs:element name="exportStatisticsToDefaultFileResponse" type="tns:exportStatisticsToDefaultFileResponse" />
  <xs:element name="failover" type="tns:failover" />
  <xs:element name="failoverResponse" type="tns:failoverResponse" />
  <xs:element name="finishRPAMaintenance" type="tns:finishRPAMaintenance" />
  <xs:element name="finishRPAMaintenanceResponse" type="tns:finishRPAMaintenanceResponse" />
  <xs:element name="finishSystemUpgrade" type="tns:finishSystemUpgrade" />
  <xs:element name="finishSystemUpgradeResponse" type="tns:finishSystemUpgradeResponse" />
  <xs:element name="forceLongInitialization" type="tns:forceLongInitialization" />
  <xs:element name="forceLongInitializationResponse" type="tns:forceLongInitializationResponse" />
  <xs:element name="generateCallHomeEvents" type="tns:generateCallHomeEvents" />
  <xs:element name="generateCallHomeEventsResponse" type="tns:generateCallHomeEventsResponse" />
  <xs:element name="getAccessIdsForSymmetrix" type="tns:getAccessIdsForSymmetrix" />
  <xs:element name="getAccessIdsForSymmetrixResponse" type="tns:getAccessIdsForSymmetrixResponse" />
  <xs:element name="getAccountSettings" type="tns:getAccountSettings" />
  <xs:element name="getAccountSettingsResponse" type="tns:getAccountSettingsResponse" />
  <xs:element name="getAccountState" type="tns:getAccountState" />
  <xs:element name="getAccountStateResponse" type="tns:getAccountStateResponse" />
  <xs:element name="getActivationCodeInfo" type="tns:getActivationCodeInfo" />
  <xs:element name="getActivationCodeInfoResponse" type="tns:getActivationCodeInfoResponse" />
  <xs:element name="getAllConsistencyGroups" type="tns:getAllConsistencyGroups" />
  <xs:element name="getAllConsistencyGroupsResponse" type="tns:getAllConsistencyGroupsResponse" />
  <xs:element name="getAllEventLogs" type="tns:getAllEventLogs" />
  <xs:element name="getAllEventLogsResponse" type="tns:getAllEventLogsResponse" />
  <xs:element name="getAllGroupCopiesProtectionWindows" type="tns:getAllGroupCopiesProtectionWindows" />
  <xs:element name="getAllGroupCopiesProtectionWindowsResponse" type="tns:getAllGroupCopiesProtectionWindowsResponse" />
  <xs:element name="getAllGroupSets" type="tns:getAllGroupSets" />
  <xs:element name="getAllGroupSetsResponse" type="tns:getAllGroupSetsResponse" />
  <xs:element name="getAllGroupsSettings" type="tns:getAllGroupsSettings" />
  <xs:element name="getAllGroupsSettingsResponse" type="tns:getAllGroupsSettingsResponse" />
  <xs:element name="getAllGroupsState" type="tns:getAllGroupsState" />
  <xs:element name="getAllGroupsStateResponse" type="tns:getAllGroupsStateResponse" />
  <xs:element name="getAllGroupsStatistics" type="tns:getAllGroupsStatistics" />
  <xs:element name="getAllGroupsStatisticsResponse" type="tns:getAllGroupsStatisticsResponse" />
  <xs:element name="getAllGroupsVolumeStates" type="tns:getAllGroupsVolumeStates" />
  <xs:element name="getAllGroupsVolumeStatesResponse" type="tns:getAllGroupsVolumeStatesResponse" />
  <xs:element name="getAllRPAStatistics" type="tns:getAllRPAStatistics" />
  <xs:element name="getAllRPAStatisticsResponse" type="tns:getAllRPAStatisticsResponse" />
  <xs:element name="getAllRecoverPointUsers" type="tns:getAllRecoverPointUsers" />
  <xs:element name="getAllRecoverPointUsersResponse" type="tns:getAllRecoverPointUsersResponse" />
  <xs:element name="getAllSSHKeys" type="tns:getAllSSHKeys" />
  <xs:element name="getAllSSHKeysResponse" type="tns:getAllSSHKeysResponse" />
  <xs:element name="getAllStatisticsCategories" type="tns:getAllStatisticsCategories" />
  <xs:element name="getAllStatisticsCategoriesResponse" type="tns:getAllStatisticsCategoriesResponse" />
  <xs:element name="getAllSystemEventLogsFilters" type="tns:getAllSystemEventLogsFilters" />
  <xs:element name="getAllSystemEventLogsFiltersResponse" type="tns:getAllSystemEventLogsFiltersResponse" />
  <xs:element name="getAvailableLongTermStatisticsTimeFrames" type="tns:getAvailableLongTermStatisticsTimeFrames" />
  <xs:element name="getAvailableLongTermStatisticsTimeFramesResponse" type="tns:getAvailableLongTermStatisticsTimeFramesResponse" />
  <xs:element name="getAvailablePhoenixClustersForSite" type="tns:getAvailablePhoenixClustersForSite" />
  <xs:element name="getAvailablePhoenixClustersForSiteResponse" type="tns:getAvailablePhoenixClustersForSiteResponse" />
  <xs:element name="getAvailableSiteClariionVolumes" type="tns:getAvailableSiteClariionVolumes" />
  <xs:element name="getAvailableSiteClariionVolumesResponse" type="tns:getAvailableSiteClariionVolumesResponse" />
  <xs:element name="getAvailableSiteTargets" type="tns:getAvailableSiteTargets" />
  <xs:element name="getAvailableSiteTargetsResponse" type="tns:getAvailableSiteTargetsResponse" />
  <xs:element name="getAvailableSplittersFromAllSites" type="tns:getAvailableSplittersFromAllSites" />
  <xs:element name="getAvailableSplittersFromAllSitesResponse" type="tns:getAvailableSplittersFromAllSitesResponse" />
  <xs:element name="getAvailableSplittersFromSite" type="tns:getAvailableSplittersFromSite" />
  <xs:element name="getAvailableSplittersFromSiteResponse" type="tns:getAvailableSplittersFromSiteResponse" />
  <xs:element name="getAvailableSplittersToAttachToVolume" type="tns:getAvailableSplittersToAttachToVolume" />
  <xs:element name="getAvailableSplittersToAttachToVolumeResponse" type="tns:getAvailableSplittersToAttachToVolumeResponse" />
  <xs:element name="getAvailableSymmetrixArrays" type="tns:getAvailableSymmetrixArrays" />
  <xs:element name="getAvailableSymmetrixArraysResponse" type="tns:getAvailableSymmetrixArraysResponse" />
  <xs:element name="getAvailableVolumes" type="tns:getAvailableVolumes" />
  <xs:element name="getAvailableVolumesResponse" type="tns:getAvailableVolumesResponse" />
  <xs:element name="getAvailableVolumesToAttachToSplitter" type="tns:getAvailableVolumesToAttachToSplitter" />
  <xs:element name="getAvailableVolumesToAttachToSplitterResponse" type="tns:getAvailableVolumesToAttachToSplitterResponse" />
  <xs:element name="getBrocadeSafeBindingsITLs" type="tns:getBrocadeSafeBindingsITLs" />
  <xs:element name="getBrocadeSafeBindingsITLsResponse" type="tns:getBrocadeSafeBindingsITLsResponse" />
  <xs:element name="getBrocadeSplitterInitiators" type="tns:getBrocadeSplitterInitiators" />
  <xs:element name="getBrocadeSplitterInitiatorsResponse" type="tns:getBrocadeSplitterInitiatorsResponse" />
  <xs:element name="getBrocadeSplittersInitiators" type="tns:getBrocadeSplittersInitiators" />
  <xs:element name="getBrocadeSplittersInitiatorsResponse" type="tns:getBrocadeSplittersInitiatorsResponse" />
  <xs:element name="getCallHomeEvents" type="tns:getCallHomeEvents" />
  <xs:element name="getCallHomeEventsResponse" type="tns:getCallHomeEventsResponse" />
  <xs:element name="getClariionVolumesContext" type="tns:getClariionVolumesContext" />
  <xs:element name="getClariionVolumesContextResponse" type="tns:getClariionVolumesContextResponse" />
  <xs:element name="getConflictingFullRecoverPointSettings" type="tns:getConflictingFullRecoverPointSettings" />
  <xs:element name="getConflictingFullRecoverPointSettingsResponse" type="tns:getConflictingFullRecoverPointSettingsResponse" />
  <xs:element name="getConflictingSystemSettings" type="tns:getConflictingSystemSettings" />
  <xs:element name="getConflictingSystemSettingsResponse" type="tns:getConflictingSystemSettingsResponse" />
  <xs:element name="getConnectionInfo" type="tns:getConnectionInfo" />
  <xs:element name="getConnectionInfoResponse" type="tns:getConnectionInfoResponse" />
  <xs:element name="getCurrentRPA" type="tns:getCurrentRPA" />
  <xs:element name="getCurrentRPAResponse" type="tns:getCurrentRPAResponse" />
  <xs:element name="getCurrentTime" type="tns:getCurrentTime" />
  <xs:element name="getCurrentTimeResponse" type="tns:getCurrentTimeResponse" />
  <xs:element name="getCurrentUserEventLogsFilter" type="tns:getCurrentUserEventLogsFilter" />
  <xs:element name="getCurrentUserEventLogsFilterResponse" type="tns:getCurrentUserEventLogsFilterResponse" />
  <xs:element name="getCurrentUserInformation" type="tns:getCurrentUserInformation" />
  <xs:element name="getCurrentUserInformationResponse" type="tns:getCurrentUserInformationResponse" />
  <xs:element name="getDefaultConsistencyGroupCopyPolicy" type="tns:getDefaultConsistencyGroupCopyPolicy" />
  <xs:element name="getDefaultConsistencyGroupCopyPolicyResponse" type="tns:getDefaultConsistencyGroupCopyPolicyResponse" />
  <xs:element name="getDefaultConsistencyGroupLinkPolicy" type="tns:getDefaultConsistencyGroupLinkPolicy" />
  <xs:element name="getDefaultConsistencyGroupLinkPolicyResponse" type="tns:getDefaultConsistencyGroupLinkPolicyResponse" />
  <xs:element name="getDefaultConsistencyGroupPolicy" type="tns:getDefaultConsistencyGroupPolicy" />
  <xs:element name="getDefaultConsistencyGroupPolicyResponse" type="tns:getDefaultConsistencyGroupPolicyResponse" />
  <xs:element name="getDefaultRolesNames" type="tns:getDefaultRolesNames" />
  <xs:element name="getDefaultRolesNamesResponse" type="tns:getDefaultRolesNamesResponse" />
  <xs:element name="getDefaultSystemGlobalPolicy" type="tns:getDefaultSystemGlobalPolicy" />
  <xs:element name="getDefaultSystemGlobalPolicyResponse" type="tns:getDefaultSystemGlobalPolicyResponse" />
  <xs:element name="getDefaultUserEventLogsFilter" type="tns:getDefaultUserEventLogsFilter" />
  <xs:element name="getDefaultUserEventLogsFilterResponse" type="tns:getDefaultUserEventLogsFilterResponse" />
  <xs:element name="getDefaultUsersNames" type="tns:getDefaultUsersNames" />
  <xs:element name="getDefaultUsersNamesResponse" type="tns:getDefaultUsersNamesResponse" />
  <xs:element name="getEventLogsByFilter" type="tns:getEventLogsByFilter" />
  <xs:element name="getEventLogsByFilterResponse" type="tns:getEventLogsByFilterResponse" />
  <xs:element name="getEventLogsWithLargerUID" type="tns:getEventLogsWithLargerUID" />
  <xs:element name="getEventLogsWithLargerUIDResponse" type="tns:getEventLogsWithLargerUIDResponse" />
  <xs:element name="getFullConsistencyGroupPolicy" type="tns:getFullConsistencyGroupPolicy" />
  <xs:element name="getFullConsistencyGroupPolicyResponse" type="tns:getFullConsistencyGroupPolicyResponse" />
  <xs:element name="getFullRecoverPointContext" type="tns:getFullRecoverPointContext" />
  <xs:element name="getFullRecoverPointContextResponse" type="tns:getFullRecoverPointContextResponse" />
  <xs:element name="getFullRecoverPointSettings" type="tns:getFullRecoverPointSettings" />
  <xs:element name="getFullRecoverPointSettingsContext" type="tns:getFullRecoverPointSettingsContext" />
  <xs:element name="getFullRecoverPointSettingsContextResponse" type="tns:getFullRecoverPointSettingsContextResponse" />
  <xs:element name="getFullRecoverPointSettingsResponse" type="tns:getFullRecoverPointSettingsResponse" />
  <xs:element name="getFullRecoverPointState" type="tns:getFullRecoverPointState" />
  <xs:element name="getFullRecoverPointStateContext" type="tns:getFullRecoverPointStateContext" />
  <xs:element name="getFullRecoverPointStateContextResponse" type="tns:getFullRecoverPointStateContextResponse" />
  <xs:element name="getFullRecoverPointStateResponse" type="tns:getFullRecoverPointStateResponse" />
  <xs:element name="getGroupCopyName" type="tns:getGroupCopyName" />
  <xs:element name="getGroupCopyNameResponse" type="tns:getGroupCopyNameResponse" />
  <xs:element name="getGroupCopySnapshots" type="tns:getGroupCopySnapshots" />
  <xs:element name="getGroupCopySnapshotsForTimeFrameAndName" type="tns:getGroupCopySnapshotsForTimeFrameAndName" />
  <xs:element name="getGroupCopySnapshotsForTimeFrameAndNameResponse" type="tns:getGroupCopySnapshotsForTimeFrameAndNameResponse" />
  <xs:element name="getGroupCopySnapshotsResponse" type="tns:getGroupCopySnapshotsResponse" />
  <xs:element name="getGroupName" type="tns:getGroupName" />
  <xs:element name="getGroupNameResponse" type="tns:getGroupNameResponse" />
  <xs:element name="getGroupSetName" type="tns:getGroupSetName" />
  <xs:element name="getGroupSetNameResponse" type="tns:getGroupSetNameResponse" />
  <xs:element name="getGroupSettings" type="tns:getGroupSettings" />
  <xs:element name="getGroupSettingsResponse" type="tns:getGroupSettingsResponse" />
  <xs:element name="getGroupSnapshots" type="tns:getGroupSnapshots" />
  <xs:element name="getGroupSnapshotsForTimeFrameAndName" type="tns:getGroupSnapshotsForTimeFrameAndName" />
  <xs:element name="getGroupSnapshotsForTimeFrameAndNameResponse" type="tns:getGroupSnapshotsForTimeFrameAndNameResponse" />
  <xs:element name="getGroupSnapshotsResponse" type="tns:getGroupSnapshotsResponse" />
  <xs:element name="getGroupState" type="tns:getGroupState" />
  <xs:element name="getGroupStateResponse" type="tns:getGroupStateResponse" />
  <xs:element name="getGroupStatistics" type="tns:getGroupStatistics" />
  <xs:element name="getGroupStatisticsResponse" type="tns:getGroupStatisticsResponse" />
  <xs:element name="getGroupVolumeStates" type="tns:getGroupVolumeStates" />
  <xs:element name="getGroupVolumeStatesResponse" type="tns:getGroupVolumeStatesResponse" />
  <xs:element name="getIRThrottlingPolicy" type="tns:getIRThrottlingPolicy" />
  <xs:element name="getIRThrottlingPolicyResponse" type="tns:getIRThrottlingPolicyResponse" />
  <xs:element name="getLDAPServerInfo" type="tns:getLDAPServerInfo" />
  <xs:element name="getLDAPServerInfoResponse" type="tns:getLDAPServerInfoResponse" />
  <xs:element name="getLDAPSettings" type="tns:getLDAPSettings" />
  <xs:element name="getLDAPSettingsResponse" type="tns:getLDAPSettingsResponse" />
  <xs:element name="getLicenseKeyInfo" type="tns:getLicenseKeyInfo" />
  <xs:element name="getLicenseKeyInfoResponse" type="tns:getLicenseKeyInfoResponse" />
  <xs:element name="getLocalSite" type="tns:getLocalSite" />
  <xs:element name="getLocalSiteResponse" type="tns:getLocalSiteResponse" />
  <xs:element name="getManagementSettings" type="tns:getManagementSettings" />
  <xs:element name="getManagementSettingsResponse" type="tns:getManagementSettingsResponse" />
  <xs:element name="getMonitoredParametersStatus" type="tns:getMonitoredParametersStatus" />
  <xs:element name="getMonitoredParametersStatusResponse" type="tns:getMonitoredParametersStatusResponse" />
  <xs:element name="getPhoenixClusterState" type="tns:getPhoenixClusterState" />
  <xs:element name="getPhoenixClusterStateResponse" type="tns:getPhoenixClusterStateResponse" />
  <xs:element name="getPhoenixClustersStateForAllSites" type="tns:getPhoenixClustersStateForAllSites" />
  <xs:element name="getPhoenixClustersStateForAllSitesResponse" type="tns:getPhoenixClustersStateForAllSitesResponse" />
  <xs:element name="getRPAState" type="tns:getRPAState" />
  <xs:element name="getRPAStateResponse" type="tns:getRPAStateResponse" />
  <xs:element name="getRPAsStateFromAllSites" type="tns:getRPAsStateFromAllSites" />
  <xs:element name="getRPAsStateFromAllSitesResponse" type="tns:getRPAsStateFromAllSitesResponse" />
  <xs:element name="getRPAsStateFromSite" type="tns:getRPAsStateFromSite" />
  <xs:element name="getRPAsStateFromSiteResponse" type="tns:getRPAsStateFromSiteResponse" />
  <xs:element name="getRecoverPointVersion" type="tns:getRecoverPointVersion" />
  <xs:element name="getRecoverPointVersionResponse" type="tns:getRecoverPointVersionResponse" />
  <xs:element name="getReplicationSetName" type="tns:getReplicationSetName" />
  <xs:element name="getReplicationSetNameResponse" type="tns:getReplicationSetNameResponse" />
  <xs:element name="getRepositoryVolumeState" type="tns:getRepositoryVolumeState" />
  <xs:element name="getRepositoryVolumeStateFromAllSites" type="tns:getRepositoryVolumeStateFromAllSites" />
  <xs:element name="getRepositoryVolumeStateFromAllSitesResponse" type="tns:getRepositoryVolumeStateFromAllSitesResponse" />
  <xs:element name="getRepositoryVolumeStateResponse" type="tns:getRepositoryVolumeStateResponse" />
  <xs:element name="getSNMPSettings" type="tns:getSNMPSettings" />
  <xs:element name="getSNMPSettingsResponse" type="tns:getSNMPSettingsResponse" />
  <xs:element name="getSantapView" type="tns:getSantapView" />
  <xs:element name="getSantapViewResponse" type="tns:getSantapViewResponse" />
  <xs:element name="getServerCharsetName" type="tns:getServerCharsetName" />
  <xs:element name="getServerCharsetNameResponse" type="tns:getServerCharsetNameResponse" />
  <xs:element name="getSiteClariionVolumes" type="tns:getSiteClariionVolumes" />
  <xs:element name="getSiteClariionVolumesResponse" type="tns:getSiteClariionVolumesResponse" />
  <xs:element name="getSiteSANVolumes" type="tns:getSiteSANVolumes" />
  <xs:element name="getSiteSANVolumesByVendorAndProduct" type="tns:getSiteSANVolumesByVendorAndProduct" />
  <xs:element name="getSiteSANVolumesByVendorAndProductResponse" type="tns:getSiteSANVolumesByVendorAndProductResponse" />
  <xs:element name="getSiteSANVolumesContext" type="tns:getSiteSANVolumesContext" />
  <xs:element name="getSiteSANVolumesContextResponse" type="tns:getSiteSANVolumesContextResponse" />
  <xs:element name="getSiteSANVolumesResponse" type="tns:getSiteSANVolumesResponse" />
  <xs:element name="getSiteStatistics" type="tns:getSiteStatistics" />
  <xs:element name="getSiteStatisticsResponse" type="tns:getSiteStatisticsResponse" />
  <xs:element name="getSpecificGroupsSettings" type="tns:getSpecificGroupsSettings" />
  <xs:element name="getSpecificGroupsSettingsResponse" type="tns:getSpecificGroupsSettingsResponse" />
  <xs:element name="getSpecificGroupsState" type="tns:getSpecificGroupsState" />
  <xs:element name="getSpecificGroupsStateResponse" type="tns:getSpecificGroupsStateResponse" />
  <xs:element name="getSpecificGroupsStatistics" type="tns:getSpecificGroupsStatistics" />
  <xs:element name="getSpecificGroupsStatisticsResponse" type="tns:getSpecificGroupsStatisticsResponse" />
  <xs:element name="getSpecificGroupsVolumeStates" type="tns:getSpecificGroupsVolumeStates" />
  <xs:element name="getSpecificGroupsVolumeStatesResponse" type="tns:getSpecificGroupsVolumeStatesResponse" />
  <xs:element name="getSplitterName" type="tns:getSplitterName" />
  <xs:element name="getSplitterNameResponse" type="tns:getSplitterNameResponse" />
  <xs:element name="getSplitterSANView" type="tns:getSplitterSANView" />
  <xs:element name="getSplitterSANViewResponse" type="tns:getSplitterSANViewResponse" />
  <xs:element name="getSplitterSettings" type="tns:getSplitterSettings" />
  <xs:element name="getSplitterSettingsResponse" type="tns:getSplitterSettingsResponse" />
  <xs:element name="getSplitterState" type="tns:getSplitterState" />
  <xs:element name="getSplitterStateResponse" type="tns:getSplitterStateResponse" />
  <xs:element name="getSplittersSANViewFromAllSites" type="tns:getSplittersSANViewFromAllSites" />
  <xs:element name="getSplittersSANViewFromAllSitesResponse" type="tns:getSplittersSANViewFromAllSitesResponse" />
  <xs:element name="getSplittersSANViewFromSite" type="tns:getSplittersSANViewFromSite" />
  <xs:element name="getSplittersSANViewFromSiteResponse" type="tns:getSplittersSANViewFromSiteResponse" />
  <xs:element name="getSplittersSettingsFromAllSites" type="tns:getSplittersSettingsFromAllSites" />
  <xs:element name="getSplittersSettingsFromAllSitesResponse" type="tns:getSplittersSettingsFromAllSitesResponse" />
  <xs:element name="getSplittersSettingsFromSite" type="tns:getSplittersSettingsFromSite" />
  <xs:element name="getSplittersSettingsFromSiteResponse" type="tns:getSplittersSettingsFromSiteResponse" />
  <xs:element name="getSplittersStateFromAllSites" type="tns:getSplittersStateFromAllSites" />
  <xs:element name="getSplittersStateFromAllSitesResponse" type="tns:getSplittersStateFromAllSitesResponse" />
  <xs:element name="getSplittersStateFromSite" type="tns:getSplittersStateFromSite" />
  <xs:element name="getSplittersStateFromSiteResponse" type="tns:getSplittersStateFromSiteResponse" />
  <xs:element name="getSplittersWithUnattachedVolumes" type="tns:getSplittersWithUnattachedVolumes" />
  <xs:element name="getSplittersWithUnattachedVolumesResponse" type="tns:getSplittersWithUnattachedVolumesResponse" />
  <xs:element name="getSymmetrixGateKeepersInfo" type="tns:getSymmetrixGateKeepersInfo" />
  <xs:element name="getSymmetrixGateKeepersInfoResponse" type="tns:getSymmetrixGateKeepersInfoResponse" />
  <xs:element name="getSyslogSettings" type="tns:getSyslogSettings" />
  <xs:element name="getSyslogSettingsResponse" type="tns:getSyslogSettingsResponse" />
  <xs:element name="getSystemAlertsSettings" type="tns:getSystemAlertsSettings" />
  <xs:element name="getSystemAlertsSettingsResponse" type="tns:getSystemAlertsSettingsResponse" />
  <xs:element name="getSystemGlobalPolicy" type="tns:getSystemGlobalPolicy" />
  <xs:element name="getSystemGlobalPolicyResponse" type="tns:getSystemGlobalPolicyResponse" />
  <xs:element name="getSystemInternalConfigParams" type="tns:getSystemInternalConfigParams" />
  <xs:element name="getSystemInternalConfigParamsConflicts" type="tns:getSystemInternalConfigParamsConflicts" />
  <xs:element name="getSystemInternalConfigParamsConflictsResponse" type="tns:getSystemInternalConfigParamsConflictsResponse" />
  <xs:element name="getSystemInternalConfigParamsResponse" type="tns:getSystemInternalConfigParamsResponse" />
  <xs:element name="getSystemMiscellaneousSettings" type="tns:getSystemMiscellaneousSettings" />
  <xs:element name="getSystemMiscellaneousSettingsResponse" type="tns:getSystemMiscellaneousSettingsResponse" />
  <xs:element name="getSystemReportSettings" type="tns:getSystemReportSettings" />
  <xs:element name="getSystemReportSettingsResponse" type="tns:getSystemReportSettingsResponse" />
  <xs:element name="getSystemSettings" type="tns:getSystemSettings" />
  <xs:element name="getSystemSettingsConflicts" type="tns:getSystemSettingsConflicts" />
  <xs:element name="getSystemSettingsConflictsResponse" type="tns:getSystemSettingsConflictsResponse" />
  <xs:element name="getSystemSettingsResponse" type="tns:getSystemSettingsResponse" />
  <xs:element name="getSystemStatistics" type="tns:getSystemStatistics" />
  <xs:element name="getSystemStatisticsResponse" type="tns:getSystemStatisticsResponse" />
  <xs:element name="getSystemStatus" type="tns:getSystemStatus" />
  <xs:element name="getSystemStatusContext" type="tns:getSystemStatusContext" />
  <xs:element name="getSystemStatusContextResponse" type="tns:getSystemStatusContextResponse" />
  <xs:element name="getSystemStatusResponse" type="tns:getSystemStatusResponse" />
  <xs:element name="getSystemVersionStateCommand" type="tns:getSystemVersionStateCommand" />
  <xs:element name="getSystemVersionStateCommandResponse" type="tns:getSystemVersionStateCommandResponse" />
  <xs:element name="getTimeSettings" type="tns:getTimeSettings" />
  <xs:element name="getTimeSettingsResponse" type="tns:getTimeSettingsResponse" />
  <xs:element name="getTrackedEventIDs" type="tns:getTrackedEventIDs" />
  <xs:element name="getTrackedEventIDsResponse" type="tns:getTrackedEventIDsResponse" />
  <xs:element name="getTransactionResult" type="tns:getTransactionResult" />
  <xs:element name="getTransactionResultResponse" type="tns:getTransactionResultResponse" />
  <xs:element name="getTransactionStatus" type="tns:getTransactionStatus" />
  <xs:element name="getTransactionStatusResponse" type="tns:getTransactionStatusResponse" />
  <xs:element name="getUserDefinedProperties" type="tns:getUserDefinedProperties" />
  <xs:element name="getUserDefinedPropertiesResponse" type="tns:getUserDefinedPropertiesResponse" />
  <xs:element name="getUserRoles" type="tns:getUserRoles" />
  <xs:element name="getUserRolesResponse" type="tns:getUserRolesResponse" />
  <xs:element name="getUserVolumeSettings" type="tns:getUserVolumeSettings" />
  <xs:element name="getUserVolumeSettingsResponse" type="tns:getUserVolumeSettingsResponse" />
  <xs:element name="getUsersSettings" type="tns:getUsersSettings" />
  <xs:element name="getUsersSettingsResponse" type="tns:getUsersSettingsResponse" />
  <xs:element name="getVCCertificateInformation" type="tns:getVCCertificateInformation" />
  <xs:element name="getVCCertificateInformationResponse" type="tns:getVCCertificateInformationResponse" />
  <xs:element name="getVCenterServer" type="tns:getVCenterServer" />
  <xs:element name="getVCenterServerFilters" type="tns:getVCenterServerFilters" />
  <xs:element name="getVCenterServerFiltersFromSite" type="tns:getVCenterServerFiltersFromSite" />
  <xs:element name="getVCenterServerFiltersFromSiteResponse" type="tns:getVCenterServerFiltersFromSiteResponse" />
  <xs:element name="getVCenterServerFiltersResponse" type="tns:getVCenterServerFiltersResponse" />
  <xs:element name="getVCenterServerResponse" type="tns:getVCenterServerResponse" />
  <xs:element name="getVCenterServerView" type="tns:getVCenterServerView" />
  <xs:element name="getVCenterServerViewContext" type="tns:getVCenterServerViewContext" />
  <xs:element name="getVCenterServerViewContextResponse" type="tns:getVCenterServerViewContextResponse" />
  <xs:element name="getVCenterServerViewResponse" type="tns:getVCenterServerViewResponse" />
  <xs:element name="getVCenterServersFromAllSites" type="tns:getVCenterServersFromAllSites" />
  <xs:element name="getVCenterServersFromAllSitesResponse" type="tns:getVCenterServersFromAllSitesResponse" />
  <xs:element name="getVCenterServersFromSite" type="tns:getVCenterServersFromSite" />
  <xs:element name="getVCenterServersFromSiteResponse" type="tns:getVCenterServersFromSiteResponse" />
  <xs:element name="getVCenterServersViewFromAllSites" type="tns:getVCenterServersViewFromAllSites" />
  <xs:element name="getVCenterServersViewFromAllSitesResponse" type="tns:getVCenterServersViewFromAllSitesResponse" />
  <xs:element name="getVCenterServersViewFromSite" type="tns:getVCenterServersViewFromSite" />
  <xs:element name="getVCenterServersViewFromSiteResponse" type="tns:getVCenterServersViewFromSiteResponse" />
  <xs:element name="getVCenterServersViewSettings" type="tns:getVCenterServersViewSettings" />
  <xs:element name="getVCenterServersViewSettingsResponse" type="tns:getVCenterServersViewSettingsResponse" />
  <xs:element name="getVPLEXCertificateInformation" type="tns:getVPLEXCertificateInformation" />
  <xs:element name="getVPLEXCertificateInformationResponse" type="tns:getVPLEXCertificateInformationResponse" />
  <xs:element name="getVolumeInformation" type="tns:getVolumeInformation" />
  <xs:element name="getVolumeInformationResponse" type="tns:getVolumeInformationResponse" />
  <xs:element name="markGroupCopyVolumesAsClean" type="tns:markGroupCopyVolumesAsClean" />
  <xs:element name="markGroupCopyVolumesAsCleanResponse" type="tns:markGroupCopyVolumesAsCleanResponse" />
  <xs:element name="markGroupCopyVolumesAsDirty" type="tns:markGroupCopyVolumesAsDirty" />
  <xs:element name="markGroupCopyVolumesAsDirtyResponse" type="tns:markGroupCopyVolumesAsDirtyResponse" />
  <xs:element name="markGroupVolumesAsClean" type="tns:markGroupVolumesAsClean" />
  <xs:element name="markGroupVolumesAsCleanResponse" type="tns:markGroupVolumesAsCleanResponse" />
  <xs:element name="markGroupVolumesAsDirty" type="tns:markGroupVolumesAsDirty" />
  <xs:element name="markGroupVolumesAsDirtyResponse" type="tns:markGroupVolumesAsDirtyResponse" />
  <xs:element name="moveToImage" type="tns:moveToImage" />
  <xs:element name="moveToImageResponse" type="tns:moveToImageResponse" />
  <xs:element name="pauseGroupCopyTransfer" type="tns:pauseGroupCopyTransfer" />
  <xs:element name="pauseGroupCopyTransferResponse" type="tns:pauseGroupCopyTransferResponse" />
  <xs:element name="pauseGroupTransfer" type="tns:pauseGroupTransfer" />
  <xs:element name="pauseGroupTransferResponse" type="tns:pauseGroupTransferResponse" />
  <xs:element name="recoverProduction" type="tns:recoverProduction" />
  <xs:element name="recoverProductionResponse" type="tns:recoverProductionResponse" />
  <xs:element name="refreshSantapView" type="tns:refreshSantapView" />
  <xs:element name="refreshSantapViewResponse" type="tns:refreshSantapViewResponse" />
  <xs:element name="releaseSiteManagementIP" type="tns:releaseSiteManagementIP" />
  <xs:element name="releaseSiteManagementIPResponse" type="tns:releaseSiteManagementIPResponse" />
  <xs:element name="removeAllVCenterServerFilters" type="tns:removeAllVCenterServerFilters" />
  <xs:element name="removeAllVCenterServerFiltersResponse" type="tns:removeAllVCenterServerFiltersResponse" />
  <xs:element name="removeBrocadeBinding" type="tns:removeBrocadeBinding" />
  <xs:element name="removeBrocadeBindingResponse" type="tns:removeBrocadeBindingResponse" />
  <xs:element name="removeBrocadeBindings" type="tns:removeBrocadeBindings" />
  <xs:element name="removeBrocadeBindingsForInitiator" type="tns:removeBrocadeBindingsForInitiator" />
  <xs:element name="removeBrocadeBindingsForInitiatorResponse" type="tns:removeBrocadeBindingsForInitiatorResponse" />
  <xs:element name="removeBrocadeBindingsResponse" type="tns:removeBrocadeBindingsResponse" />
  <xs:element name="removeBrocadeSafeBinding" type="tns:removeBrocadeSafeBinding" />
  <xs:element name="removeBrocadeSafeBindingResponse" type="tns:removeBrocadeSafeBindingResponse" />
  <xs:element name="removeBrocadeSafeBindings" type="tns:removeBrocadeSafeBindings" />
  <xs:element name="removeBrocadeSafeBindingsResponse" type="tns:removeBrocadeSafeBindingsResponse" />
  <xs:element name="removeConsistencyGroup" type="tns:removeConsistencyGroup" />
  <xs:element name="removeConsistencyGroupCopy" type="tns:removeConsistencyGroupCopy" />
  <xs:element name="removeConsistencyGroupCopyResponse" type="tns:removeConsistencyGroupCopyResponse" />
  <xs:element name="removeConsistencyGroupResponse" type="tns:removeConsistencyGroupResponse" />
  <xs:element name="removeConsistencyGroupSet" type="tns:removeConsistencyGroupSet" />
  <xs:element name="removeConsistencyGroupSetResponse" type="tns:removeConsistencyGroupSetResponse" />
  <xs:element name="removeJournalVolume" type="tns:removeJournalVolume" />
  <xs:element name="removeJournalVolumeResponse" type="tns:removeJournalVolumeResponse" />
  <xs:element name="removeRecoverPointUser" type="tns:removeRecoverPointUser" />
  <xs:element name="removeRecoverPointUserResponse" type="tns:removeRecoverPointUserResponse" />
  <xs:element name="removeReplicationSet" type="tns:removeReplicationSet" />
  <xs:element name="removeReplicationSetResponse" type="tns:removeReplicationSetResponse" />
  <xs:element name="removeSNMPUser" type="tns:removeSNMPUser" />
  <xs:element name="removeSNMPUserResponse" type="tns:removeSNMPUserResponse" />
  <xs:element name="removeSSHKey" type="tns:removeSSHKey" />
  <xs:element name="removeSSHKeyResponse" type="tns:removeSSHKeyResponse" />
  <xs:element name="removeSplitter" type="tns:removeSplitter" />
  <xs:element name="removeSplitterResponse" type="tns:removeSplitterResponse" />
  <xs:element name="removeSystemEventLogsFilter" type="tns:removeSystemEventLogsFilter" />
  <xs:element name="removeSystemEventLogsFilterResponse" type="tns:removeSystemEventLogsFilterResponse" />
  <xs:element name="removeUserRole" type="tns:removeUserRole" />
  <xs:element name="removeUserRoleResponse" type="tns:removeUserRoleResponse" />
  <xs:element name="removeUserVolume" type="tns:removeUserVolume" />
  <xs:element name="removeUserVolumeResponse" type="tns:removeUserVolumeResponse" />
  <xs:element name="removeVCenterServer" type="tns:removeVCenterServer" />
  <xs:element name="removeVCenterServerFilter" type="tns:removeVCenterServerFilter" />
  <xs:element name="removeVCenterServerFilterResponse" type="tns:removeVCenterServerFilterResponse" />
  <xs:element name="removeVCenterServerResponse" type="tns:removeVCenterServerResponse" />
  <xs:element name="renameConsistencyGroup" type="tns:renameConsistencyGroup" />
  <xs:element name="renameConsistencyGroupCopy" type="tns:renameConsistencyGroupCopy" />
  <xs:element name="renameConsistencyGroupCopyResponse" type="tns:renameConsistencyGroupCopyResponse" />
  <xs:element name="renameConsistencyGroupResponse" type="tns:renameConsistencyGroupResponse" />
  <xs:element name="renameReplicationSet" type="tns:renameReplicationSet" />
  <xs:element name="renameReplicationSetResponse" type="tns:renameReplicationSetResponse" />
  <xs:element name="renameSystemEventLogsFilter" type="tns:renameSystemEventLogsFilter" />
  <xs:element name="renameSystemEventLogsFilterResponse" type="tns:renameSystemEventLogsFilterResponse" />
  <xs:element name="rescanSANSplittersInAllSites" type="tns:rescanSANSplittersInAllSites" />
  <xs:element name="rescanSANSplittersInAllSitesResponse" type="tns:rescanSANSplittersInAllSitesResponse" />
  <xs:element name="rescanSANSplittersInSite" type="tns:rescanSANSplittersInSite" />
  <xs:element name="rescanSANSplittersInSiteResponse" type="tns:rescanSANSplittersInSiteResponse" />
  <xs:element name="rescanSANVolumesInAllSites" type="tns:rescanSANVolumesInAllSites" />
  <xs:element name="rescanSANVolumesInAllSitesResponse" type="tns:rescanSANVolumesInAllSitesResponse" />
  <xs:element name="rescanSANVolumesInSite" type="tns:rescanSANVolumesInSite" />
  <xs:element name="rescanSANVolumesInSiteResponse" type="tns:rescanSANVolumesInSiteResponse" />
  <xs:element name="rescanSpecificSplittersVolumesConnections" type="tns:rescanSpecificSplittersVolumesConnections" />
  <xs:element name="rescanSpecificSplittersVolumesConnectionsResponse" type="tns:rescanSpecificSplittersVolumesConnectionsResponse" />
  <xs:element name="rescanSplitterVolumesConnections" type="tns:rescanSplitterVolumesConnections" />
  <xs:element name="rescanSplitterVolumesConnectionsResponse" type="tns:rescanSplitterVolumesConnectionsResponse" />
  <xs:element name="rescanSplittersVolumesConnectionsInAllSites" type="tns:rescanSplittersVolumesConnectionsInAllSites" />
  <xs:element name="rescanSplittersVolumesConnectionsInAllSitesResponse" type="tns:rescanSplittersVolumesConnectionsInAllSitesResponse" />
  <xs:element name="rescanSplittersVolumesConnectionsInSite" type="tns:rescanSplittersVolumesConnectionsInSite" />
  <xs:element name="rescanSplittersVolumesConnectionsInSiteResponse" type="tns:rescanSplittersVolumesConnectionsInSiteResponse" />
  <xs:element name="resizeReplicationSet" type="tns:resizeReplicationSet" />
  <xs:element name="resizeReplicationSetResponse" type="tns:resizeReplicationSetResponse" />
  <xs:element name="resolveSettings" type="tns:resolveSettings" />
  <xs:element name="resolveSettingsResponse" type="tns:resolveSettingsResponse" />
  <xs:element name="resumeConsistencyGroup" type="tns:resumeConsistencyGroup" />
  <xs:element name="resumeConsistencyGroupResponse" type="tns:resumeConsistencyGroupResponse" />
  <xs:element name="resumeProduction" type="tns:resumeProduction" />
  <xs:element name="resumeProductionResponse" type="tns:resumeProductionResponse" />
  <xs:element name="rollToImage" type="tns:rollToImage" />
  <xs:element name="rollToImageResponse" type="tns:rollToImageResponse" />
  <xs:element name="runCallHomeEvent" type="tns:runCallHomeEvent" />
  <xs:element name="runCallHomeEventResponse" type="tns:runCallHomeEventResponse" />
  <xs:element name="setAccountInformation" type="tns:setAccountInformation" />
  <xs:element name="setAccountInformationResponse" type="tns:setAccountInformationResponse" />
  <xs:element name="setAttachedVolumesForSplitter" type="tns:setAttachedVolumesForSplitter" />
  <xs:element name="setAttachedVolumesForSplitterResponse" type="tns:setAttachedVolumesForSplitterResponse" />
  <xs:element name="setBookmarkConsolidationPolicy" type="tns:setBookmarkConsolidationPolicy" />
  <xs:element name="setBookmarkConsolidationPolicyResponse" type="tns:setBookmarkConsolidationPolicyResponse" />
  <xs:element name="setBookmarkFrequency" type="tns:setBookmarkFrequency" />
  <xs:element name="setBookmarkFrequencyResponse" type="tns:setBookmarkFrequencyResponse" />
  <xs:element name="setBrocadeBindings" type="tns:setBrocadeBindings" />
  <xs:element name="setBrocadeBindingsResponse" type="tns:setBrocadeBindingsResponse" />
  <xs:element name="setCallHomeEvents" type="tns:setCallHomeEvents" />
  <xs:element name="setCallHomeEventsResponse" type="tns:setCallHomeEventsResponse" />
  <xs:element name="setConsistencyGroupCopyPolicy" type="tns:setConsistencyGroupCopyPolicy" />
  <xs:element name="setConsistencyGroupCopyPolicyResponse" type="tns:setConsistencyGroupCopyPolicyResponse" />
  <xs:element name="setConsistencyGroupLinkPolicy" type="tns:setConsistencyGroupLinkPolicy" />
  <xs:element name="setConsistencyGroupLinkPolicyResponse" type="tns:setConsistencyGroupLinkPolicyResponse" />
  <xs:element name="setConsistencyGroupPolicy" type="tns:setConsistencyGroupPolicy" />
  <xs:element name="setConsistencyGroupPolicyResponse" type="tns:setConsistencyGroupPolicyResponse" />
  <xs:element name="setConsistencyGroupSetSettings" type="tns:setConsistencyGroupSetSettings" />
  <xs:element name="setConsistencyGroupSetSettingsResponse" type="tns:setConsistencyGroupSetSettingsResponse" />
  <xs:element name="setConsistencyGroupSettings" type="tns:setConsistencyGroupSettings" />
  <xs:element name="setConsistencyGroupSettingsResponse" type="tns:setConsistencyGroupSettingsResponse" />
  <xs:element name="setCurrentUserEventLogsFilter" type="tns:setCurrentUserEventLogsFilter" />
  <xs:element name="setCurrentUserEventLogsFilterResponse" type="tns:setCurrentUserEventLogsFilterResponse" />
  <xs:element name="setFullConsistencyGroupPolicy" type="tns:setFullConsistencyGroupPolicy" />
  <xs:element name="setFullConsistencyGroupPolicyResponse" type="tns:setFullConsistencyGroupPolicyResponse" />
  <xs:element name="setIRThrottlingPolicy" type="tns:setIRThrottlingPolicy" />
  <xs:element name="setIRThrottlingPolicyResponse" type="tns:setIRThrottlingPolicyResponse" />
  <xs:element name="setLDAPSettings" type="tns:setLDAPSettings" />
  <xs:element name="setLDAPSettingsResponse" type="tns:setLDAPSettingsResponse" />
  <xs:element name="setLicenseKey" type="tns:setLicenseKey" />
  <xs:element name="setLicenseKeyResponse" type="tns:setLicenseKeyResponse" />
  <xs:element name="setPassword" type="tns:setPassword" />
  <xs:element name="setPasswordResponse" type="tns:setPasswordResponse" />
  <xs:element name="setProductionAtRemoteCopyAndRemoveLocalCopy" type="tns:setProductionAtRemoteCopyAndRemoveLocalCopy" />
  <xs:element name="setProductionAtRemoteCopyAndRemoveLocalCopyResponse" type="tns:setProductionAtRemoteCopyAndRemoveLocalCopyResponse" />
  <xs:element name="setProductionCopy" type="tns:setProductionCopy" />
  <xs:element name="setProductionCopyResponse" type="tns:setProductionCopyResponse" />
  <xs:element name="setSNMPSettings" type="tns:setSNMPSettings" />
  <xs:element name="setSNMPSettingsResponse" type="tns:setSNMPSettingsResponse" />
  <xs:element name="setSignaturesUsageDuringInitialization" type="tns:setSignaturesUsageDuringInitialization" />
  <xs:element name="setSignaturesUsageDuringInitializationResponse" type="tns:setSignaturesUsageDuringInitializationResponse" />
  <xs:element name="setSiteName" type="tns:setSiteName" />
  <xs:element name="setSiteNameResponse" type="tns:setSiteNameResponse" />
  <xs:element name="setSiteTimeZone" type="tns:setSiteTimeZone" />
  <xs:element name="setSiteTimeZoneResponse" type="tns:setSiteTimeZoneResponse" />
  <xs:element name="setSplitterAutoRegisterRPAsInitiatorsPolicy" type="tns:setSplitterAutoRegisterRPAsInitiatorsPolicy" />
  <xs:element name="setSplitterAutoRegisterRPAsInitiatorsPolicyResponse" type="tns:setSplitterAutoRegisterRPAsInitiatorsPolicyResponse" />
  <xs:element name="setSplitterCredentials" type="tns:setSplitterCredentials" />
  <xs:element name="setSplitterCredentialsResponse" type="tns:setSplitterCredentialsResponse" />
  <xs:element name="setSyslogSettings" type="tns:setSyslogSettings" />
  <xs:element name="setSyslogSettingsResponse" type="tns:setSyslogSettingsResponse" />
  <xs:element name="setSystemAlertsSettings" type="tns:setSystemAlertsSettings" />
  <xs:element name="setSystemAlertsSettingsResponse" type="tns:setSystemAlertsSettingsResponse" />
  <xs:element name="setSystemEventLogsFilters" type="tns:setSystemEventLogsFilters" />
  <xs:element name="setSystemEventLogsFiltersResponse" type="tns:setSystemEventLogsFiltersResponse" />
  <xs:element name="setSystemGlobalPolicy" type="tns:setSystemGlobalPolicy" />
  <xs:element name="setSystemGlobalPolicyResponse" type="tns:setSystemGlobalPolicyResponse" />
  <xs:element name="setSystemMiscellaneousSettings" type="tns:setSystemMiscellaneousSettings" />
  <xs:element name="setSystemMiscellaneousSettingsResponse" type="tns:setSystemMiscellaneousSettingsResponse" />
  <xs:element name="setSystemReportSettings" type="tns:setSystemReportSettings" />
  <xs:element name="setSystemReportSettingsResponse" type="tns:setSystemReportSettingsResponse" />
  <xs:element name="setTimeSettings" type="tns:setTimeSettings" />
  <xs:element name="setTimeSettingsResponse" type="tns:setTimeSettingsResponse" />
  <xs:element name="setUserDefinedProperties" type="tns:setUserDefinedProperties" />
  <xs:element name="setUserDefinedPropertiesResponse" type="tns:setUserDefinedPropertiesResponse" />
  <xs:element name="setUsersSettings" type="tns:setUsersSettings" />
  <xs:element name="setUsersSettingsResponse" type="tns:setUsersSettingsResponse" />
  <xs:element name="setVCenterServerCredentials" type="tns:setVCenterServerCredentials" />
  <xs:element name="setVCenterServerCredentialsResponse" type="tns:setVCenterServerCredentialsResponse" />
  <xs:element name="setVCenterServerFilterForUnknownLuns" type="tns:setVCenterServerFilterForUnknownLuns" />
  <xs:element name="setVCenterServerFilterForUnknownLunsResponse" type="tns:setVCenterServerFilterForUnknownLunsResponse" />
  <xs:element name="setVCenterServerFilters" type="tns:setVCenterServerFilters" />
  <xs:element name="setVCenterServerFiltersResponse" type="tns:setVCenterServerFiltersResponse" />
  <xs:element name="setVCenterServersViewSettings" type="tns:setVCenterServersViewSettings" />
  <xs:element name="setVCenterServersViewSettingsResponse" type="tns:setVCenterServersViewSettingsResponse" />
  <xs:element name="startGroupCopyTransfer" type="tns:startGroupCopyTransfer" />
  <xs:element name="startGroupCopyTransferResponse" type="tns:startGroupCopyTransferResponse" />
  <xs:element name="startGroupTransfer" type="tns:startGroupTransfer" />
  <xs:element name="startGroupTransferResponse" type="tns:startGroupTransferResponse" />
  <xs:element name="startRPAMaintenance" type="tns:startRPAMaintenance" />
  <xs:element name="startRPAMaintenanceResponse" type="tns:startRPAMaintenanceResponse" />
  <xs:element name="startSystemUpgrade" type="tns:startSystemUpgrade" />
  <xs:element name="startSystemUpgradeResponse" type="tns:startSystemUpgradeResponse" />
  <xs:element name="suspendConsistencyGroup" type="tns:suspendConsistencyGroup" />
  <xs:element name="suspendConsistencyGroupResponse" type="tns:suspendConsistencyGroupResponse" />
  <xs:element name="testCurrentLDAPSettings" type="tns:testCurrentLDAPSettings" />
  <xs:element name="testCurrentLDAPSettingsResponse" type="tns:testCurrentLDAPSettingsResponse" />
  <xs:element name="testLDAPSettings" type="tns:testLDAPSettings" />
  <xs:element name="testLDAPSettingsResponse" type="tns:testLDAPSettingsResponse" />
  <xs:element name="testSyRConnectivity" type="tns:testSyRConnectivity" />
  <xs:element name="testSyRConnectivityResponse" type="tns:testSyRConnectivityResponse" />
  <xs:element name="undoGroupWrites" type="tns:undoGroupWrites" />
  <xs:element name="undoGroupWritesResponse" type="tns:undoGroupWritesResponse" />
  <xs:element name="unregulateAllConsistencyGroupCopies" type="tns:unregulateAllConsistencyGroupCopies" />
  <xs:element name="unregulateAllConsistencyGroupCopiesResponse" type="tns:unregulateAllConsistencyGroupCopiesResponse" />
  <xs:element name="validateAbortSnapshotsConsolidation" type="tns:validateAbortSnapshotsConsolidation" />
  <xs:element name="validateAbortSnapshotsConsolidationResponse" type="tns:validateAbortSnapshotsConsolidationResponse" />
  <xs:element name="validateAbortTransaction" type="tns:validateAbortTransaction" />
  <xs:element name="validateAbortTransactionResponse" type="tns:validateAbortTransactionResponse" />
  <xs:element name="validateAddAndAttachUserVolume" type="tns:validateAddAndAttachUserVolume" />
  <xs:element name="validateAddAndAttachUserVolumeResponse" type="tns:validateAddAndAttachUserVolumeResponse" />
  <xs:element name="validateAddConsistencyGroup" type="tns:validateAddConsistencyGroup" />
  <xs:element name="validateAddConsistencyGroupAndCopiesCommand" type="tns:validateAddConsistencyGroupAndCopiesCommand" />
  <xs:element name="validateAddConsistencyGroupAndCopiesCommandResponse" type="tns:validateAddConsistencyGroupAndCopiesCommandResponse" />
  <xs:element name="validateAddConsistencyGroupCopy" type="tns:validateAddConsistencyGroupCopy" />
  <xs:element name="validateAddConsistencyGroupCopyResponse" type="tns:validateAddConsistencyGroupCopyResponse" />
  <xs:element name="validateAddConsistencyGroupCopyWithDefaultPolicy" type="tns:validateAddConsistencyGroupCopyWithDefaultPolicy" />
  <xs:element name="validateAddConsistencyGroupCopyWithDefaultPolicyResponse" type="tns:validateAddConsistencyGroupCopyWithDefaultPolicyResponse" />
  <xs:element name="validateAddConsistencyGroupResponse" type="tns:validateAddConsistencyGroupResponse" />
  <xs:element name="validateAddConsistencyGroupSet" type="tns:validateAddConsistencyGroupSet" />
  <xs:element name="validateAddConsistencyGroupSetResponse" type="tns:validateAddConsistencyGroupSetResponse" />
  <xs:element name="validateAddConsistencyGroupWithDefaultPolicy" type="tns:validateAddConsistencyGroupWithDefaultPolicy" />
  <xs:element name="validateAddConsistencyGroupWithDefaultPolicyResponse" type="tns:validateAddConsistencyGroupWithDefaultPolicyResponse" />
  <xs:element name="validateAddDistributedConsistencyGroupWithDefaultPolicy" type="tns:validateAddDistributedConsistencyGroupWithDefaultPolicy" />
  <xs:element name="validateAddDistributedConsistencyGroupWithDefaultPolicyResponse" type="tns:validateAddDistributedConsistencyGroupWithDefaultPolicyResponse" />
  <xs:element name="validateAddJournalVolume" type="tns:validateAddJournalVolume" />
  <xs:element name="validateAddJournalVolumeResponse" type="tns:validateAddJournalVolumeResponse" />
  <xs:element name="validateAddRecoverPointUser" type="tns:validateAddRecoverPointUser" />
  <xs:element name="validateAddRecoverPointUserResponse" type="tns:validateAddRecoverPointUserResponse" />
  <xs:element name="validateAddReplicationSet" type="tns:validateAddReplicationSet" />
  <xs:element name="validateAddReplicationSetResponse" type="tns:validateAddReplicationSetResponse" />
  <xs:element name="validateAddSystemEventLogsFilter" type="tns:validateAddSystemEventLogsFilter" />
  <xs:element name="validateAddSystemEventLogsFilterResponse" type="tns:validateAddSystemEventLogsFilterResponse" />
  <xs:element name="validateAddUserRole" type="tns:validateAddUserRole" />
  <xs:element name="validateAddUserRoleResponse" type="tns:validateAddUserRoleResponse" />
  <xs:element name="validateAddUserVolume" type="tns:validateAddUserVolume" />
  <xs:element name="validateAddUserVolumeResponse" type="tns:validateAddUserVolumeResponse" />
  <xs:element name="validateAddVCenterServer" type="tns:validateAddVCenterServer" />
  <xs:element name="validateAddVCenterServerResponse" type="tns:validateAddVCenterServerResponse" />
  <xs:element name="validateAttachVolumeToSplitter" type="tns:validateAttachVolumeToSplitter" />
  <xs:element name="validateAttachVolumeToSplitterResponse" type="tns:validateAttachVolumeToSplitterResponse" />
  <xs:element name="validateClearSplitterCredentials" type="tns:validateClearSplitterCredentials" />
  <xs:element name="validateClearSplitterCredentialsResponse" type="tns:validateClearSplitterCredentialsResponse" />
  <xs:element name="validateConsolidateSnapshots" type="tns:validateConsolidateSnapshots" />
  <xs:element name="validateConsolidateSnapshotsResponse" type="tns:validateConsolidateSnapshotsResponse" />
  <xs:element name="validateDetachVolumeFromSplitter" type="tns:validateDetachVolumeFromSplitter" />
  <xs:element name="validateDetachVolumeFromSplitterResponse" type="tns:validateDetachVolumeFromSplitterResponse" />
  <xs:element name="validateDisableConsistencyGroup" type="tns:validateDisableConsistencyGroup" />
  <xs:element name="validateDisableConsistencyGroupCopy" type="tns:validateDisableConsistencyGroupCopy" />
  <xs:element name="validateDisableConsistencyGroupCopyResponse" type="tns:validateDisableConsistencyGroupCopyResponse" />
  <xs:element name="validateDisableConsistencyGroupResponse" type="tns:validateDisableConsistencyGroupResponse" />
  <xs:element name="validateDisableImageAccess" type="tns:validateDisableImageAccess" />
  <xs:element name="validateDisableImageAccessResponse" type="tns:validateDisableImageAccessResponse" />
  <xs:element name="validateDisableSystemReport" type="tns:validateDisableSystemReport" />
  <xs:element name="validateDisableSystemReportResponse" type="tns:validateDisableSystemReportResponse" />
  <xs:element name="validateEnableConsistencyGroup" type="tns:validateEnableConsistencyGroup" />
  <xs:element name="validateEnableConsistencyGroupCopy" type="tns:validateEnableConsistencyGroupCopy" />
  <xs:element name="validateEnableConsistencyGroupCopyResponse" type="tns:validateEnableConsistencyGroupCopyResponse" />
  <xs:element name="validateEnableConsistencyGroupResponse" type="tns:validateEnableConsistencyGroupResponse" />
  <xs:element name="validateEnableDirectAccess" type="tns:validateEnableDirectAccess" />
  <xs:element name="validateEnableDirectAccessResponse" type="tns:validateEnableDirectAccessResponse" />
  <xs:element name="validateEnableImageAccess" type="tns:validateEnableImageAccess" />
  <xs:element name="validateEnableImageAccessResponse" type="tns:validateEnableImageAccessResponse" />
  <xs:element name="validateEnableImageAccessWithParams" type="tns:validateEnableImageAccessWithParams" />
  <xs:element name="validateEnableImageAccessWithParamsResponse" type="tns:validateEnableImageAccessWithParamsResponse" />
  <xs:element name="validateEnableSystemReport" type="tns:validateEnableSystemReport" />
  <xs:element name="validateEnableSystemReportResponse" type="tns:validateEnableSystemReportResponse" />
  <xs:element name="validateFailover" type="tns:validateFailover" />
  <xs:element name="validateFailoverResponse" type="tns:validateFailoverResponse" />
  <xs:element name="validateForceLongInitialization" type="tns:validateForceLongInitialization" />
  <xs:element name="validateForceLongInitializationResponse" type="tns:validateForceLongInitializationResponse" />
  <xs:element name="validateMoveToImage" type="tns:validateMoveToImage" />
  <xs:element name="validateMoveToImageResponse" type="tns:validateMoveToImageResponse" />
  <xs:element name="validatePauseGroupCopyTransfer" type="tns:validatePauseGroupCopyTransfer" />
  <xs:element name="validatePauseGroupCopyTransferResponse" type="tns:validatePauseGroupCopyTransferResponse" />
  <xs:element name="validatePauseGroupTransfer" type="tns:validatePauseGroupTransfer" />
  <xs:element name="validatePauseGroupTransferResponse" type="tns:validatePauseGroupTransferResponse" />
  <xs:element name="validateRecoverProduction" type="tns:validateRecoverProduction" />
  <xs:element name="validateRecoverProductionResponse" type="tns:validateRecoverProductionResponse" />
  <xs:element name="validateRemoveConsistencyGroupCopy" type="tns:validateRemoveConsistencyGroupCopy" />
  <xs:element name="validateRemoveConsistencyGroupCopyResponse" type="tns:validateRemoveConsistencyGroupCopyResponse" />
  <xs:element name="validateRemoveJournalVolume" type="tns:validateRemoveJournalVolume" />
  <xs:element name="validateRemoveJournalVolumeResponse" type="tns:validateRemoveJournalVolumeResponse" />
  <xs:element name="validateRemoveRecoverPointUser" type="tns:validateRemoveRecoverPointUser" />
  <xs:element name="validateRemoveRecoverPointUserResponse" type="tns:validateRemoveRecoverPointUserResponse" />
  <xs:element name="validateRemoveReplicationSet" type="tns:validateRemoveReplicationSet" />
  <xs:element name="validateRemoveReplicationSetResponse" type="tns:validateRemoveReplicationSetResponse" />
  <xs:element name="validateRemoveSplitter" type="tns:validateRemoveSplitter" />
  <xs:element name="validateRemoveSplitterResponse" type="tns:validateRemoveSplitterResponse" />
  <xs:element name="validateRemoveSystemEventLogsFilter" type="tns:validateRemoveSystemEventLogsFilter" />
  <xs:element name="validateRemoveSystemEventLogsFilterResponse" type="tns:validateRemoveSystemEventLogsFilterResponse" />
  <xs:element name="validateRemoveUserRole" type="tns:validateRemoveUserRole" />
  <xs:element name="validateRemoveUserRoleResponse" type="tns:validateRemoveUserRoleResponse" />
  <xs:element name="validateRemoveUserVolume" type="tns:validateRemoveUserVolume" />
  <xs:element name="validateRemoveUserVolumeResponse" type="tns:validateRemoveUserVolumeResponse" />
  <xs:element name="validateRenameConsistencyGroup" type="tns:validateRenameConsistencyGroup" />
  <xs:element name="validateRenameConsistencyGroupCopy" type="tns:validateRenameConsistencyGroupCopy" />
  <xs:element name="validateRenameConsistencyGroupCopyResponse" type="tns:validateRenameConsistencyGroupCopyResponse" />
  <xs:element name="validateRenameConsistencyGroupResponse" type="tns:validateRenameConsistencyGroupResponse" />
  <xs:element name="validateRenameReplicationSet" type="tns:validateRenameReplicationSet" />
  <xs:element name="validateRenameReplicationSetResponse" type="tns:validateRenameReplicationSetResponse" />
  <xs:element name="validateRenameSystemEventLogsFilter" type="tns:validateRenameSystemEventLogsFilter" />
  <xs:element name="validateRenameSystemEventLogsFilterResponse" type="tns:validateRenameSystemEventLogsFilterResponse" />
  <xs:element name="validateResizeReplicationSet" type="tns:validateResizeReplicationSet" />
  <xs:element name="validateResizeReplicationSetResponse" type="tns:validateResizeReplicationSetResponse" />
  <xs:element name="validateResumeProduction" type="tns:validateResumeProduction" />
  <xs:element name="validateResumeProductionResponse" type="tns:validateResumeProductionResponse" />
  <xs:element name="validateRollToImage" type="tns:validateRollToImage" />
  <xs:element name="validateRollToImageResponse" type="tns:validateRollToImageResponse" />
  <xs:element name="validateSetAccountInformation" type="tns:validateSetAccountInformation" />
  <xs:element name="validateSetAccountInformationResponse" type="tns:validateSetAccountInformationResponse" />
  <xs:element name="validateSetAttachedVolumesForSplitter" type="tns:validateSetAttachedVolumesForSplitter" />
  <xs:element name="validateSetAttachedVolumesForSplitterResponse" type="tns:validateSetAttachedVolumesForSplitterResponse" />
  <xs:element name="validateSetConsistencyGroupCopyPolicy" type="tns:validateSetConsistencyGroupCopyPolicy" />
  <xs:element name="validateSetConsistencyGroupCopyPolicyResponse" type="tns:validateSetConsistencyGroupCopyPolicyResponse" />
  <xs:element name="validateSetConsistencyGroupLinkPolicy" type="tns:validateSetConsistencyGroupLinkPolicy" />
  <xs:element name="validateSetConsistencyGroupLinkPolicyResponse" type="tns:validateSetConsistencyGroupLinkPolicyResponse" />
  <xs:element name="validateSetConsistencyGroupPolicy" type="tns:validateSetConsistencyGroupPolicy" />
  <xs:element name="validateSetConsistencyGroupPolicyResponse" type="tns:validateSetConsistencyGroupPolicyResponse" />
  <xs:element name="validateSetConsistencyGroupSettings" type="tns:validateSetConsistencyGroupSettings" />
  <xs:element name="validateSetConsistencyGroupSettingsResponse" type="tns:validateSetConsistencyGroupSettingsResponse" />
  <xs:element name="validateSetFullConsistencyGroupPolicy" type="tns:validateSetFullConsistencyGroupPolicy" />
  <xs:element name="validateSetFullConsistencyGroupPolicyResponse" type="tns:validateSetFullConsistencyGroupPolicyResponse" />
  <xs:element name="validateSetLicenseKey" type="tns:validateSetLicenseKey" />
  <xs:element name="validateSetLicenseKeyResponse" type="tns:validateSetLicenseKeyResponse" />
  <xs:element name="validateSetProductionAtRemoteCopyAndRemoveLocalCopy" type="tns:validateSetProductionAtRemoteCopyAndRemoveLocalCopy" />
  <xs:element name="validateSetProductionAtRemoteCopyAndRemoveLocalCopyResponse" type="tns:validateSetProductionAtRemoteCopyAndRemoveLocalCopyResponse" />
  <xs:element name="validateSetProductionCopy" type="tns:validateSetProductionCopy" />
  <xs:element name="validateSetProductionCopyResponse" type="tns:validateSetProductionCopyResponse" />
  <xs:element name="validateSetSplitterCredentials" type="tns:validateSetSplitterCredentials" />
  <xs:element name="validateSetSplitterCredentialsResponse" type="tns:validateSetSplitterCredentialsResponse" />
  <xs:element name="validateSetSystemEventLogsFilters" type="tns:validateSetSystemEventLogsFilters" />
  <xs:element name="validateSetSystemEventLogsFiltersResponse" type="tns:validateSetSystemEventLogsFiltersResponse" />
  <xs:element name="validateSetSystemMiscellaneousSettings" type="tns:validateSetSystemMiscellaneousSettings" />
  <xs:element name="validateSetSystemMiscellaneousSettingsResponse" type="tns:validateSetSystemMiscellaneousSettingsResponse" />
  <xs:element name="validateSetSystemReportSettings" type="tns:validateSetSystemReportSettings" />
  <xs:element name="validateSetSystemReportSettingsResponse" type="tns:validateSetSystemReportSettingsResponse" />
  <xs:element name="validateSetUsersSettings" type="tns:validateSetUsersSettings" />
  <xs:element name="validateSetUsersSettingsResponse" type="tns:validateSetUsersSettingsResponse" />
  <xs:element name="validateSetVCenterServerCredentials" type="tns:validateSetVCenterServerCredentials" />
  <xs:element name="validateSetVCenterServerCredentialsResponse" type="tns:validateSetVCenterServerCredentialsResponse" />
  <xs:element name="validateStartGroupCopyTransfer" type="tns:validateStartGroupCopyTransfer" />
  <xs:element name="validateStartGroupCopyTransferResponse" type="tns:validateStartGroupCopyTransferResponse" />
  <xs:element name="validateStartGroupTransfer" type="tns:validateStartGroupTransfer" />
  <xs:element name="validateStartGroupTransferResponse" type="tns:validateStartGroupTransferResponse" />
  <xs:element name="validateUndoGroupWrites" type="tns:validateUndoGroupWrites" />
  <xs:element name="validateUndoGroupWritesResponse" type="tns:validateUndoGroupWritesResponse" />
  <xs:element name="verifyConsistencyGroupState" type="tns:verifyConsistencyGroupState" />
  <xs:element name="verifyConsistencyGroupStateResponse" type="tns:verifyConsistencyGroupStateResponse" />
  <xs:element name="verifyConsistencyGroupStateWithDefaultTimeout" type="tns:verifyConsistencyGroupStateWithDefaultTimeout" />
  <xs:element name="verifyConsistencyGroupStateWithDefaultTimeoutResponse" type="tns:verifyConsistencyGroupStateWithDefaultTimeoutResponse" />
  <xs:element name="verifyExistingSplitterCredentials" type="tns:verifyExistingSplitterCredentials" />
  <xs:element name="verifyExistingSplitterCredentialsResponse" type="tns:verifyExistingSplitterCredentialsResponse" />
  <xs:element name="verifyGroupCopySnapshots" type="tns:verifyGroupCopySnapshots" />
  <xs:element name="verifyGroupCopySnapshotsResponse" type="tns:verifyGroupCopySnapshotsResponse" />
  <xs:element name="verifyGroupCopySnapshotsWithDefaultTimeout" type="tns:verifyGroupCopySnapshotsWithDefaultTimeout" />
  <xs:element name="verifyGroupCopySnapshotsWithDefaultTimeoutResponse" type="tns:verifyGroupCopySnapshotsWithDefaultTimeoutResponse" />
  <xs:element name="verifyRPAState" type="tns:verifyRPAState" />
  <xs:element name="verifyRPAStateResponse" type="tns:verifyRPAStateResponse" />
  <xs:element name="verifyRPAStateWithDefaultTimeout" type="tns:verifyRPAStateWithDefaultTimeout" />
  <xs:element name="verifyRPAStateWithDefaultTimeoutResponse" type="tns:verifyRPAStateWithDefaultTimeoutResponse" />
  <xs:element name="verifySplitterCredentials" type="tns:verifySplitterCredentials" />
  <xs:element name="verifySplitterCredentialsResponse" type="tns:verifySplitterCredentialsResponse" />
  <xs:element name="verifySplitterState" type="tns:verifySplitterState" />
  <xs:element name="verifySplitterStateResponse" type="tns:verifySplitterStateResponse" />
  <xs:element name="verifySplitterStateWithDefaultTimeout" type="tns:verifySplitterStateWithDefaultTimeout" />
  <xs:element name="verifySplitterStateWithDefaultTimeoutResponse" type="tns:verifySplitterStateWithDefaultTimeoutResponse" />
  <xs:complexType name="vnxClasses">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="fileSystemExtendedInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="fileSystemInformation" type="tns:fileSystemInformation" />
      <xs:element name="hasProtectedFiles" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="mountInformationList" nillable="true" type="tns:mountInformation" />
      <xs:element name="storageUsed" type="xs:long" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="unmountedShareInformationList" nillable="true" type="tns:shareInformation" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="fileSystemInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="defaultDataMover" type="xs:string" />
      <xs:element minOccurs="0" name="defaultMountPath" type="xs:string" />
      <xs:element minOccurs="0" name="fileSystemUID" type="tns:fileSystemUID" />
      <xs:element minOccurs="0" name="name" type="xs:string" />
      <xs:element name="size" type="xs:long" />
      <xs:element name="VDM" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="volumes" nillable="true" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="fileSystemUID">
    <xs:sequence>
      <xs:element name="id" type="xs:long" />
      <xs:element minOccurs="0" name="vnxUID" type="tns:vnxUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vnxUID">
    <xs:sequence>
      <xs:element minOccurs="0" name="id" type="xs:string" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteUID">
    <xs:sequence>
      <xs:element name="id" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deviceUID">
    <xs:sequence>
      <xs:element name="id" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="mountInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="dataMover" type="xs:string" />
      <xs:element minOccurs="0" name="mountPath" type="xs:string" />
      <xs:element name="readOnly" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="sharesInfo" nillable="true" type="tns:shareInformation" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shareInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="dataMover" type="xs:string" />
      <xs:element minOccurs="0" name="sharePath" type="xs:string" />
      <xs:element minOccurs="0" name="shareType" type="tns:shareType" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="fileSystemView">
    <xs:sequence>
      <xs:element minOccurs="0" name="connectivityStatus" type="tns:connectivityStatus" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="dateMovers" nillable="true" type="tns:dataMoverView" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="fileSystemsExtendedInformation" nillable="true" type="tns:fileSystemExtendedInformation" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="storagePools" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="vdms" nillable="true" type="tns:dataMoverView" />
      <xs:element minOccurs="0" name="vnxUID" type="tns:vnxUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="dataMoverView">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="ipAddresses" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="name" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteFileSystemView">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="fileSystemViews" nillable="true" type="tns:fileSystemView" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteFileSystemViewContext">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:functionalAPIContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="site" type="tns:siteUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="functionalAPIContext" abstract="true">
    <xs:sequence>
      <xs:element name="globalContext" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="clariionVolumesContext">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:functionalAPIContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="site" type="tns:siteUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="systemStatusContext">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:functionalAPIContext">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="fullRecoverPointStateContext">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:functionalAPIContext">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="siteSANVolumesContext">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:functionalAPIContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="site" type="tns:siteUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="fullRecoverPointSettingsContext">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:functionalAPIContext">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="vCenterServerViewContext">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:functionalAPIContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="site" type="tns:siteUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="fullRecoverPointContext">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:functionalAPIContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="fullSettingsContext" type="tns:fullRecoverPointSettingsContext" />
          <xs:element minOccurs="0" name="fullStateContext" type="tns:fullRecoverPointStateContext" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="sitesClariionVolumesContexts" nillable="true" type="tns:clariionVolumesContext" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="sitesSANVolumesContexts" nillable="true" type="tns:siteSANVolumesContext" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="sitesVCentersServersContexts" nillable="true" type="tns:vCenterServerViewContext" />
          <xs:element minOccurs="0" name="systemStatusContext" type="tns:systemStatusContext" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="vnxServer">
    <xs:sequence>
      <xs:element minOccurs="0" name="authenticationType" type="tns:authenticationType" />
      <xs:element name="certificateConfigured" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="endPoints" nillable="true" type="tns:vnxEndPoint" />
      <xs:element minOccurs="0" name="username" type="xs:string" />
      <xs:element minOccurs="0" name="vnxUID" type="tns:vnxUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vnxEndPoint">
    <xs:sequence>
      <xs:element minOccurs="0" name="ip" type="xs:string" />
      <xs:element name="port" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vnxLoginInformation">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="endPoints" nillable="true" type="tns:vnxEndPoint" />
      <xs:element minOccurs="0" name="vnxCredentials" type="tns:vnxCredentials" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vnxCredentials">
    <xs:sequence>
      <xs:element minOccurs="0" name="authenticationType" type="tns:authenticationType" />
      <xs:element minOccurs="0" name="certificate" type="xs:string" />
      <xs:element minOccurs="0" name="password" type="xs:base64Binary" />
      <xs:element minOccurs="0" name="username" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRecoverProduction">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupCopyUID">
    <xs:sequence>
      <xs:element name="groupCopyID" type="xs:int" />
      <xs:element minOccurs="0" name="groupUID" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupUID">
    <xs:sequence>
      <xs:element name="id" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRecoverProductionResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="FunctionalAPIActionFailedException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="FunctionalAPIInternalError">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="FunctionalAPIValidationException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addBrocadeSafeBinding">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="binding" type="tns:brocadeSplitterBinding" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="splitterUID">
    <xs:sequence>
      <xs:element name="id" type="xs:long" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" name="splitterType" type="tns:splitterType" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="brocadeSplitterBinding">
    <xs:sequence>
      <xs:element name="boundedEntityWWN" type="xs:long" />
      <xs:element name="enabled" type="xs:boolean" />
      <xs:element name="hostInitiatorWWN" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addBrocadeSafeBindingResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="removeAllVCenterServerFilters">
    <xs:sequence>
      <xs:element minOccurs="0" name="vCenterServer" type="tns:vCenterServerUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vCenterServerUID">
    <xs:sequence>
      <xs:element minOccurs="0" name="ip" type="xs:string" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeAllVCenterServerFiltersResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:vCenterServerFilters" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vCenterServerFilters">
    <xs:sequence>
      <xs:element name="filterUnknownLuns" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="filters" nillable="true" type="tns:vCenterServerFilter" />
      <xs:element minOccurs="0" name="VCenterServer" type="tns:vCenterServerUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vCenterServerFilter" abstract="true">
    <xs:sequence>
      <xs:element minOccurs="0" name="filterType" type="tns:vCenterServerFilterType" />
      <xs:element minOccurs="0" name="filteredEntityName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vCenterServerESXFilter">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:vCenterServerFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="ip" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="vCenterServerLunFilter">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:vCenterServerFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="lunID" type="tns:deviceUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="vCenterServerVMFilter">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:vCenterServerFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="ip" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="getSystemMiscellaneousSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemMiscellaneousSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemMiscellaneousSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="systemMiscellaneousSettings">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpasMultipathMonitoring" nillable="true" type="tns:siteRPAMultipathMonitoring" />
      <xs:element minOccurs="0" name="securityLevel" type="tns:systemSecurityLevel" />
      <xs:element name="useAutomaticSplitterInfoCollection" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteRPAMultipathMonitoring">
    <xs:sequence>
      <xs:element name="monitoringSplitters" type="xs:boolean" />
      <xs:element name="monitoringStorage" type="xs:boolean" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validatePauseGroupCopyTransfer">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validatePauseGroupCopyTransferResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setConsistencyGroupLinkPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupLink" type="tns:consistencyGroupLinkUID" />
      <xs:element minOccurs="0" name="newPolicy" type="tns:consistencyGroupLinkPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupLinkUID">
    <xs:sequence>
      <xs:element minOccurs="0" name="firstCopyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="groupUID" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="secondCopyUID" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupLinkPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="advancedPolicy" type="tns:linkAdvancedPolicy" />
      <xs:element minOccurs="0" name="protectionPolicy" type="tns:linkProtectionPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="linkAdvancedPolicy">
    <xs:sequence>
      <xs:element name="performLongInitialization" type="xs:boolean" />
      <xs:element minOccurs="0" name="snapshotGranularity" type="tns:snapshotGranularity" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="linkProtectionPolicy">
    <xs:sequence>
      <xs:element name="bandwidthLimit" type="xs:double" />
      <xs:element minOccurs="0" name="bandwidthPriority" type="tns:priority" />
      <xs:element minOccurs="0" name="compression" type="tns:wanCompression" />
      <xs:element name="deduplication" type="xs:boolean" />
      <xs:element name="measureLagToTargetRPA" type="xs:boolean" />
      <xs:element minOccurs="0" name="protectionType" type="tns:protectionMode" />
      <xs:element name="replicatingOverWAN" type="xs:boolean" />
      <xs:element minOccurs="0" name="rpoPolicy" type="tns:rpoPolicy" />
      <xs:element minOccurs="0" name="syncReplicationLatencyThresholds" type="tns:syncReplicationThreshold" />
      <xs:element minOccurs="0" name="syncReplicationThroughputThresholds" type="tns:syncReplicationThreshold" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rpoPolicy">
    <xs:sequence>
      <xs:element name="allowRegulation" type="xs:boolean" />
      <xs:element minOccurs="0" name="maximumAllowedLag" type="tns:quantity" />
      <xs:element minOccurs="0" name="minimizationType" type="tns:rpoMinimizationType" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="quantity">
    <xs:sequence>
      <xs:element minOccurs="0" name="type" type="tns:quantityType" />
      <xs:element name="value" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="syncReplicationThreshold">
    <xs:sequence>
      <xs:element minOccurs="0" name="resumeSyncReplicationBelow" type="tns:quantity" />
      <xs:element minOccurs="0" name="startAsyncReplicationAbove" type="tns:quantity" />
      <xs:element name="thresholdEnabled" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setConsistencyGroupLinkPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="rescanSANSplittersInAllSites">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="rescanSANSplittersInAllSitesResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getVCenterServer">
    <xs:sequence>
      <xs:element minOccurs="0" name="vCenterServer" type="tns:vCenterServerUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVCenterServerResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:vCenterServer" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vCenterServer">
    <xs:sequence>
      <xs:element name="certificateConfigured" type="xs:boolean" />
      <xs:element name="port" type="xs:int" />
      <xs:element minOccurs="0" name="userName" type="xs:string" />
      <xs:element minOccurs="0" name="VCenterServerUID" type="tns:vCenterServerUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeSSHKey">
    <xs:sequence>
      <xs:element minOccurs="0" name="key" type="tns:sshKey" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="sshKey">
    <xs:sequence>
      <xs:element minOccurs="0" name="name" type="xs:string" />
      <xs:element minOccurs="0" name="value" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeSSHKeyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setConsistencyGroupSetSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupSetSettings" type="tns:consistencyGroupSetSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupSetSettings">
    <xs:sequence>
      <xs:element name="bookmarkFrequency" type="xs:long" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupsUIDs" nillable="true" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="name" type="xs:string" />
      <xs:element minOccurs="0" name="setUID" type="tns:consistencyGroupSetUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupSetUID">
    <xs:sequence>
      <xs:element name="id" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setConsistencyGroupSetSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="disableFirstTimeWizard">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="disableFirstTimeWizardResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="balanceLoadWithGroupsToExclude">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupsToExclude" type="tns:consistencyGroupUID" />
      <xs:element name="applyRecommendation" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="balanceLoadWithGroupsToExcludeResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="transactionID">
    <xs:sequence>
      <xs:element name="id" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getRepositoryVolumeStateFromAllSites">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getRepositoryVolumeStateFromAllSitesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:repositoryVolumeState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="repositoryVolumeState">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:volumeState">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="volumeState" abstract="true">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpasAccessStatus" nillable="true" type="tns:volumeRPAAccessStatus" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
      <xs:element minOccurs="0" name="volumeType" type="tns:volumeType" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="volumeRPAAccessStatus">
    <xs:sequence>
      <xs:element minOccurs="0" name="accessStatus" type="tns:volumeStatus" />
      <xs:element minOccurs="0" name="rpaUID" type="tns:rpaUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="volumeStatus">
    <xs:sequence>
      <xs:element minOccurs="0" name="accessStatus" type="tns:volumeAccessStatus" />
      <xs:element name="multipathingProblems" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rpaUID">
    <xs:sequence>
      <xs:element name="rpaNumber" type="xs:int" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="journalVolumeState">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:volumeState">
        <xs:sequence>
          <xs:element minOccurs="0" name="groupCopyUID" type="tns:consistencyGroupCopyUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="userVolumeState">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:volumeState">
        <xs:sequence>
          <xs:element minOccurs="0" name="groupCopyUID" type="tns:consistencyGroupCopyUID" />
          <xs:element minOccurs="0" name="replicationSetUID" type="tns:replicationSetUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="replicationSetUID">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupUID" type="tns:consistencyGroupUID" />
      <xs:element name="id" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="runCallHomeEvent">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="runCallHomeEventResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setProductionCopy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setProductionCopyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSplittersSANViewFromSite">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSplittersSANViewFromSiteResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteSplittersSANView" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteSplittersSANView">
    <xs:sequence>
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splittersSANView" nillable="true" type="tns:splitterSANView" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="splitterSANView">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitterUID" type="tns:splitterUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="volumes" nillable="true" type="tns:splitterVolumeSANInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="splitterVolumeSANInfo">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:splitterVolume">
        <xs:sequence>
          <xs:element minOccurs="0" name="sanInfo" type="tns:volumeSANInfo" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="splitterVolume">
    <xs:sequence>
      <xs:element minOccurs="0" name="deviceUID" type="tns:deviceUID" />
      <xs:element minOccurs="0" name="splitterUID" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="volumeSANInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="channel" type="xs:int" />
      <xs:element minOccurs="0" name="lun" type="xs:int" />
      <xs:element minOccurs="0" name="path" type="xs:string" />
      <xs:element minOccurs="0" name="target" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addSplitter">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitterInfo" type="tns:splitterInfo" />
      <xs:element name="isBootFromSAN" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="splitterInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitterName" type="xs:string" />
      <xs:element minOccurs="0" name="splitterUID" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addSplitterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateRollToImage">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRollToImageResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getPhoenixClustersStateForAllSites">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getPhoenixClustersStateForAllSitesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:phoenixClusterState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="phoenixClusterState">
    <xs:sequence>
      <xs:element minOccurs="0" name="availableDisk" type="xs:long" />
      <xs:element minOccurs="0" name="clusterName" type="xs:string" />
      <xs:element name="diskCapacity" type="xs:long" />
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element minOccurs="0" name="status" type="tns:phoenixClusterStatus" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecificGroupsStatistics">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groups" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecificGroupsStatisticsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:consistencyGroupStatistics" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupStatistics">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="consistencyGroupCopyStatistics" nillable="true" type="tns:consistencyGroupCopyStatistics" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="consistencyGroupLinkStatistics" nillable="true" type="tns:consistencyGroupLinkStatistics" />
      <xs:element minOccurs="0" name="consistencyGroupUID" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupCopyStatistics">
    <xs:sequence>
      <xs:element name="averageIncomingThroughput" type="xs:long" />
      <xs:element name="averageIncomingWrites" type="xs:long" />
      <xs:element minOccurs="0" name="copyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element name="incomingThroughput" type="xs:long" />
      <xs:element name="incomingWrites" type="xs:long" />
      <xs:element minOccurs="0" name="journalStatistics" type="tns:consistencyGroupCopyJournalStatistics" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupCopyJournalStatistics">
    <xs:sequence>
      <xs:element name="actualJournalSizeInBytes" type="xs:long" />
      <xs:element name="actualJournalUsageInBytes" type="xs:long" />
      <xs:element minOccurs="0" name="consolidationStatistics" type="tns:snapshotConsolidationStatistics" />
      <xs:element minOccurs="0" name="distributionFinished" type="xs:boolean" />
      <xs:element name="fastForward" type="xs:boolean" />
      <xs:element minOccurs="0" name="imageAccessSizeLeftInBytes" type="xs:long" />
      <xs:element minOccurs="0" name="imageAccessTimeLeftInSeconds" type="xs:long" />
      <xs:element minOccurs="0" name="journalLagInBytes" type="xs:long" />
      <xs:element minOccurs="0" name="movingFrom" type="tns:recoverPointTimeStamp" />
      <xs:element minOccurs="0" name="movingTo" type="tns:recoverPointTimeStamp" />
      <xs:element minOccurs="0" name="tspUsageInBytes" type="xs:long" />
      <xs:element minOccurs="0" name="tspUsagePercentage" type="xs:double" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="snapshotConsolidationStatistics">
    <xs:sequence>
      <xs:element name="percentageOfSavedSpace" type="xs:double" />
      <xs:element name="savedSpace" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="recoverPointTimeStamp">
    <xs:sequence>
      <xs:element name="timeInMicros" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupLinkStatistics">
    <xs:sequence>
      <xs:element minOccurs="0" name="initStatistics" type="tns:consistencyGroupLinkInitStatistics" />
      <xs:element minOccurs="0" name="linkUID" type="tns:consistencyGroupLinkUID" />
      <xs:element minOccurs="0" name="pipeStatistics" type="tns:consistencyGroupLinkPipeStatistics" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupLinkInitStatistics">
    <xs:sequence>
      <xs:element name="initCompletionPortion" type="xs:double" />
      <xs:element name="initIncomingThroughput" type="xs:long" />
      <xs:element name="initOutgoingThroughput" type="xs:long" />
      <xs:element name="numberOfGrids" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupLinkPipeStatistics">
    <xs:sequence>
      <xs:element name="averageDeduplicationRatio" type="xs:double" />
      <xs:element name="averageJournalCompressionRatio" type="xs:double" />
      <xs:element name="compressionRatio" type="xs:double" />
      <xs:element name="deduplicationRatio" type="xs:double" />
      <xs:element minOccurs="0" name="detachData" type="xs:long" />
      <xs:element minOccurs="0" name="detachDataRate" type="xs:long" />
      <xs:element minOccurs="0" name="lag" type="tns:statisticsCounters" />
      <xs:element name="numberOfGrids" type="xs:int" />
      <xs:element name="outgoingThroughput" type="xs:long" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="outgoingThroughputPerRPA" nillable="true" type="tns:outgoingThroughputStatistics" />
      <xs:element minOccurs="0" name="replicationMode" type="tns:replicationMode" />
      <xs:element name="syncRemoteLink" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="statisticsCounters">
    <xs:sequence>
      <xs:element name="dataCounter" type="xs:long" />
      <xs:element name="timeCounter" type="xs:long" />
      <xs:element name="transactionCounter" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="outgoingThroughputStatistics">
    <xs:sequence>
      <xs:element name="numberOfGrids" type="xs:int" />
      <xs:element name="outgoingThroughput" type="xs:long" />
      <xs:element minOccurs="0" name="rpaUID" type="tns:rpaUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifySplitterStateWithDefaultTimeout">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="state" type="tns:verifySplitterStateParam" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifySplitterStateParam">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupCopiesToCheck" nillable="true" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="rpasConnectivityStatus" type="tns:generalStatus" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpasForConnectivityCheck" nillable="true" type="tns:rpaUID" />
      <xs:element minOccurs="0" name="splitterStatus" type="tns:splitterStatus" />
      <xs:element minOccurs="0" name="volumesAccess" type="tns:volumeAccessState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="volumeAccessState">
    <xs:sequence>
      <xs:element minOccurs="0" name="attachedToOtherCluster" type="xs:boolean" />
      <xs:element minOccurs="0" name="busy" type="xs:boolean" />
      <xs:element minOccurs="0" name="delayed" type="xs:boolean" />
      <xs:element minOccurs="0" name="inErrorState" type="xs:boolean" />
      <xs:element minOccurs="0" name="markingDataOnSplitter" type="xs:boolean" />
      <xs:element minOccurs="0" name="splittingToVolume" type="xs:boolean" />
      <xs:element minOccurs="0" name="targetRPA" type="tns:rpaUID" />
      <xs:element minOccurs="0" name="writable" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifySplitterStateWithDefaultTimeoutResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSiteName">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element minOccurs="0" name="newName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSiteNameResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAvailablePhoenixClustersForSite">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailablePhoenixClustersForSiteResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateResizeReplicationSet">
    <xs:sequence>
      <xs:element minOccurs="0" name="replicationSet" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" name="resizeReplicationSetParam" type="tns:resizeReplicationSetParam" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="resizeReplicationSetParam">
    <xs:sequence>
      <xs:element name="additionalSpaceClean" type="xs:boolean" />
      <xs:element name="newSizeInBytes" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateResizeReplicationSetResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSymmetrixGateKeepersInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element minOccurs="0" name="symmetrixID" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSymmetrixGateKeepersInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:symmetrixGateKeepersInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="symmetrixGateKeepersInfo">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="symmetrixGateKeepersRPAInfo" nillable="true" type="tns:symmetrixGateKeepersRPAInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="symmetrixGateKeepersRPAInfo">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="gateKeeperPaths" nillable="true" type="tns:symmetrixDevicePath" />
      <xs:element minOccurs="0" name="rpaUID" type="tns:rpaUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="symmetrixDevicePath">
    <xs:sequence>
      <xs:element minOccurs="0" name="device" type="xs:string" />
      <xs:element name="lun" type="xs:long" />
      <xs:element name="port" type="xs:int" />
      <xs:element name="WWN" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getFullRecoverPointContext">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getFullRecoverPointContextResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:fullRecoverPointContext" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupName">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupNameResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAttachVolumeToSplitter">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="volumeParam" type="tns:setVolumeParam" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setVolumeParam">
    <xs:sequence>
      <xs:element name="bootFromSAN" type="xs:boolean" />
      <xs:element name="shouldAttachAsClean" type="xs:boolean" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAttachVolumeToSplitterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateAddConsistencyGroupCopy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="copyName" type="xs:string" />
      <xs:element name="isProductionCopy" type="xs:boolean" />
      <xs:element minOccurs="0" name="policy" type="tns:consistencyGroupCopyPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupCopyPolicy">
    <xs:sequence>
      <xs:element name="allowDistributionOfLargeSnapshots" type="xs:boolean" />
      <xs:element name="allowSymmetrixWithOneRPA" type="xs:boolean" />
      <xs:element minOccurs="0" name="automaticSnapshotConsolidationPolicy" type="tns:automaticSnapshotConsolidationPolicy" />
      <xs:element minOccurs="0" name="failallVariant" type="tns:failallVariant" />
      <xs:element minOccurs="0" name="fastForwardBound" type="tns:recoverPointTimeStamp" />
      <xs:element minOccurs="0" name="hostsOS" type="tns:hostOS" />
      <xs:element minOccurs="0" name="journalCompressionLevel" type="tns:journalCompressionLevel" />
      <xs:element name="journalSizeLimitInBytes" type="xs:long" />
      <xs:element name="loggedAccessAllocationProportion" type="xs:double" />
      <xs:element minOccurs="0" name="phoenixClusterProtectionPolicy" type="tns:phoenixClusterProtectionPolicy" />
      <xs:element minOccurs="0" name="RTO" type="tns:quantity" />
      <xs:element minOccurs="0" name="requiredProtectionWindowInSeconds" type="xs:long" />
      <xs:element minOccurs="0" name="reservationsPolicy" type="tns:reservationsPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="automaticSnapshotConsolidationPolicy">
    <xs:sequence>
      <xs:element name="dailyConsolidations" type="xs:long" />
      <xs:element name="enabled" type="xs:boolean" />
      <xs:element name="unconsolidatedDurationInSeconds" type="xs:long" />
      <xs:element name="weeklyConsolidations" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddConsistencyGroupCopyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getFullRecoverPointState">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getFullRecoverPointStateResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:fullRecoverPointState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="fullRecoverPointState">
    <xs:sequence>
      <xs:element minOccurs="0" name="accountState" type="tns:accountState" />
      <xs:element name="deduplicationSupported" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupsState" nillable="true" type="tns:consistencyGroupState" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupsVolumesState" nillable="true" type="tns:consistencyGroupVolumesState" />
      <xs:element name="internalConfigParamsConflict" type="xs:boolean" />
      <xs:element minOccurs="0" name="monitoredParametersStatus" type="tns:monitoredParametersStatus" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="repositoriesState" nillable="true" type="tns:repositoryVolumeState" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpasState" nillable="true" type="tns:siteRPAsState" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="sitesPhoenixClustersState" nillable="true" type="tns:phoenixClusterState" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splittersState" nillable="true" type="tns:siteSplittersState" />
      <xs:element minOccurs="0" name="systemVersionState" type="tns:systemVersionState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="accountState">
    <xs:sequence>
      <xs:element minOccurs="0" name="daysSinceInstallation" type="xs:int" />
      <xs:element minOccurs="0" name="gracePeriodDaysLeft" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupState">
    <xs:sequence>
      <xs:element name="enabled" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupCopiesState" nillable="true" type="tns:consistencyGroupCopyState" />
      <xs:element minOccurs="0" name="groupUID" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="linksState" nillable="true" type="tns:consistencyGroupLinkState" />
      <xs:element name="runningAsDistributedGroup" type="xs:boolean" />
      <xs:element minOccurs="0" name="sourceCopyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element name="stateUnknown" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupCopyState">
    <xs:sequence>
      <xs:element minOccurs="0" name="accessedImage" type="tns:snapshot" />
      <xs:element name="activePrimaryRPA" type="xs:int" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="activeSecondaryRPAsList" nillable="true" type="xs:int" />
      <xs:element minOccurs="0" name="consolidationProgress" type="tns:consolidationProgress" />
      <xs:element minOccurs="0" name="copyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="distributedFirstSnapshot" type="xs:boolean" />
      <xs:element name="enabled" type="xs:boolean" />
      <xs:element minOccurs="0" name="journalState" type="tns:journalState" />
      <xs:element name="regulated" type="xs:boolean" />
      <xs:element minOccurs="0" name="splitVariant" type="tns:splitVariant" />
      <xs:element name="stateUnknown" type="xs:boolean" />
      <xs:element minOccurs="0" name="storageAccessState" type="tns:storageAccessState" />
      <xs:element name="suspended" type="xs:boolean" />
      <xs:element minOccurs="0" name="tspWritesCleared" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="snapshot">
    <xs:sequence>
      <xs:element minOccurs="0" name="closingTimeStamp" type="tns:recoverPointTimeStamp" />
      <xs:element minOccurs="0" name="consolidationInfo" type="tns:snapshotConsolidationInfo" />
      <xs:element minOccurs="0" name="description" type="xs:string" />
      <xs:element minOccurs="0" name="relevantEvent" type="tns:eventLog" />
      <xs:element name="sizeInBytes" type="xs:long" />
      <xs:element minOccurs="0" name="snapshotUID" type="tns:snapshotUID" />
      <xs:element name="uncompressedSizeInBytes" type="xs:long" />
      <xs:element name="userSnapshot" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="snapshotConsolidationInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="consolidationPolicy" type="tns:bookmarkConsolidationPolicy" />
      <xs:element minOccurs="0" name="consolidationType" type="tns:snapshotConsolidationType" />
      <xs:element name="savedSpaceInBytes" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="eventLog">
    <xs:sequence>
      <xs:element minOccurs="0" name="details" type="xs:string" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="devices" nillable="true" type="tns:deviceInfo" />
      <xs:element name="eventID" type="xs:int" />
      <xs:element minOccurs="0" name="eventLogInfo" type="tns:eventLogInfo" />
      <xs:element minOccurs="0" name="eventTime" type="tns:recoverPointTimeStamp" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupCopies" nillable="true" type="tns:consistencyGroupCopyInfo" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="grouplinks" nillable="true" type="tns:consistencyGroupLinkInfo" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupsInfo" nillable="true" type="tns:consistencyGroupInfo" />
      <xs:element name="history" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="replicationSets" nillable="true" type="tns:replicationSetInfo" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="roles" nillable="true" type="tns:rpaUID" />
      <xs:element minOccurs="0" name="rpaUID" type="tns:rpaUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpaViews" nillable="true" type="tns:rpaView" />
      <xs:element minOccurs="0" name="seDetails" type="xs:string" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splitterViews" nillable="true" type="tns:splitterView" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splitterVolumes" nillable="true" type="tns:splitterVolumeInfo" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splittersInfo" nillable="true" type="tns:splitterInfo" />
      <xs:element minOccurs="0" name="systemEventUID" type="tns:systemEventUID" />
      <xs:element minOccurs="0" name="username" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deviceInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="oldVolumeName" type="xs:string" />
      <xs:element minOccurs="0" name="volumeUID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="eventLogInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="level" type="tns:eventLogLevel" />
      <xs:element minOccurs="0" name="moreDetails" type="xs:string" />
      <xs:element minOccurs="0" name="scope" type="tns:eventLogScope" />
      <xs:element minOccurs="0" name="seSummary" type="xs:string" />
      <xs:element minOccurs="0" name="summary" type="xs:string" />
      <xs:element minOccurs="0" name="topic" type="tns:eventLogTopic" />
      <xs:element minOccurs="0" name="userAction" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupCopyInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="copyName" type="xs:string" />
      <xs:element minOccurs="0" name="copyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="groupName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupLinkInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupName" type="xs:string" />
      <xs:element minOccurs="0" name="linkUID" type="tns:consistencyGroupLinkUID" />
      <xs:element minOccurs="0" name="sourceCopyName" type="xs:string" />
      <xs:element minOccurs="0" name="targetCopyName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupName" type="xs:string" />
      <xs:element minOccurs="0" name="groupUID" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="replicationSetInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="replicationSetName" type="xs:string" />
      <xs:element minOccurs="0" name="replicationSetUID" type="tns:replicationSetUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rpaView">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupCopies" nillable="true" type="tns:consistencyGroupCopyInfo" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="jvolGroupCopies" nillable="true" type="tns:consistencyGroupCopyInfo" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="peerRPAs" nillable="true" type="tns:rpaUID" />
      <xs:element minOccurs="0" name="rpaUID" type="tns:rpaUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splitters" nillable="true" type="tns:splitterInfo" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="uvolGroupCopies" nillable="true" type="tns:consistencyGroupCopyInfo" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="volumes" nillable="true" type="tns:deviceInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="splitterView">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupCopies" nillable="true" type="tns:consistencyGroupCopyInfo" />
      <xs:element minOccurs="0" name="splitterInfo" type="tns:splitterInfo" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="volumes" nillable="true" type="tns:deviceInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="splitterVolumeInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitterName" type="xs:string" />
      <xs:element minOccurs="0" name="splitterVolume" type="tns:splitterVolume" />
      <xs:element minOccurs="0" name="volumeName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="systemEventUID">
    <xs:sequence>
      <xs:element name="uniqueId" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="snapshotUID">
    <xs:sequence>
      <xs:element name="id" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consolidationProgress">
    <xs:sequence>
      <xs:element minOccurs="0" name="consolidationType" type="tns:snapshotConsolidationType" />
      <xs:element minOccurs="0" name="firstSnapshotTime" type="tns:recoverPointTimeStamp" />
      <xs:element minOccurs="0" name="lastSnapshotTime" type="tns:recoverPointTimeStamp" />
      <xs:element name="pending" type="xs:boolean" />
      <xs:element name="progress" type="xs:double" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupLinkState">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupLinkUID" type="tns:consistencyGroupLinkUID" />
      <xs:element name="inSyncMode" type="xs:boolean" />
      <xs:element minOccurs="0" name="pipeState" type="tns:pipeState" />
      <xs:element name="stateUnknown" type="xs:boolean" />
      <xs:element minOccurs="0" name="transferErrorReason" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupVolumesState">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="copiesVolumesState" nillable="true" type="tns:consistencyGroupCopyVolumesState" />
      <xs:element minOccurs="0" name="groupUID" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="replicationSetsVolumesState" nillable="true" type="tns:replicationSetVolumesState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupCopyVolumesState">
    <xs:sequence>
      <xs:element minOccurs="0" name="copyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="journalsState" nillable="true" type="tns:journalVolumeState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="replicationSetVolumesState">
    <xs:sequence>
      <xs:element name="canBeEnlarged" type="xs:boolean" />
      <xs:element name="maxPossibleSizeInBytes" type="xs:long" />
      <xs:element minOccurs="0" name="replicationSetUID" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="userVolumesState" nillable="true" type="tns:userVolumeState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="monitoredParametersStatus">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="parameters" nillable="true" type="tns:monitoredParameter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="monitoredParameter">
    <xs:sequence>
      <xs:element minOccurs="0" name="key" type="tns:monitoredParameterKey" />
      <xs:element minOccurs="0" name="value" type="tns:monitoredParameterValue" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="monitoredParameterKey">
    <xs:sequence>
      <xs:element minOccurs="0" name="consistencyGroupCopyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="context" type="xs:string" />
      <xs:element minOccurs="0" name="parameterType" type="tns:monitoredParameterType" />
      <xs:element minOccurs="0" name="rpaUID" type="tns:rpaUID" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" name="splitterUID" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="monitoredParameterValue">
    <xs:sequence>
      <xs:element minOccurs="0" name="parameterWaterMarks" type="tns:monitoredParameterWaterMarks" />
      <xs:element name="reverseWaterMarksDirection" type="xs:boolean" />
      <xs:element name="value" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="monitoredParameterWaterMarks">
    <xs:sequence>
      <xs:element name="highWaterMark" type="xs:long" />
      <xs:element name="limit" type="xs:long" />
      <xs:element name="lowWaterMark" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteRPAsState">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpasState" nillable="true" type="tns:rpaState" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rpaState">
    <xs:sequence>
      <xs:element minOccurs="0" name="dataLinkStatus" type="tns:generalStatus" />
      <xs:element minOccurs="0" name="hardwarePlatform" type="xs:string" />
      <xs:element minOccurs="0" name="hardwareSerialID" type="xs:string" />
      <xs:element name="hbaType" type="xs:long" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="interfacesStatus" nillable="true" type="tns:rpaInterfaceStatus" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="localRPAsFiberConnectivityStatus" nillable="true" type="tns:rpaConnectivityStatus" />
      <xs:element minOccurs="0" name="managementIPv4" type="xs:string" />
      <xs:element minOccurs="0" name="managementIPv6" type="xs:string" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="portsState" nillable="true" type="tns:rpaPortState" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="remoteRPAsConnectivityStatus" nillable="true" type="tns:rpaConnectivityStatus" />
      <xs:element minOccurs="0" name="repositoryConnectivityStatus" type="tns:volumeStatus" />
      <xs:element minOccurs="0" name="rpaUID" type="tns:rpaUID" />
      <xs:element name="runningSiteControl" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splittersConnectivityStatus" nillable="true" type="tns:splitterConnectivityStatus" />
      <xs:element minOccurs="0" name="status" type="tns:rpaStatus" />
      <xs:element minOccurs="0" name="vendor" type="xs:string" />
      <xs:element minOccurs="0" name="version" type="tns:recoverPointVersion" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="volumesConnectivityStatus" nillable="true" type="tns:volumeConnectivityStatus" />
      <xs:element minOccurs="0" name="wanIP" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rpaInterfaceStatus">
    <xs:sequence>
      <xs:element minOccurs="0" name="interfaceStatus" type="tns:generalStatus" />
      <xs:element minOccurs="0" name="interfaceType" type="tns:interfaceType" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="otherRPAsIPV4ConnectivityStatus" nillable="true" type="tns:rpaConnectivityStatus" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="otherRPAsIPV6ConnectivityStatus" nillable="true" type="tns:rpaConnectivityStatus" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rpaConnectivityStatus">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:siteEntityConnectivityStatus">
        <xs:sequence>
          <xs:element minOccurs="0" name="rpaUID" type="tns:rpaUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="siteEntityConnectivityStatus" abstract="true">
    <xs:sequence>
      <xs:element minOccurs="0" name="connectivityStatus" type="tns:generalStatus" />
      <xs:element minOccurs="0" name="entityType" type="tns:siteEntityType" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="splitterConnectivityStatus">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:siteEntityConnectivityStatus">
        <xs:sequence>
          <xs:element minOccurs="0" name="splitterUID" type="tns:splitterUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="volumeConnectivityStatus">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:siteEntityConnectivityStatus">
        <xs:sequence>
          <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
          <xs:element minOccurs="0" name="volumeStatus" type="tns:volumeStatus" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="rpaPortState">
    <xs:sequence>
      <xs:element name="nodeWWN" type="xs:long" />
      <xs:element name="portIndex" type="xs:long" />
      <xs:element name="portWWN" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="recoverPointVersion">
    <xs:sequence>
      <xs:element minOccurs="0" name="version" type="xs:string" />
      <xs:element minOccurs="0" name="versionInformation" type="tns:recoverPointVersionInformation" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="recoverPointVersionInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="buildDescription" type="xs:string" />
      <xs:element minOccurs="0" name="hotFix" type="xs:string" />
      <xs:element name="major" type="xs:int" />
      <xs:element name="minor" type="xs:int" />
      <xs:element minOccurs="0" name="patch" type="xs:int" />
      <xs:element minOccurs="0" name="servicePack" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteSplittersState">
    <xs:sequence>
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splittersState" nillable="true" type="tns:splitterState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="splitterState">
    <xs:sequence>
      <xs:element name="numberOfAttachedRPAClusters" type="xs:int" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="osAndVersionInfo" nillable="true" type="tns:splitterOSAndVersionInfo" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpasConnectivityStatus" nillable="true" type="tns:rpaConnectivityStatus" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpasPaths" nillable="true" type="tns:splitterRPAPath" />
      <xs:element minOccurs="0" name="splitterStatus" type="tns:splitterStatus" />
      <xs:element minOccurs="0" name="splitterUID" type="tns:splitterUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="volumesAccessState" nillable="true" type="tns:attachedUserVolumeAccessState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="splitterOSAndVersionInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="key" type="xs:string" />
      <xs:element minOccurs="0" name="value" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="splitterRPAPath">
    <xs:sequence>
      <xs:element name="port" type="xs:long" />
      <xs:element minOccurs="0" name="rpaUID" type="tns:rpaUID" />
      <xs:element name="wwn" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="attachedUserVolumeAccessState">
    <xs:sequence>
      <xs:element minOccurs="0" name="accessState" type="tns:volumeAccessState" />
      <xs:element name="currentDelayExpiryTimeoutInSeconds" type="xs:int" />
      <xs:element minOccurs="0" name="groupCopyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="replicationSetUID" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" name="visible" type="xs:boolean" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="brocadeSplitterState">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:splitterState">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="aliases" nillable="true" type="tns:wwnAlias" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wwnAlias">
    <xs:sequence>
      <xs:element minOccurs="0" name="alias" type="xs:string" />
      <xs:element name="wwn" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vplexArraySplitterState">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:splitterState">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="directorsState" nillable="true" type="tns:splitterState" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="systemVersionState">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="sitesVersionState" nillable="true" type="tns:siteVersionState" />
      <xs:element minOccurs="0" name="supportedFeatures" type="tns:features" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteVersionState">
    <xs:sequence>
      <xs:element minOccurs="0" name="features" type="tns:features" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" name="version" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="features">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="features" nillable="true" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detachVolumeFromSplitter">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detachVolumeFromSplitterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="renameSystemEventLogsFilter">
    <xs:sequence>
      <xs:element minOccurs="0" name="filter" type="tns:systemEventLogsFilterUID" />
      <xs:element minOccurs="0" name="newName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="systemEventLogsFilterUID">
    <xs:sequence>
      <xs:element name="id" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="renameSystemEventLogsFilterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSpecificGroupsState">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groups" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecificGroupsStateResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:consistencyGroupState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSplittersStateFromAllSites">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSplittersStateFromAllSitesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:siteSplittersState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAbortTransaction">
    <xs:sequence>
      <xs:element minOccurs="0" name="transactionID" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAbortTransactionResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="enableSNMP">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="enableSNMPResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getCurrentTime">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getCurrentTimeResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:recoverPointTimeStamp" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupSetName">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupSet" type="tns:consistencyGroupSetUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupSetNameResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getRecoverPointVersion">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getRecoverPointVersionResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:recoverPointVersion" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="enableImageAccess">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="snapshot" type="tns:snapshot" />
      <xs:element minOccurs="0" name="mode" type="tns:imageAccessMode" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="enableImageAccessResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getLocalSite">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getLocalSiteResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setConsistencyGroupSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settingsParam" type="tns:consistencyGroupSettingsChangesParam" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupSettingsChangesParam">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="copiesChanges" nillable="true" type="tns:consistencyGroupCopySettingsChangesParam" />
      <xs:element minOccurs="0" name="enableGroup" type="xs:boolean" />
      <xs:element minOccurs="0" name="groupUID" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="removedReplicationSets" nillable="true" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="replicationSetsChanges" nillable="true" type="tns:replicationSetSettingsChangesParam" />
      <xs:element minOccurs="0" name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupCopySettingsChangesParam">
    <xs:sequence>
      <xs:element minOccurs="0" name="copyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="newJournalVolumes" nillable="true" type="tns:deviceUID" />
      <xs:element minOccurs="0" name="provisionedJournalInformation" type="tns:provisionedJournalChangesParam" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="removedJournalVolumes" nillable="true" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="provisionedJournalChangesParam" abstract="true">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="provisionedJournalExplicitSizeChangesParam">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:provisionedJournalChangesParam">
        <xs:sequence>
          <xs:element name="explicitJournalSizeInBytes" type="xs:long" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="provisionedJournalSizeCalculationChangesParam">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:provisionedJournalChangesParam">
        <xs:sequence>
          <xs:element minOccurs="0" name="incomingDataRatePerSecond" type="tns:quantity" />
          <xs:element minOccurs="0" name="requiredProtectionWindow" type="tns:quantity" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="replicationSetSettingsChangesParam">
    <xs:sequence>
      <xs:element minOccurs="0" name="name" type="xs:string" />
      <xs:element minOccurs="0" name="replicationSetUID" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" name="resizeReplicationSetParam" type="tns:resizeReplicationSetParam" />
      <xs:element name="shouldAttachAsClean" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="volumesChanges" nillable="true" type="tns:userVolumeSettingsChangesParam" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="userVolumeSettingsChangesParam">
    <xs:sequence>
      <xs:element name="bootFromSAN" type="xs:boolean" />
      <xs:element minOccurs="0" name="copyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="newVolumeID" type="tns:deviceUID" />
      <xs:element minOccurs="0" name="removedVolumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setConsistencyGroupSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="resumeConsistencyGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="resumeConsistencyGroupResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="verifyRPAState">
    <xs:sequence>
      <xs:element minOccurs="0" name="rpa" type="tns:rpaUID" />
      <xs:element minOccurs="0" name="state" type="tns:verifyRPAStateParam" />
      <xs:element name="timeoutInSeconds" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyRPAStateParam">
    <xs:sequence>
      <xs:element minOccurs="0" name="hasSiteControl" type="xs:boolean" />
      <xs:element minOccurs="0" name="repositoryStatus" type="tns:volumeStatus" />
      <xs:element minOccurs="0" name="rpaStatus" type="tns:rpaStatus" />
      <xs:element minOccurs="0" name="rpasConnectivityStatus" type="tns:generalStatus" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpasForConnectivityCheck" nillable="true" type="tns:rpaUID" />
      <xs:element minOccurs="0" name="volumesConnectivityStatus" type="tns:generalStatus" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyRPAStateResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRemoveJournalVolume">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRemoveJournalVolumeResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateStartGroupTransfer">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateStartGroupTransferResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setSystemMiscellaneousSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settings" type="tns:systemMiscellaneousSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSystemMiscellaneousSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getManagementSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getManagementSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:managementSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="managementSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="alertsSettings" type="tns:systemAlertsSettings" />
      <xs:element minOccurs="0" name="callHomeEventsSettings" type="tns:callHomeEvents" />
      <xs:element minOccurs="0" name="miscSettings" type="tns:systemMiscellaneousSettings" />
      <xs:element minOccurs="0" name="reportSettings" type="tns:systemReportSettings" />
      <xs:element name="showFirstTimeWizard" type="xs:boolean" />
      <xs:element minOccurs="0" name="snmpSettings" type="tns:snmpSettings" />
      <xs:element minOccurs="0" name="syslogSettings" type="tns:syslogSettings" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="systemEventLogsFilters" nillable="true" type="tns:systemEventLogsFilter" />
      <xs:element minOccurs="0" name="timeSettings" type="tns:timeSettings" />
      <xs:element minOccurs="0" name="userDefinedProperties" type="tns:userDefinedProperties" />
      <xs:element minOccurs="0" name="usersSettings" type="tns:usersSettings" />
      <xs:element minOccurs="0" name="VCenterServersViewSettings" type="tns:vCenterServersViewSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="systemAlertsSettings">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="emailFilters" nillable="true" type="tns:emailFilterData" />
      <xs:element name="enabled" type="xs:boolean" />
      <xs:element name="sendDailyInfoToEMCSupport" type="xs:boolean" />
      <xs:element minOccurs="0" name="senderEmailAddress" type="xs:string" />
      <xs:element minOccurs="0" name="smtpServerAddress" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="emailFilterData">
    <xs:sequence>
      <xs:element minOccurs="0" name="alertType" type="tns:alertType" />
      <xs:element minOccurs="0" name="sendEventFilterID" type="tns:systemEventLogsFilterUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="targetAddressesList" nillable="true" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="callHomeEvents">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="callHomeEvents" nillable="true" type="tns:callHomeEvent" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="callHomeEvent">
    <xs:sequence>
      <xs:element minOccurs="0" name="description" type="xs:string" />
      <xs:element minOccurs="0" name="disabledUntil" type="tns:recoverPointTimeStamp" />
      <xs:element minOccurs="0" name="id" type="tns:callHomeEventUID" />
      <xs:element minOccurs="0" name="name" type="xs:string" />
      <xs:element minOccurs="0" name="script" type="xs:string" />
      <xs:element name="systemDefined" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="callHomeEventUID">
    <xs:sequence>
      <xs:element name="id" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="systemReportSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="esrsGatewayAddress" type="xs:string" />
      <xs:element name="includeSystemAlerts" type="xs:boolean" />
      <xs:element name="includeSystemReports" type="xs:boolean" />
      <xs:element minOccurs="0" name="transferMethod" type="tns:systemReportTransferMethod" />
      <xs:element name="usingCompression" type="xs:boolean" />
      <xs:element name="usingEncryption" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="snmpSettings">
    <xs:sequence>
      <xs:element name="agentEnabled" type="xs:boolean" />
      <xs:element name="secureTransportsOnly" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="sendEventFilters" nillable="true" type="tns:systemEventLogsFilterUID" />
      <xs:element name="shouldSendEventTraps" type="xs:boolean" />
      <xs:element minOccurs="0" name="snmpCommunity" type="xs:string" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="traps" nillable="true" type="tns:snmpTrapDestination" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="users" nillable="true" type="tns:snmpUser" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="snmpTrapDestination">
    <xs:sequence>
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" name="targetHostAddress" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="snmpUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="certificates" type="xs:string" />
      <xs:element minOccurs="0" name="password" type="xs:base64Binary" />
      <xs:element minOccurs="0" name="username" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="syslogSettings">
    <xs:sequence>
      <xs:element name="enabled" type="xs:boolean" />
      <xs:element minOccurs="0" name="facility" type="tns:syslogFacility" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="sendEventFilters" nillable="true" type="tns:systemEventLogsFilterUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="sitesHosts" nillable="true" type="tns:siteSyslogHost" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteSyslogHost">
    <xs:sequence>
      <xs:element minOccurs="0" name="hostAddress" type="xs:string" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="systemEventLogsFilter">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:eventLogsFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="filterUID" type="tns:systemEventLogsFilterUID" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="groupsToExclude" nillable="true" type="tns:consistencyGroupUID" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="topic" type="tns:eventLogTopic" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="eventLogsFilter" abstract="true">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="eventsIDs" nillable="true" type="xs:int" />
      <xs:element minOccurs="0" name="level" type="tns:eventLogLevel" />
      <xs:element minOccurs="0" name="scope" type="tns:eventLogScope" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="userEventLogsFilter">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:eventLogsFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="textFilter" type="tns:textFilter" />
          <xs:element minOccurs="0" name="timeFrame" type="tns:timeFrame" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="topics" nillable="true" type="tns:eventLogTopic" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="textFilter">
    <xs:sequence>
      <xs:element name="allRelevant" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="texts" nillable="true" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="timeFrame">
    <xs:sequence>
      <xs:element minOccurs="0" name="endTime" type="tns:recoverPointTimeStamp" />
      <xs:element minOccurs="0" name="startTime" type="tns:recoverPointTimeStamp" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="timeSettings">
    <xs:sequence>
      <xs:element name="useSitesTimeZones" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="userDefinedProperties">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="properties" nillable="true" type="tns:property" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="property">
    <xs:sequence>
      <xs:element minOccurs="0" name="key" type="xs:string" />
      <xs:element minOccurs="0" name="value" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="usersSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="ldapSettings" type="tns:ldapSettings" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="users" nillable="true" type="tns:recoverPointUser" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="usersRoles" nillable="true" type="tns:userRole" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ldapSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="advancedSettings" type="tns:ldapAdvancedSettings" />
      <xs:element minOccurs="0" name="baseDistinguishedName" type="xs:string" />
      <xs:element minOccurs="0" name="binding" type="tns:ldapBinding" />
      <xs:element minOccurs="0" name="distinguishedNameSearch" type="xs:string" />
      <xs:element name="enabled" type="xs:boolean" />
      <xs:element minOccurs="0" name="primaryServer" type="tns:ldapServer" />
      <xs:element minOccurs="0" name="protocol" type="tns:ldapProtocol" />
      <xs:element minOccurs="0" name="secondaryServer" type="tns:ldapServer" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ldapAdvancedSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="ldapGroupAttributes" type="xs:string" />
      <xs:element minOccurs="0" name="searchScope" type="tns:ldapSearchScope" />
      <xs:element name="searchTimeLimitInSeconds" type="xs:long" />
      <xs:element minOccurs="0" name="userObjectClass" type="xs:string" />
      <xs:element minOccurs="0" name="usernameAttributes" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ldapBinding">
    <xs:sequence>
      <xs:element minOccurs="0" name="bindDistinguishedName" type="xs:string" />
      <xs:element minOccurs="0" name="bindingType" type="tns:ldapBindingType" />
      <xs:element minOccurs="0" name="password" type="xs:base64Binary" />
      <xs:element name="passwordConfigured" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ldapServer">
    <xs:sequence>
      <xs:element minOccurs="0" name="address" type="xs:string" />
      <xs:element name="port" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ldapProtocol">
    <xs:sequence>
      <xs:element minOccurs="0" name="certificate" type="xs:string" />
      <xs:element minOccurs="0" name="protocolType" type="tns:ldapProtocolType" />
      <xs:element name="useCertificate" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="recoverPointUser">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groups" nillable="true" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="logsFilter" type="tns:userEventLogsFilter" />
      <xs:element minOccurs="0" name="name" type="xs:string" />
      <xs:element minOccurs="0" name="password" type="xs:base64Binary" />
      <xs:element minOccurs="0" name="roleName" type="xs:string" />
      <xs:element minOccurs="0" name="userType" type="tns:recoverPointUserType" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="userRole">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="permissions" nillable="true" type="tns:permission" />
      <xs:element minOccurs="0" name="roleName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vCenterServersViewSettings">
    <xs:sequence>
      <xs:element name="VCenterServersFiltersEnabled" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateDisableConsistencyGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateDisableConsistencyGroupResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllRecoverPointUsers">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllRecoverPointUsersResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:recoverPointUser" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAllGroupSets">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllGroupSetsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:consistencyGroupSetSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getTransactionStatus">
    <xs:sequence>
      <xs:element minOccurs="0" name="transactionID" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getTransactionStatusResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionStatus" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="transactionStatus">
    <xs:sequence>
      <xs:element minOccurs="0" name="completedStage" type="xs:string" />
      <xs:element minOccurs="0" name="eta" type="tns:recoverPointTimeStamp" />
      <xs:element minOccurs="0" name="progressPercentage" type="xs:int" />
      <xs:element minOccurs="0" name="stage" type="xs:int" />
      <xs:element minOccurs="0" name="state" type="tns:executionState" />
      <xs:element minOccurs="0" name="title" type="xs:string" />
      <xs:element minOccurs="0" name="totalStages" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableSplittersFromSite">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableSplittersFromSiteResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteAvailableSplitters" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteAvailableSplitters">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="availableSplitters" nillable="true" type="tns:splitterInfo" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getActivationCodeInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="activationCode" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getActivationCodeInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:licenseInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="licenseInfo">
    <xs:sequence>
      <xs:element name="accountID" type="xs:int" />
      <xs:element name="arraysNumber" type="xs:int" />
      <xs:element name="clusterSize" type="xs:int" />
      <xs:element name="compressionSupported" type="xs:boolean" />
      <xs:element name="distributedGroupSupported" type="xs:boolean" />
      <xs:element name="expiration" type="xs:long" />
      <xs:element minOccurs="0" name="heterogenousStorageSupport" type="xs:string" />
      <xs:element name="instantRecoverySupported" type="xs:boolean" />
      <xs:element name="journalCompressionSupported" type="xs:boolean" />
      <xs:element name="journalSizeLimit" type="xs:long" />
      <xs:element minOccurs="0" name="key" type="tns:licenseKey" />
      <xs:element name="localReplicationSize" type="xs:long" />
      <xs:element name="remoteReplicationSize" type="xs:long" />
      <xs:element name="requiresActivation" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="supportedArraysSerialNumbers" nillable="true" type="xs:string" />
      <xs:element name="syncReplicationSupported" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="licenseKey">
    <xs:sequence>
      <xs:element minOccurs="0" name="activationCode" type="xs:string" />
      <xs:element minOccurs="0" name="key" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVCenterServersFromAllSites">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getVCenterServersFromAllSitesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:siteVCenterServers" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteVCenterServers">
    <xs:sequence>
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="VCenterServers" nillable="true" type="tns:vCenterServer" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="disableLDAP">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="disableLDAPResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getIRThrottlingPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getIRThrottlingPolicyResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:irThrottlePolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="irThrottlePolicy">
    <xs:sequence>
      <xs:element name="storageAwareness" type="xs:boolean" />
      <xs:element minOccurs="0" name="throttleType" type="tns:irThrottleType" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="exportStatisticsToDefaultFile">
    <xs:sequence>
      <xs:element minOccurs="0" name="filter" type="tns:statisticsFilter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="statisticsFilter">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="categories" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="granularity" type="tns:quantity" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groups" nillable="true" type="tns:consistencyGroupUID" />
      <xs:element name="includeGlobalStatistics" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpasNumbers" nillable="true" type="xs:int" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="sites" nillable="true" type="tns:siteUID" />
      <xs:element minOccurs="0" name="timeFrame" type="tns:timeFrame" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="exportStatisticsToDefaultFileResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="enableSystemReport">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="enableSystemReportResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setFullConsistencyGroupPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="newPolicy" type="tns:fullConsistencyGroupPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="fullConsistencyGroupPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="copiesPolicies" nillable="true" type="tns:fullConsistencyGroupCopyPolicy" />
      <xs:element minOccurs="0" name="groupName" type="xs:string" />
      <xs:element minOccurs="0" name="groupPolicy" type="tns:consistencyGroupPolicy" />
      <xs:element minOccurs="0" name="groupUID" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="linksPolicies" nillable="true" type="tns:fullConsistencyGroupLinkPolicy" />
      <xs:element minOccurs="0" name="productionCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="fullConsistencyGroupCopyPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="copyName" type="xs:string" />
      <xs:element minOccurs="0" name="copyPolicy" type="tns:consistencyGroupCopyPolicy" />
      <xs:element minOccurs="0" name="copyUID" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupPolicy">
    <xs:sequence>
      <xs:element name="canTransferOnNonPreferredRPA" type="xs:boolean" />
      <xs:element name="distributedGroup" type="xs:boolean" />
      <xs:element minOccurs="0" name="hostsDelayExpiryTimeoutInSeconds" type="xs:int" />
      <xs:element minOccurs="0" name="managementMode" type="tns:managementMode" />
      <xs:element name="primaryRPANumber" type="xs:int" />
      <xs:element name="reservationSupported" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="secondaryRPAsNumbers" nillable="true" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="managementMode">
    <xs:sequence>
      <xs:element minOccurs="0" name="externalManagement" type="tns:externalManagement" />
      <xs:element name="managedByRecoverPoint" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="fullConsistencyGroupLinkPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="linkPolicy" type="tns:consistencyGroupLinkPolicy" />
      <xs:element minOccurs="0" name="linkUID" type="tns:consistencyGroupLinkUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setFullConsistencyGroupPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="verifyGroupCopySnapshotsWithDefaultTimeout">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="state" type="tns:verifyGroupCopySnapshotsParam" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyGroupCopySnapshotsParam">
    <xs:sequence>
      <xs:element minOccurs="0" name="snapshotDescription" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyGroupCopySnapshotsWithDefaultTimeoutResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="renameReplicationSet">
    <xs:sequence>
      <xs:element minOccurs="0" name="replicationSet" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" name="newName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="renameReplicationSetResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemStatistics">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemStatisticsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemStatistics" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="systemStatistics">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="consistencyGroupStatistics" nillable="true" type="tns:consistencyGroupStatistics" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpaStatistics" nillable="true" type="tns:rpaStatistics" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="siteStatistics" nillable="true" type="tns:siteStatistics" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rpaStatistics">
    <xs:sequence>
      <xs:element name="cpuUsage" type="xs:double" />
      <xs:element minOccurs="0" name="rpaUID" type="tns:rpaUID" />
      <xs:element minOccurs="0" name="traffic" type="tns:trafficStatistics" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="trafficStatistics">
    <xs:sequence>
      <xs:element name="applicationIncomingWrites" type="xs:long" />
      <xs:element minOccurs="0" name="applicationThroughputStatistics" type="tns:inOutThroughputStatistics" />
      <xs:element name="compressionRatio" type="xs:double" />
      <xs:element minOccurs="0" name="initThroughputStatistics" type="tns:inOutThroughputStatistics" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="inOutThroughputStatistics">
    <xs:sequence>
      <xs:element name="inThroughput" type="xs:long" />
      <xs:element name="outThroughput" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteStatistics">
    <xs:sequence>
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" name="traffic" type="tns:trafficStatistics" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableSplittersToAttachToVolume">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableSplittersToAttachToVolumeResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDefaultConsistencyGroupLinkPolicy">
    <xs:sequence>
      <xs:element name="isLocalLink" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDefaultConsistencyGroupLinkPolicyResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupLinkPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupStatistics">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupStatisticsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupStatistics" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAccountState">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAccountStateResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:accountState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateEnableSystemReport">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateEnableSystemReportResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSNMPSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSNMPSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:snmpSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getCurrentRPA">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getCurrentRPAResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:rpaUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="markGroupVolumesAsClean">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="markGroupVolumesAsCleanResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSiteClariionVolumes">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element name="refreshView" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSiteClariionVolumesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteClariionVolumes" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteClariionVolumes">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="clariionsView" nillable="true" type="tns:clariionVolumes" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="clariionVolumes">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitterUID" type="tns:splitterUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="volumesInformation" nillable="true" type="tns:clariionVolumeInformation" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="clariionVolumeInformation">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:volumeInformation">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="groupSets" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="volumeInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="modelName" type="xs:string" />
      <xs:element minOccurs="0" name="onArrayWithRepository" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="paths" nillable="true" type="tns:volumePath" />
      <xs:element minOccurs="0" name="productName" type="xs:string" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rawUid" nillable="true" type="xs:byte" />
      <xs:element minOccurs="0" name="serialNumber" type="xs:string" />
      <xs:element minOccurs="0" name="sizeInBytes" type="xs:long" />
      <xs:element minOccurs="0" name="vendorName" type="xs:string" />
      <xs:element minOccurs="0" name="vendorSpecificInformation" type="xs:string" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
      <xs:element minOccurs="0" name="volumeName" type="xs:string" />
      <xs:element minOccurs="0" name="volumeStorageType" type="tns:volumeStorageType" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="volumePath">
    <xs:sequence>
      <xs:element minOccurs="0" name="controller" type="xs:string" />
      <xs:element name="port" type="xs:int" />
      <xs:element minOccurs="0" name="rpaUID" type="tns:rpaUID" />
      <xs:element name="scsiLun" type="xs:long" />
      <xs:element minOccurs="0" name="visibleLun" type="xs:string" />
      <xs:element name="wwn" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vplexVolumeInformation">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:volumeInformation">
        <xs:sequence>
          <xs:element minOccurs="0" name="locality" type="tns:vplexVolumeLocality" />
          <xs:element name="RPEnabled" type="xs:boolean" />
          <xs:element minOccurs="0" name="recoverPointClusterName" type="xs:string" />
          <xs:element minOccurs="0" name="vplexConsistencyGroupName" type="xs:string" />
          <xs:element name="winner" type="xs:boolean" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="symmetrixVolumeInformation">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:volumeInformation">
        <xs:sequence>
          <xs:element name="tagged" type="xs:boolean" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="getDefaultConsistencyGroupCopyPolicy">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getDefaultConsistencyGroupCopyPolicyResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupCopyPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addUserVolume">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="replicationSet" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addUserVolumeResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateDetachVolumeFromSplitter">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateDetachVolumeFromSplitterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllGroupsVolumeStates">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllGroupsVolumeStatesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:consistencyGroupVolumesState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSplittersSettingsFromAllSites">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSplittersSettingsFromAllSitesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:siteSplittersSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteSplittersSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splittersSettings" nillable="true" type="tns:splitterSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="splitterSettings">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="attachedUserVolumes" nillable="true" type="tns:attachedUserVolumeInfo" />
      <xs:element minOccurs="0" name="splitterName" type="xs:string" />
      <xs:element minOccurs="0" name="splitterUID" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="attachedUserVolumeInfo">
    <xs:sequence>
      <xs:element name="bootFromSAN" type="xs:boolean" />
      <xs:element minOccurs="0" name="replicationSetUID" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" name="sanInfo" type="tns:volumeSANInfo" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="brocadeSplitterSettings">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:splitterSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="bindings" type="tns:brocadeSplitterBindings" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="nonApprovedSafeBindings" nillable="true" type="tns:brocadeSplitterBinding" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="brocadeSplitterBindings">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="bindings" nillable="true" type="tns:brocadeSplitterBinding" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="hostBasedSplitterSettings">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:splitterSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="bootFromSANPeer" type="tns:splitterUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="sanTapSplitterSettings">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:splitterSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="credentials" type="tns:sanTapSplitterCredentials" />
          <xs:element minOccurs="0" name="credentialsStatus" type="tns:splitterCredentialsStatus" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="sanTapSplitterCredentials">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:baseSplitterCredentials">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="baseSplitterCredentials" abstract="true">
    <xs:sequence>
      <xs:element minOccurs="0" name="ip" type="xs:string" />
      <xs:element name="passwordConfigured" type="xs:boolean" />
      <xs:element minOccurs="0" name="username" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="clariionSplitterCredentials">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:baseSplitterCredentials">
        <xs:sequence>
          <xs:element minOccurs="0" name="authenticationType" type="tns:authenticationType" />
          <xs:element minOccurs="0" name="credentialsType" type="tns:clariionSplitterCredentialsType" />
          <xs:element minOccurs="0" name="SPBip" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="vplexSplitterCredentials">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:baseSplitterCredentials">
        <xs:sequence>
          <xs:element minOccurs="0" name="certificate" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="arrayBasedSplitterSettings" abstract="true">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:splitterSettings">
        <xs:sequence>
          <xs:element name="autoRegisterRPAsInitiators" type="xs:boolean" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="symmetrixSplitterSettings">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:arrayBasedSplitterSettings">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="clariionSplitterSettings">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:arrayBasedSplitterSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="credentials" type="tns:clariionSplitterCredentials" />
          <xs:element minOccurs="0" name="credentialsStatus" type="tns:splitterCredentialsStatus" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="neoSplitterSettings">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:arrayBasedSplitterSettings">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="vplexArraySplitterSettings">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:arrayBasedSplitterSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="credentials" type="tns:vplexSplitterCredentials" />
          <xs:element minOccurs="0" name="credentialsStatus" type="tns:splitterCredentialsStatus" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="sameArrayConfiguredDirectorsInformation" nillable="true" type="tns:vplexDirectorInformation" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="vplexDirectorInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="directorName" type="xs:string" />
      <xs:element minOccurs="0" name="directorUID" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBrocadeSafeBindingsITLs">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBrocadeSafeBindingsITLsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:brocadeSplitterBindingITLs" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="brocadeSplitterBindingITLs">
    <xs:sequence>
      <xs:element name="boundedEntity" type="xs:long" />
      <xs:element minOccurs="0" name="deviceUID" type="tns:deviceUID" />
      <xs:element name="hostInitiator" type="xs:long" />
      <xs:element name="lun" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consolidateSnapshots">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="start" type="tns:snapshot" />
      <xs:element minOccurs="0" name="end" type="tns:snapshot" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consolidateSnapshotsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSystemAlertsSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settings" type="tns:systemAlertsSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSystemAlertsSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="resolveSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="resolveSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateAddConsistencyGroupCopyWithDefaultPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="copyName" type="xs:string" />
      <xs:element name="isProductionCopy" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddConsistencyGroupCopyWithDefaultPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="clearLDAPSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="clearLDAPSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllRPAStatistics">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllRPAStatisticsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:rpaStatistics" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBrocadeSplittersInitiators">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splitters" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBrocadeSplittersInitiatorsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:brocadeSplitterInitiators" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="brocadeSplitterInitiators">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="initiators" nillable="true" type="xs:long" />
      <xs:element minOccurs="0" name="splitterUID" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddUserVolume">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="replicationSet" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddUserVolumeResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getVCenterServersViewSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getVCenterServersViewSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:vCenterServersViewSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAllGroupsStatistics">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllGroupsStatisticsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:consistencyGroupStatistics" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="configSantapAVTZonesForSplitter">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element name="totalAvtsNumber" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="configSantapAVTZonesForSplitterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setSNMPSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settings" type="tns:snmpSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSNMPSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllSSHKeys">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllSSHKeysResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:sshKey" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSystemInternalConfigParams">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemInternalConfigParamsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemInternalConfigParams" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="systemInternalConfigParams">
    <xs:sequence>
      <xs:element name="additionToSyncLatency" type="xs:long" />
      <xs:element minOccurs="0" name="clariionFirstSuffix" type="xs:string" />
      <xs:element minOccurs="0" name="clariionSecondSuffix" type="xs:string" />
      <xs:element name="clusterSize" type="xs:byte" />
      <xs:element minOccurs="0" name="companyName" type="xs:string" />
      <xs:element name="controlWriteTimeout" type="xs:long" />
      <xs:element name="daysPerMonth" type="xs:int" />
      <xs:element name="defaultDailyImages" type="xs:int" />
      <xs:element name="defaultMonthlyImages" type="xs:int" />
      <xs:element name="defaultResumeSyncBelowLatency" type="xs:int" />
      <xs:element name="defaultResumeSyncBelowThroughput" type="xs:int" />
      <xs:element name="defaultStartAsyncAboveLatency" type="xs:int" />
      <xs:element name="defaultStartAsyncAboveThroughput" type="xs:int" />
      <xs:element name="defaultUnconsolidatedDuration" type="xs:int" />
      <xs:element name="defaultWeeklyImages" type="xs:int" />
      <xs:element name="displayCertificateExtensions" type="xs:boolean" />
      <xs:element name="dynamicDontMoveToSyncTime" type="xs:long" />
      <xs:element minOccurs="0" name="e14ServerName" type="xs:string" />
      <xs:element name="enableClariionVirtualWithRoll" type="xs:boolean" />
      <xs:element name="eventLogsMaxNumberOfEntries" type="xs:long" />
      <xs:element name="fcReplication" type="xs:boolean" />
      <xs:element name="flexFiltersRunIntervalInMinutes" type="xs:int" />
      <xs:element name="highestLatencyThreshold" type="xs:int" />
      <xs:element name="highestThroughputThreshold" type="xs:int" />
      <xs:element name="journalSizeLimitInGB" type="xs:long" />
      <xs:element name="lowestLatencyThreshold" type="xs:int" />
      <xs:element name="lowestThroughputThreshold" type="xs:int" />
      <xs:element name="maxGridCopiesPerGroup" type="xs:int" />
      <xs:element name="maxGridGroups" type="xs:int" />
      <xs:element name="maxGroups" type="xs:int" />
      <xs:element name="maxPersistentSnapshots" type="xs:int" />
      <xs:element name="maximumSplittersPerSite" type="xs:int" />
      <xs:element name="mgmtMaxActivityTime" type="xs:int" />
      <xs:element name="mgmtScaledMaxActivityTime" type="xs:int" />
      <xs:element name="minNumOfVolumesInScaledEnv" type="xs:int" />
      <xs:element name="minTSPPercentage" type="xs:int" />
      <xs:element name="minUnconsolidatedDuration" type="xs:int" />
      <xs:element name="modelUpdaterFrequency" type="xs:int" />
      <xs:element name="monitorSplitterStateLease" type="xs:long" />
      <xs:element minOccurs="0" name="multipleAppliancesString" type="xs:string" />
      <xs:element minOccurs="0" name="oem" type="xs:string" />
      <xs:element name="oneSiteLayout" type="xs:boolean" />
      <xs:element name="peerStateUpdateInterval" type="xs:int" />
      <xs:element minOccurs="0" name="phoenixSystemTM" type="xs:string" />
      <xs:element minOccurs="0" name="product" type="xs:string" />
      <xs:element name="rootCausesStabilizationTime" type="xs:int" />
      <xs:element name="rpse" type="xs:boolean" />
      <xs:element name="rpseSetGroupSettingsTimeForSingleOperation" type="xs:int" />
      <xs:element name="simulator" type="xs:boolean" />
      <xs:element minOccurs="0" name="singleApplianceString" type="xs:string" />
      <xs:element name="snapshotConsolidationTimeAcceleration" type="xs:long" />
      <xs:element name="snapshotUpdateInterval" type="xs:long" />
      <xs:element name="splitterMonitorRPATimeout" type="xs:long" />
      <xs:element name="syrSupported" type="xs:boolean" />
      <xs:element name="trackInitInconsistency" type="xs:boolean" />
      <xs:element name="tspMemoryAlmostFullWaterMark" type="xs:double" />
      <xs:element name="usePWLOnWAN" type="xs:boolean" />
      <xs:element minOccurs="0" name="version" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeBrocadeSafeBindings">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element name="boundedEntityWWN" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeBrocadeSafeBindingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="addVCenterServerFilter">
    <xs:sequence>
      <xs:element minOccurs="0" name="vCenterServer" type="tns:vCenterServerUID" />
      <xs:element minOccurs="0" name="filter" type="tns:vCenterServerFilter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addVCenterServerFilterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="rescanSANVolumesInSite">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element name="checkExistingVolumesAsWell" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rescanSANVolumesInSiteResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="approveBrocadeSafeBinding">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="binding" type="tns:brocadeSplitterBinding" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="approveBrocadeSafeBindingResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="disableSystemAlerts">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="disableSystemAlertsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateAddConsistencyGroupSet">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupSetSettings" type="tns:consistencyGroupSetSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddConsistencyGroupSetResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="removeSystemEventLogsFilter">
    <xs:sequence>
      <xs:element minOccurs="0" name="filter" type="tns:systemEventLogsFilterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeSystemEventLogsFilterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateAddUserRole">
    <xs:sequence>
      <xs:element minOccurs="0" name="role" type="tns:userRole" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddUserRoleResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="detachPhoenixCluster">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detachPhoenixClusterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="addUserRole">
    <xs:sequence>
      <xs:element minOccurs="0" name="role" type="tns:userRole" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addUserRoleResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="renameConsistencyGroupCopy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="newName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="renameConsistencyGroupCopyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateAddJournalVolume">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddJournalVolumeResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="removeConsistencyGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeConsistencyGroupResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="addDistributedConsistencyGroupWithDefaultPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupName" type="xs:string" />
      <xs:element minOccurs="0" name="primaryRPA" type="tns:rpaUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="secondaryRPAsList" type="tns:rpaUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addDistributedConsistencyGroupWithDefaultPolicyResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRemoveUserVolume">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="replicationSet" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRemoveUserVolumeResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="markGroupCopyVolumesAsDirty">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="replicationSets" type="tns:replicationSetUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="markGroupCopyVolumesAsDirtyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getVPLEXCertificateInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="ip" type="xs:string" />
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVPLEXCertificateInformationResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:certificateInformation" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="certificateInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="issuerDN" type="xs:string" />
      <xs:element minOccurs="0" name="md5" type="xs:string" />
      <xs:element minOccurs="0" name="pemCertificate" type="xs:string" />
      <xs:element minOccurs="0" name="sha1" type="xs:string" />
      <xs:element minOccurs="0" name="subjectDN" type="xs:string" />
      <xs:element minOccurs="0" name="validNotAfter" type="xs:string" />
      <xs:element minOccurs="0" name="validNotBefore" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addBrocadeSafeBindings">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element name="boundedEntityWWN" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addBrocadeSafeBindingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="abortTransaction">
    <xs:sequence>
      <xs:element minOccurs="0" name="transactionID" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="abortTransactionResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="verifyExistingSplitterCredentials">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyExistingSplitterCredentialsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="removeBrocadeBindings">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeBrocadeBindingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getDefaultSystemGlobalPolicy">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getDefaultSystemGlobalPolicyResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemGlobalPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="systemGlobalPolicy">
    <xs:sequence>
      <xs:element name="advancedActionRegulationEnabled" type="xs:boolean" />
      <xs:element name="allowLargeLag" type="xs:boolean" />
      <xs:element name="numberOfCommunicationStreams" type="xs:int" />
      <xs:element name="shouldCollectLongTermStatistics" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getRPAsStateFromSite">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getRPAsStateFromSiteResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteRPAsState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setProductionAtRemoteCopyAndRemoveLocalCopy">
    <xs:sequence>
      <xs:element minOccurs="0" name="remoteGroupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="localGroupCopyToRemove" type="tns:consistencyGroupCopyUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setProductionAtRemoteCopyAndRemoveLocalCopyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="removeUserRole">
    <xs:sequence>
      <xs:element minOccurs="0" name="role" type="tns:userRole" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeUserRoleResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="rescanSplittersVolumesConnectionsInAllSites">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="rescanSplittersVolumesConnectionsInAllSitesResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setBookmarkFrequency">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupSet" type="tns:consistencyGroupSetUID" />
      <xs:element name="frequencyInSeconds" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setBookmarkFrequencyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getClariionVolumesContext">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getClariionVolumesContextResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:clariionVolumesContext" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyConsistencyGroupState">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="state" type="tns:verifyConsistencyGroupStateParam" />
      <xs:element name="timeoutInSeconds" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyConsistencyGroupStateParam">
    <xs:sequence>
      <xs:element name="againstSettings" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="copies" nillable="true" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="copiesConditions" nillable="true" type="tns:verifyConsistencyGroupCopyStateParam" />
      <xs:element minOccurs="0" name="defaultCopyCondition" type="tns:verifyConsistencyGroupCopyStateParam" />
      <xs:element minOccurs="0" name="defaultLinkCondition" type="tns:verifyConsistencyGroupLinkStateParam" />
      <xs:element minOccurs="0" name="distributed" type="xs:boolean" />
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="groupEnabled" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="links" nillable="true" type="tns:consistencyGroupLinkUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="linksConditions" nillable="true" type="tns:verifyConsistencyGroupLinkStateParam" />
      <xs:element minOccurs="0" name="sourceCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyConsistencyGroupCopyStateParam">
    <xs:sequence>
      <xs:element minOccurs="0" name="accessedImageTime" type="tns:timeFrame" />
      <xs:element minOccurs="0" name="activePrimaryRPA" type="xs:int" />
      <xs:element minOccurs="0" name="copyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="enabled" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="possibleJournalStates" nillable="true" type="tns:journalState" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="possibleStorageAccessStates" nillable="true" type="tns:storageAccessState" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="secondaryRPAs" nillable="true" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyConsistencyGroupLinkStateParam">
    <xs:sequence>
      <xs:element minOccurs="0" name="linkUID" type="tns:consistencyGroupLinkUID" />
      <xs:element minOccurs="0" name="pipeState" type="tns:pipeState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyConsistencyGroupStateResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getConnectionInfo">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getConnectionInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:connectionInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="connectionInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string" />
      <xs:element minOccurs="0" name="status" type="tns:connectionStatus" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addBrocadeBinding">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="binding" type="tns:brocadeSplitterBinding" />
      <xs:element name="skipBindingTest" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addBrocadeBindingResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setConsistencyGroupPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="newPolicy" type="tns:consistencyGroupPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setConsistencyGroupPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllConsistencyGroups">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllConsistencyGroupsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSiteSANVolumes">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element name="refreshView" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSiteSANVolumesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteSANVolumes" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteSANVolumes">
    <xs:sequence>
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="volumesInformation" nillable="true" type="tns:volumeInformation" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeConsistencyGroupCopy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeConsistencyGroupCopyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getFullRecoverPointStateContext">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getFullRecoverPointStateContextResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:fullRecoverPointStateContext" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateStartGroupCopyTransfer">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateStartGroupCopyTransferResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="addConsistencyGroupAndCopiesCommand">
    <xs:sequence>
      <xs:element minOccurs="0" name="fullGroupPolicy" type="tns:fullConsistencyGroupPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addConsistencyGroupAndCopiesCommandResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSyslogSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settings" type="tns:syslogSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSyslogSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getRepositoryVolumeState">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getRepositoryVolumeStateResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:repositoryVolumeState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="exportConsolidatedStatisticsByTimeFrame">
    <xs:sequence>
      <xs:element minOccurs="0" name="timeFrame" type="tns:longTermStatisticsTimeFrame" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="longTermStatisticsTimeFrame">
    <xs:sequence>
      <xs:element minOccurs="0" name="granularity" type="tns:statisticsGranularity" />
      <xs:element minOccurs="0" name="timeFrame" type="tns:timeFrame" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="exportConsolidatedStatisticsByTimeFrameResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addBrocadeBindings">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element name="boundedEntityWWN" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addBrocadeBindingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setLicenseKey">
    <xs:sequence>
      <xs:element minOccurs="0" name="licenseKey" type="tns:licenseKey" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setLicenseKeyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemInternalConfigParamsConflicts">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemInternalConfigParamsConflictsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="unregulateAllConsistencyGroupCopies">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="unregulateAllConsistencyGroupCopiesResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="addConsistencyGroupCopy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="copyName" type="xs:string" />
      <xs:element name="isProductionCopy" type="xs:boolean" />
      <xs:element minOccurs="0" name="policy" type="tns:consistencyGroupCopyPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addConsistencyGroupCopyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSplitterName">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSplitterNameResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeBrocadeBindingsForInitiator">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element name="initiatorWWN" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeBrocadeBindingsForInitiatorResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="enableImageAccessWithParams">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="params" type="tns:imageAccessParameters" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="imageAccessParameters">
    <xs:sequence>
      <xs:element minOccurs="0" name="imageType" type="tns:searchImageType" />
      <xs:element minOccurs="0" name="maximumSearchRange" type="xs:long" />
      <xs:element minOccurs="0" name="mode" type="tns:imageAccessMode" />
      <xs:element name="searchExactText" type="xs:boolean" />
      <xs:element minOccurs="0" name="searchText" type="xs:string" />
      <xs:element minOccurs="0" name="timeStamp" type="tns:recoverPointTimeStamp" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="enableImageAccessWithParamsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateEnableImageAccessWithParams">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="params" type="tns:imageAccessParameters" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateEnableImageAccessWithParamsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getLDAPServerInfo">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getLDAPServerInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:ldapServerInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ldapServerInfo">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupsNames" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="usersNames" nillable="true" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rescanSpecificSplittersVolumesConnections">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splitters" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rescanSpecificSplittersVolumesConnectionsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="removeBrocadeSafeBinding">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="binding" type="tns:brocadeSplitterBinding" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeBrocadeSafeBindingResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateSetConsistencyGroupCopyPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="newPolicy" type="tns:consistencyGroupCopyPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetConsistencyGroupCopyPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getRPAsStateFromAllSites">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getRPAsStateFromAllSitesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:siteRPAsState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="exportStatistics">
    <xs:sequence>
      <xs:element minOccurs="0" name="filter" type="tns:statisticsFilter" />
      <xs:element minOccurs="0" name="fileName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="exportStatisticsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeBrocadeBinding">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="binding" type="tns:brocadeSplitterBinding" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeBrocadeBindingResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getVCenterServerFilters">
    <xs:sequence>
      <xs:element minOccurs="0" name="vCenterServer" type="tns:vCenterServerUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVCenterServerFiltersResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:vCenterServerFilters" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEventLogsWithLargerUID">
    <xs:sequence>
      <xs:element minOccurs="0" name="eventUID" type="tns:systemEventUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEventLogsWithLargerUIDResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemEventLogs" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="systemEventLogs">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="eventLogs" nillable="true" type="tns:eventLog" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addJournalVolume">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addJournalVolumeResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getVolumeInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVolumeInformationResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:volumeInformation" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSplitterAutoRegisterRPAsInitiatorsPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element name="autoRegisterRPAsInitiatorsPolicy" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSplitterAutoRegisterRPAsInitiatorsPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="enableConsistencyGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="enableConsistencyGroupResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateAddConsistencyGroupAndCopiesCommand">
    <xs:sequence>
      <xs:element minOccurs="0" name="fullGroupPolicy" type="tns:fullConsistencyGroupPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddConsistencyGroupAndCopiesCommandResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getTimeSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getTimeSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:timeSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addConsistencyGroupCopyWithDefaultPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="copyName" type="xs:string" />
      <xs:element name="isProductionCopy" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addConsistencyGroupCopyWithDefaultPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getEventLogsByFilter">
    <xs:sequence>
      <xs:element minOccurs="0" name="filter" type="tns:userEventLogsFilter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEventLogsByFilterResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemEventLogs" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="disableSNMP">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="disableSNMPResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateSetConsistencyGroupPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="newPolicy" type="tns:consistencyGroupPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetConsistencyGroupPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getUserDefinedProperties">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getUserDefinedPropertiesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:userDefinedProperties" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSplittersSettingsFromSite">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSplittersSettingsFromSiteResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteSplittersSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddSystemEventLogsFilter">
    <xs:sequence>
      <xs:element minOccurs="0" name="filter" type="tns:systemEventLogsFilter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddSystemEventLogsFilterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="removeReplicationSet">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="replicationSet" type="tns:replicationSetUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeReplicationSetResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllGroupsSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllGroupsSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:consistencyGroupSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupSettings">
    <xs:sequence>
      <xs:element name="enabled" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupCopiesSettings" nillable="true" type="tns:consistencyGroupCopySettings" />
      <xs:element minOccurs="0" name="groupUID" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="latestSourceCopyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="linksSettings" nillable="true" type="tns:consistencyGroupLinkSettings" />
      <xs:element minOccurs="0" name="name" type="xs:string" />
      <xs:element minOccurs="0" name="policy" type="tns:consistencyGroupPolicy" />
      <xs:element minOccurs="0" name="productionCopyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="replicationSetsSettings" nillable="true" type="tns:replicationSetSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupCopySettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="copyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element name="enabled" type="xs:boolean" />
      <xs:element name="hasPhoenixDevices" type="xs:boolean" />
      <xs:element minOccurs="0" name="imageAccessInformation" type="tns:imageAccessInformation" />
      <xs:element minOccurs="0" name="journal" type="tns:consistencyGroupCopyJournal" />
      <xs:element minOccurs="0" name="name" type="xs:string" />
      <xs:element minOccurs="0" name="policy" type="tns:consistencyGroupCopyPolicy" />
      <xs:element minOccurs="0" name="roleInfo" type="tns:consistencyGroupCopyRoleInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="imageAccessInformation">
    <xs:sequence>
      <xs:element name="imageAccessEnabled" type="xs:boolean" />
      <xs:element minOccurs="0" name="imageInformation" type="tns:imageAccessParameters" />
      <xs:element minOccurs="0" name="imageName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupCopyJournal">
    <xs:sequence>
      <xs:element name="grossJournalSize" type="xs:long" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="journalVolumes" nillable="true" type="tns:journalVolumeSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="journalVolumeSettings">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:volumeSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="groupCopyUID" type="tns:consistencyGroupCopyUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="volumeSettings" abstract="true">
    <xs:sequence>
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" name="volumeInfo" type="tns:volumeInformation" />
      <xs:element minOccurs="0" name="volumeType" type="tns:volumeType" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="repositoryVolumeSettings">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:volumeSettings">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="userVolumeSettings">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:volumeSettings">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="attachedSplitters" nillable="true" type="tns:splitterUID" />
          <xs:element minOccurs="0" name="groupCopyUID" type="tns:consistencyGroupCopyUID" />
          <xs:element minOccurs="0" name="replicationSetUID" type="tns:replicationSetUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="consistencyGroupCopyRoleInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="role" type="tns:consistencyGroupCopyRole" />
      <xs:element minOccurs="0" name="sourceCopyUID" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupLinkSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupLinkUID" type="tns:consistencyGroupLinkUID" />
      <xs:element minOccurs="0" name="linkPolicy" type="tns:consistencyGroupLinkPolicy" />
      <xs:element name="localLink" type="xs:boolean" />
      <xs:element name="transferEnabled" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="replicationSetSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="replicationSetName" type="xs:string" />
      <xs:element minOccurs="0" name="replicationSetUID" type="tns:replicationSetUID" />
      <xs:element name="sizeInBytes" type="xs:long" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="volumes" nillable="true" type="tns:userVolumeSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setBrocadeBindings">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="bindings" type="tns:brocadeSplitterBindings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setBrocadeBindingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateRenameSystemEventLogsFilter">
    <xs:sequence>
      <xs:element minOccurs="0" name="filter" type="tns:systemEventLogsFilterUID" />
      <xs:element minOccurs="0" name="newName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRenameSystemEventLogsFilterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemStatusContext">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemStatusContextResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemStatusContext" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="disableConsistencyGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="disableConsistencyGroupResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="removeSNMPUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="user" type="tns:snmpUser" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeSNMPUserResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateAbortSnapshotsConsolidation">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAbortSnapshotsConsolidationResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getRPAState">
    <xs:sequence>
      <xs:element minOccurs="0" name="rpa" type="tns:rpaUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getRPAStateResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:rpaState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSystemGlobalPolicy">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemGlobalPolicyResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemGlobalPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAccountSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAccountSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:accountSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="accountSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="accountInformation" type="tns:accountInformation" />
      <xs:element minOccurs="0" name="installationID" type="xs:string" />
      <xs:element minOccurs="0" name="license" type="tns:licenseInfo" />
      <xs:element name="licenseActivated" type="xs:boolean" />
      <xs:element name="licenseInstalled" type="xs:boolean" />
      <xs:element name="licenseValid" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="accountInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="companyName" type="xs:string" />
      <xs:element minOccurs="0" name="contactInfo" type="xs:string" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="sitesSoftwareSerialIDs" nillable="true" type="tns:siteSoftwareSerialID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteSoftwareSerialID">
    <xs:sequence>
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" name="softwareSerialID" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addRecoverPointUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="user" type="tns:recoverPointUser" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addRecoverPointUserResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateRemoveUserRole">
    <xs:sequence>
      <xs:element minOccurs="0" name="role" type="tns:userRole" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRemoveUserRoleResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validatePauseGroupTransfer">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validatePauseGroupTransferResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setPassword">
    <xs:sequence>
      <xs:element minOccurs="0" name="username" type="xs:string" />
      <xs:element minOccurs="0" name="currentPassword" nillable="true" type="xs:base64Binary" />
      <xs:element minOccurs="0" name="newPassword" nillable="true" type="xs:base64Binary" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setPasswordResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getGroupState">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupStateResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupCopyName">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupCopyNameResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setVCenterServerFilters">
    <xs:sequence>
      <xs:element minOccurs="0" name="filters" type="tns:vCenterServerFilters" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setVCenterServerFiltersResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getCurrentUserEventLogsFilter">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getCurrentUserEventLogsFilterResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:userEventLogsFilter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRemoveSystemEventLogsFilter">
    <xs:sequence>
      <xs:element minOccurs="0" name="filter" type="tns:systemEventLogsFilterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRemoveSystemEventLogsFilterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllGroupsState">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllGroupsStateResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:consistencyGroupState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupSnapshotsForTimeFrameAndName">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="timeFrame" type="tns:timeFrame" />
      <xs:element minOccurs="0" name="name" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupSnapshotsForTimeFrameAndNameResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupSnapshots" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupSnapshots">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="copiesSnapshots" nillable="true" type="tns:consistencyGroupCopySnapshots" />
      <xs:element minOccurs="0" name="groupUID" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupCopySnapshots">
    <xs:sequence>
      <xs:element minOccurs="0" name="actualJournalCapacity" type="xs:double" />
      <xs:element minOccurs="0" name="averageCompression" type="xs:double" />
      <xs:element minOccurs="0" name="copyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="earliest" type="tns:recoverPointTimeStamp" />
      <xs:element minOccurs="0" name="journalUsage" type="xs:long" />
      <xs:element minOccurs="0" name="latest" type="tns:recoverPointTimeStamp" />
      <xs:element minOccurs="0" name="protectionWindows" type="tns:protectionWindowsInfo" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="snapshots" nillable="true" type="tns:snapshot" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="protectionWindowsInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="currentProtectionWindow" type="tns:protectionWindowInfo" />
      <xs:element minOccurs="0" name="predictedProtectionWindow" type="tns:protectionWindowInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="protectionWindowInfo">
    <xs:sequence>
      <xs:element name="protectionWindowInSeconds" type="xs:long" />
      <xs:element minOccurs="0" name="status" type="tns:protectionWindowStatus" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetSplitterCredentials">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="credentials" type="tns:baseSplitterCredentials" />
      <xs:element minOccurs="0" name="password" nillable="true" type="xs:base64Binary" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetSplitterCredentialsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateSetConsistencyGroupSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settingsParam" type="tns:consistencyGroupSettingsChangesParam" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetConsistencyGroupSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="removeVCenterServer">
    <xs:sequence>
      <xs:element minOccurs="0" name="vCenterServer" type="tns:vCenterServerUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeVCenterServerResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="attachPhoenixCluster">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element minOccurs="0" name="phoenixClusterName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="attachPhoenixClusterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getLicenseKeyInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="key" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLicenseKeyInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:licenseInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVCenterServersViewFromAllSites">
    <xs:sequence>
      <xs:element name="shouldRescan" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVCenterServersViewFromAllSitesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:siteVCenterServerView" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteVCenterServerView">
    <xs:sequence>
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="VCentersView" nillable="true" type="tns:vCenterServerView" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vCenterServerView">
    <xs:sequence>
      <xs:element minOccurs="0" name="connectionStatus" type="tns:vCenterServerConnectionStatus" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="esxsView" nillable="true" type="tns:esxView" />
      <xs:element minOccurs="0" name="vcServerUID" type="tns:vCenterServerUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="esxView">
    <xs:sequence>
      <xs:element name="filtered" type="xs:boolean" />
      <xs:element minOccurs="0" name="ip" type="xs:string" />
      <xs:element minOccurs="0" name="name" type="xs:string" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="nonVMVolumes" nillable="true" type="tns:vmVolume" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="vmViews" nillable="true" type="tns:vmView" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vmVolume">
    <xs:sequence>
      <xs:element minOccurs="0" name="canonicalName" type="xs:string" />
      <xs:element name="filtered" type="xs:boolean" />
      <xs:element minOccurs="0" name="groupCopyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="replicationSetUID" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vmView">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="dataStores" nillable="true" type="tns:dataStore" />
      <xs:element name="filtered" type="xs:boolean" />
      <xs:element minOccurs="0" name="ip" type="xs:string" />
      <xs:element minOccurs="0" name="name" type="xs:string" />
      <xs:element minOccurs="0" name="protectingGroupUID" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="protectionStatus" type="tns:vmProtectionStatus" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rdmDevices" nillable="true" type="tns:vmVolume" />
      <xs:element name="template" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="dataStore">
    <xs:sequence>
      <xs:element minOccurs="0" name="name" type="xs:string" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="volumes" nillable="true" type="tns:vmVolume" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="disableSystemReport">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="disableSystemReportResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="addVCenterServer">
    <xs:sequence>
      <xs:element minOccurs="0" name="vCenterServerCredentials" type="tns:vCenterServerCredentials" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vCenterServerCredentials">
    <xs:sequence>
      <xs:element minOccurs="0" name="certificate" type="xs:string" />
      <xs:element minOccurs="0" name="ip" type="xs:string" />
      <xs:element minOccurs="0" name="password" type="xs:base64Binary" />
      <xs:element name="port" type="xs:int" />
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element minOccurs="0" name="username" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addVCenterServerResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="forceLongInitialization">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="forceLongInitializationResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateSetConsistencyGroupLinkPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupLink" type="tns:consistencyGroupLinkUID" />
      <xs:element minOccurs="0" name="newPolicy" type="tns:consistencyGroupLinkPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetConsistencyGroupLinkPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSpecificGroupsVolumeStates">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groups" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecificGroupsVolumeStatesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:consistencyGroupVolumesState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="suspendConsistencyGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="suspendConsistencyGroupResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateSetSystemMiscellaneousSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settings" type="tns:systemMiscellaneousSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetSystemMiscellaneousSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateEnableConsistencyGroupCopy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateEnableConsistencyGroupCopyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="addConsistencyGroupSet">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupSetSettings" type="tns:consistencyGroupSetSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addConsistencyGroupSetResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupSetUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyRPAStateWithDefaultTimeout">
    <xs:sequence>
      <xs:element minOccurs="0" name="rpa" type="tns:rpaUID" />
      <xs:element minOccurs="0" name="state" type="tns:verifyRPAStateParam" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyRPAStateWithDefaultTimeoutResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rescanSplitterVolumesConnections">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rescanSplitterVolumesConnectionsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="enableDirectAccess">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="enableDirectAccessResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemVersionStateCommand">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemVersionStateCommandResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemVersionState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSystemSettingsConflicts">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemSettingsConflictsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemSettingsConflicts" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="systemSettingsConflicts">
    <xs:sequence>
      <xs:element minOccurs="0" name="conflictsDescription" type="xs:string" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="sitesInfo" nillable="true" type="tns:siteInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="siteName" type="xs:string" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setTimeSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settings" type="tns:timeSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setTimeSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="verifySplitterState">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="state" type="tns:verifySplitterStateParam" />
      <xs:element name="timeoutInSeconds" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifySplitterStateResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="testLDAPSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settings" type="tns:ldapSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="testLDAPSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemStatus">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemStatusResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemStatus" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="systemStatus">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="sitesProblems" nillable="true" type="tns:siteProblems" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="systemProblems" nillable="true" type="tns:problemDescription" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="wanProblems" nillable="true" type="tns:problemDescription" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteProblems">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="devicesProblems" nillable="true" type="tns:problemDescription" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpasProblems" nillable="true" type="tns:problemDescription" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splittersProblems" nillable="true" type="tns:splitterProblemDescription" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="problemDescription">
    <xs:sequence>
      <xs:element minOccurs="0" name="description" type="xs:string" />
      <xs:element name="problemID" type="xs:int" />
      <xs:element minOccurs="0" name="severity" type="tns:problemSeverity" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="splitterProblemDescription">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:problemDescription">
        <xs:sequence>
          <xs:element minOccurs="0" name="splitterUID" type="tns:splitterUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="disableSyslog">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="disableSyslogResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="markGroupVolumesAsDirty">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="replicationSets" type="tns:replicationSetUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="markGroupVolumesAsDirtyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getConflictingSystemSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getConflictingSystemSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="systemSettings">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="sitesSettings" nillable="true" type="tns:siteSettings" />
      <xs:element minOccurs="0" name="systemMaintenanceMode" type="tns:systemMaintenanceMode" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="siteSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="attachedPhoenixClusterName" type="xs:string" />
      <xs:element minOccurs="0" name="internalSiteName" type="xs:string" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="raidGroupsNames" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="repositoryVolume" type="tns:repositoryVolumeSettings" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpasUIDs" nillable="true" type="tns:rpaUID" />
      <xs:element minOccurs="0" name="siteManagementIPv4" type="xs:string" />
      <xs:element minOccurs="0" name="siteManagementIPv6" type="xs:string" />
      <xs:element minOccurs="0" name="siteName" type="xs:string" />
      <xs:element minOccurs="0" name="siteUID" type="tns:siteUID" />
      <xs:element minOccurs="0" name="throttlePolicy" type="tns:irThrottlePolicy" />
      <xs:element minOccurs="0" name="timeZoneID" type="xs:string" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="VCenterServers" nillable="true" type="tns:vCenterServer" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="VCenterServersFilters" nillable="true" type="tns:vCenterServerFilters" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDefaultRolesNames">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getDefaultRolesNamesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateEnableDirectAccess">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateEnableDirectAccessResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getTransactionResult">
    <xs:sequence>
      <xs:element minOccurs="0" name="transactionID" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getTransactionResultResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionResult" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="transactionResult">
    <xs:sequence>
      <xs:element minOccurs="0" name="exceptionMessage" type="xs:string" />
      <xs:element minOccurs="0" name="exceptionType" type="xs:string" />
      <xs:element minOccurs="0" name="result" type="xs:anyType" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="collectLogsResult">
    <xs:sequence>
      <xs:element minOccurs="0" name="ftpResult" type="tns:collectLogsResultValue" />
      <xs:element minOccurs="0" name="logsFileName" type="xs:string" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpaResults" nillable="true" type="tns:collectLogsRPAResultValue" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splitterResults" nillable="true" type="tns:collectLogsSplitterResultValue" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="collectLogsResultValue">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string" />
      <xs:element name="success" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="collectLogsRPAResultValue">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:collectLogsResultValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="rpa" type="tns:rpaUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="collectLogsSplitterResultValue">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:collectLogsResultValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="balanceLoadRecommendation">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupsRecommendation" nillable="true" type="tns:consistencyGroupBalanceLoadRecommendation" />
      <xs:element minOccurs="0" name="resultEvent" type="xs:string" />
      <xs:element minOccurs="0" name="resultOutput" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupBalanceLoadRecommendation">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupUID" type="tns:consistencyGroupUID" />
      <xs:element name="primaryRPANumber" type="xs:int" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="secondaryRPAsNumbers" nillable="true" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="bottlenecksDetectionResult">
    <xs:sequence>
      <xs:element minOccurs="0" name="result" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getServerCharsetName">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getServerCharsetNameResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addAndAttachUserVolume">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="replicationSet" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
      <xs:element name="isBootFromSAN" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addAndAttachUserVolumeResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setSignaturesUsageDuringInitialization">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element name="useSignatures" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSignaturesUsageDuringInitializationResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getReplicationSetName">
    <xs:sequence>
      <xs:element minOccurs="0" name="replicationSet" type="tns:replicationSetUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReplicationSetNameResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyConsistencyGroupStateWithDefaultTimeout">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="state" type="tns:verifyConsistencyGroupStateParam" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyConsistencyGroupStateWithDefaultTimeoutResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSplittersStateFromSite">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSplittersStateFromSiteResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteSplittersState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecificGroupsSettings">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groups" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecificGroupsSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:consistencyGroupSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSystemReportSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settings" type="tns:systemReportSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSystemReportSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="generateCallHomeEvents">
    <xs:sequence>
      <xs:element minOccurs="0" name="script" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="generateCallHomeEventsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:callHomeEvents" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSplittersWithUnattachedVolumes">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSplittersWithUnattachedVolumesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateEnableImageAccess">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="snapshot" type="tns:snapshot" />
      <xs:element minOccurs="0" name="mode" type="tns:imageAccessMode" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateEnableImageAccessResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getVCCertificateInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element minOccurs="0" name="ip" type="xs:string" />
      <xs:element name="port" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVCCertificateInformationResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:certificateInformation" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSystemEventLogsFilters">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="filters" type="tns:systemEventLogsFilter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSystemEventLogsFiltersResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setConsistencyGroupCopyPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="newPolicy" type="tns:consistencyGroupCopyPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setConsistencyGroupCopyPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSplittersSANViewFromAllSites">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSplittersSANViewFromAllSitesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:siteSplittersSANView" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetFullConsistencyGroupPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="newPolicy" type="tns:fullConsistencyGroupPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetFullConsistencyGroupPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="releaseSiteManagementIP">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="releaseSiteManagementIPResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllSystemEventLogsFilters">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllSystemEventLogsFiltersResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:systemEventLogsFilter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSyslogSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSyslogSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:syslogSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetUsersSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settings" type="tns:usersSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetUsersSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getGroupVolumeStates">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupVolumeStatesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupVolumesState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVCenterServersViewFromSite">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element name="shouldRescan" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVCenterServersViewFromSiteResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteVCenterServerView" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRemoveConsistencyGroupCopy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRemoveConsistencyGroupCopyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="rescanSANVolumesInAllSites">
    <xs:sequence>
      <xs:element name="checkExistingVolumesAsWell" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rescanSANVolumesInAllSitesResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="addSNMPUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="user" type="tns:snmpUser" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addSNMPUserResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="rescanSplittersVolumesConnectionsInSite">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rescanSplittersVolumesConnectionsInSiteResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setIRThrottlingPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element minOccurs="0" name="policy" type="tns:irThrottlePolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setIRThrottlingPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getPhoenixClusterState">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPhoenixClusterStateResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:phoenixClusterState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupCopySnapshotsForTimeFrameAndName">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="timeFrame" type="tns:timeFrame" />
      <xs:element minOccurs="0" name="name" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupCopySnapshotsForTimeFrameAndNameResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupCopySnapshots" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="undoGroupWrites">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="undoGroupWritesResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getFullRecoverPointSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getFullRecoverPointSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:fullRecoverPointSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="fullRecoverPointSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="accountSettings" type="tns:accountSettings" />
      <xs:element minOccurs="0" name="globalPolicy" type="tns:systemGlobalPolicy" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupsSetsSettings" nillable="true" type="tns:consistencyGroupSetSettings" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groupsSettings" nillable="true" type="tns:consistencyGroupSettings" />
      <xs:element minOccurs="0" name="managementSettings" type="tns:managementSettings" />
      <xs:element name="settingsConflict" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splittersSettings" nillable="true" type="tns:siteSplittersSettings" />
      <xs:element minOccurs="0" name="systemSettings" type="tns:systemSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeRecoverPointUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="user" type="tns:recoverPointUser" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeRecoverPointUserResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="resizeReplicationSet">
    <xs:sequence>
      <xs:element minOccurs="0" name="replicationSet" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" name="resizeReplicationSetParam" type="tns:resizeReplicationSetParam" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="resizeReplicationSetResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateAddRecoverPointUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="user" type="tns:recoverPointUser" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddRecoverPointUserResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="renameConsistencyGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="newName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="renameConsistencyGroupResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemReportSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemReportSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemReportSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSiteStatistics">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSiteStatisticsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteStatistics" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addSystemEventLogsFilter">
    <xs:sequence>
      <xs:element minOccurs="0" name="filter" type="tns:systemEventLogsFilter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addSystemEventLogsFilterResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemEventLogsFilterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getFullRecoverPointSettingsContext">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getFullRecoverPointSettingsContextResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:fullRecoverPointSettingsContext" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRenameConsistencyGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="newName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRenameConsistencyGroupResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAvailableSiteTargets">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableSiteTargetsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:availableSiteTargets" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableSiteTargets">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="wwns" nillable="true" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSiteSANVolumesContext">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSiteSANVolumesContextResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteSANVolumesContext" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="balanceLoad">
    <xs:sequence>
      <xs:element name="applyRecommendation" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="balanceLoadResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rollToImage">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rollToImageResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateFailover">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateFailoverResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="abortSnapshotsConsolidation">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="abortSnapshotsConsolidationResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setUserDefinedProperties">
    <xs:sequence>
      <xs:element minOccurs="0" name="userDefinedProperties" type="tns:userDefinedProperties" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setUserDefinedPropertiesResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getVCenterServersFromSite">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVCenterServersFromSiteResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteVCenterServers" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAllEventLogs">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllEventLogsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemEventLogs" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addReplicationSet">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="replicationSetName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addReplicationSetResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="pauseGroupCopyTransfer">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="pauseGroupCopyTransferResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setVCenterServerCredentials">
    <xs:sequence>
      <xs:element minOccurs="0" name="vCenterServer" type="tns:vCenterServerUID" />
      <xs:element minOccurs="0" name="vCenterServerCredentials" type="tns:vCenterServerCredentials" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setVCenterServerCredentialsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="configAllSantapAVTZones">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element name="totalAvtsNumber" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="configAllSantapAVTZonesResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateAddReplicationSet">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="replicationSetName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddReplicationSetResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateRemoveReplicationSet">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="replicationSet" type="tns:replicationSetUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRemoveReplicationSetResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getDefaultUserEventLogsFilter">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getDefaultUserEventLogsFilterResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:userEventLogsFilter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAccessIdsForSymmetrix">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAccessIdsForSymmetrixResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:symmetrixHostIDsInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="symmetrixHostIDsInfo">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="symmetrixHostIDs" nillable="true" type="tns:symmertixHostId" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="symmertixHostId">
    <xs:sequence>
      <xs:element minOccurs="0" name="hostId" type="xs:string" />
      <xs:element minOccurs="0" name="rpaUID" type="tns:rpaUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetLicenseKey">
    <xs:sequence>
      <xs:element minOccurs="0" name="licenseKey" type="tns:licenseKey" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetLicenseKeyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="startSystemUpgrade">
    <xs:sequence>
      <xs:element minOccurs="0" name="upgradeMode" type="tns:systemMaintenanceMode" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="startSystemUpgradeResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getVCenterServerView">
    <xs:sequence>
      <xs:element minOccurs="0" name="vCenterServer" type="tns:vCenterServerUID" />
      <xs:element name="shouldRescan" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVCenterServerViewResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:vCenterServerView" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSystemSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="collectLogs">
    <xs:sequence>
      <xs:element minOccurs="0" name="params" type="tns:collectLogsParams" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="collectLogsParams">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="clariionCredentials" nillable="true" type="tns:clariionSplitter" />
      <xs:element minOccurs="0" name="ftpInformation" type="tns:ftpInformation" />
      <xs:element name="ignoreConnectivityErrors" type="xs:boolean" />
      <xs:element name="includeCoreFiles" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rpas" nillable="true" type="tns:rpaUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="santapCredentials" nillable="true" type="tns:sanTapSplitter" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="splittersWithoutCredentials" nillable="true" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="timeFrame" type="tns:timeFrame" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="vplexCredentials" nillable="true" type="tns:vplexSplitter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="clariionSplitter">
    <xs:sequence>
      <xs:element minOccurs="0" name="creds" type="tns:clariionSplitterCredentials" />
      <xs:element minOccurs="0" name="password" type="xs:base64Binary" />
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ftpInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="filename" type="xs:string" />
      <xs:element minOccurs="0" name="location" type="xs:string" />
      <xs:element minOccurs="0" name="password" type="xs:base64Binary" />
      <xs:element name="port" type="xs:int" />
      <xs:element minOccurs="0" name="server" type="xs:string" />
      <xs:element minOccurs="0" name="username" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="sanTapSplitter">
    <xs:sequence>
      <xs:element minOccurs="0" name="creds" type="tns:sanTapSplitterCredentials" />
      <xs:element minOccurs="0" name="password" type="xs:base64Binary" />
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vplexSplitter">
    <xs:sequence>
      <xs:element minOccurs="0" name="creds" type="tns:vplexSplitterCredentials" />
      <xs:element minOccurs="0" name="password" type="xs:base64Binary" />
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="collectLogsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getUserRoles">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getUserRolesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:userRole" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateEnableConsistencyGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateEnableConsistencyGroupResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setSystemGlobalPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="policy" type="tns:systemGlobalPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSystemGlobalPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateAddConsistencyGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupName" type="xs:string" />
      <xs:element minOccurs="0" name="policy" type="tns:consistencyGroupPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddConsistencyGroupResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateSetProductionAtRemoteCopyAndRemoveLocalCopy">
    <xs:sequence>
      <xs:element minOccurs="0" name="remoteGroupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="localGroupCopyToRemove" type="tns:consistencyGroupCopyUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetProductionAtRemoteCopyAndRemoveLocalCopyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="refreshSantapView">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="refreshSantapViewResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setBookmarkConsolidationPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="snapshot" type="tns:snapshot" />
      <xs:element minOccurs="0" name="consolidationPolicy" type="tns:bookmarkConsolidationPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setBookmarkConsolidationPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateUndoGroupWrites">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateUndoGroupWritesResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getMonitoredParametersStatus">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getMonitoredParametersStatusResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:monitoredParametersStatus" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetSystemEventLogsFilters">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="filters" type="tns:systemEventLogsFilter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetSystemEventLogsFiltersResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="createClariionRaidGroups">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element name="numberOfGroups" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createClariionRaidGroupsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="removeJournalVolume">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeJournalVolumeResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateSetAttachedVolumesForSplitter">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="volumes" type="tns:setVolumeParam" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetAttachedVolumesForSplitterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateDisableConsistencyGroupCopy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateDisableConsistencyGroupCopyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateResumeProduction">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateResumeProductionResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateAddAndAttachUserVolume">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="replicationSet" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
      <xs:element name="isBootFromSAN" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddAndAttachUserVolumeResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllStatisticsCategories">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllStatisticsCategoriesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateMoveToImage">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="accessType" type="tns:specificImageAccessType" />
      <xs:element minOccurs="0" name="imageType" type="tns:searchImageType" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateMoveToImageResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="finishSystemUpgrade">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="finishSystemUpgradeResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setSplitterCredentials">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="credentials" type="tns:baseSplitterCredentials" />
      <xs:element minOccurs="0" name="password" nillable="true" type="xs:base64Binary" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSplitterCredentialsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateRemoveSplitter">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRemoveSplitterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getDefaultConsistencyGroupPolicy">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getDefaultConsistencyGroupPolicyResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="failover">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="failoverResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateAddConsistencyGroupWithDefaultPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupName" type="xs:string" />
      <xs:element minOccurs="0" name="primaryRPA" type="tns:rpaUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddConsistencyGroupWithDefaultPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="finishRPAMaintenance">
    <xs:sequence>
      <xs:element minOccurs="0" name="rpa" type="tns:rpaUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="finishRPAMaintenanceResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="resumeProduction">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="resumeProductionResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateRenameReplicationSet">
    <xs:sequence>
      <xs:element minOccurs="0" name="replicationSet" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" name="newName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRenameReplicationSetResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="pauseGroupTransfer">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="pauseGroupTransferResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="enableSystemAlerts">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="enableSystemAlertsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSantapView">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSantapViewResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:sanTapView" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="sanTapView">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="nonGuidPaths" nillable="true" type="tns:sanTapPath" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="paths" nillable="true" type="tns:sanTapDevicePaths" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="sanTapPath">
    <xs:sequence>
      <xs:element name="initiator" type="xs:long" />
      <xs:element name="lun" type="xs:long" />
      <xs:element name="target" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="sanTapDevicePaths">
    <xs:sequence>
      <xs:element minOccurs="0" name="deviceID" type="tns:deviceUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="paths" nillable="true" type="tns:sanTapPath" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="clearLongTermStatistics">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="clearLongTermStatisticsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSplitterSANView">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSplitterSANViewResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:splitterSANView" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="disableConsistencyGroupCopy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="disableConsistencyGroupCopyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getVCenterServerViewContext">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVCenterServerViewContextResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:vCenterServerViewContext" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSiteSANVolumesByVendorAndProduct">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element name="refreshView" type="xs:boolean" />
      <xs:element minOccurs="0" name="vendor" type="xs:string" />
      <xs:element minOccurs="0" name="product" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSiteSANVolumesByVendorAndProductResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteSANVolumes" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeSplitter">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeSplitterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getGroupSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableLongTermStatisticsTimeFrames">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAvailableLongTermStatisticsTimeFramesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:longTermStatisticsTimeFrames" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="longTermStatisticsTimeFrames">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="timeFrames" nillable="true" type="tns:longTermStatisticsTimeFrame" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="recoverProduction">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="recoverProductionResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getCurrentUserInformation">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getCurrentUserInformationResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:userInformation" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="userInformation">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groups" nillable="true" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="logsFilter" type="tns:userEventLogsFilter" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="permissions" nillable="true" type="tns:permission" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addSSHKey">
    <xs:sequence>
      <xs:element minOccurs="0" name="key" type="tns:sshKey" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addSSHKeyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAvailableVolumesToAttachToSplitter">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element name="filterUnseenVolumes" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableVolumesToAttachToSplitterResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVCenterServerFiltersFromSite">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getVCenterServerFiltersFromSiteResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:vCenterServerFilters" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addConsistencyGroupWithDefaultPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupName" type="xs:string" />
      <xs:element minOccurs="0" name="primaryRPA" type="tns:rpaUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addConsistencyGroupWithDefaultPolicyResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetProductionCopy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetProductionCopyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAvailableSiteClariionVolumes">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element name="refreshView" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableSiteClariionVolumesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteClariionVolumes" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateDisableSystemReport">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateDisableSystemReportResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getCallHomeEvents">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getCallHomeEventsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:callHomeEvents" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="startRPAMaintenance">
    <xs:sequence>
      <xs:element minOccurs="0" name="rpa" type="tns:rpaUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="startRPAMaintenanceResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateSetVCenterServerCredentials">
    <xs:sequence>
      <xs:element minOccurs="0" name="vCenterServer" type="tns:vCenterServerUID" />
      <xs:element minOccurs="0" name="vCenterServerCredentials" type="tns:vCenterServerCredentials" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetVCenterServerCredentialsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateRemoveRecoverPointUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="user" type="tns:recoverPointUser" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRemoveRecoverPointUserResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAvailableVolumes">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element name="refreshView" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableVolumesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:siteSANVolumes" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detectBottlenecks">
    <xs:sequence>
      <xs:element minOccurs="0" name="filter" type="tns:detectBottlenecksFilter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detectBottlenecksFilter">
    <xs:sequence>
      <xs:element minOccurs="0" name="advancedOverview" type="xs:boolean" />
      <xs:element minOccurs="0" name="detailedOverview" type="xs:boolean" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groups" nillable="true" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="peakDuration" type="tns:quantity" />
      <xs:element minOccurs="0" name="timeFrame" type="tns:timeFrame" />
      <xs:element minOccurs="0" name="workingMode" type="tns:bottlenecksDetectionMode" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detectBottlenecksResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddVCenterServer">
    <xs:sequence>
      <xs:element minOccurs="0" name="vCenterServerCredentials" type="tns:vCenterServerCredentials" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddVCenterServerResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="enableLDAP">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="enableLDAPResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAvailableSymmetrixArrays">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableSymmetrixArraysResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:symmetrixArrayList" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="symmetrixArrayList">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="symmetrixIDs" nillable="true" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetSystemReportSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settings" type="tns:systemReportSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetSystemReportSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="testSyRConnectivity">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="testSyRConnectivityResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="addConsistencyGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupName" type="xs:string" />
      <xs:element minOccurs="0" name="policy" type="tns:consistencyGroupPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addConsistencyGroupResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="disableImageAccess">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="disableImageAccessResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="testCurrentLDAPSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="testCurrentLDAPSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setAttachedVolumesForSplitter">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="volumes" type="tns:setVolumeParam" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setAttachedVolumesForSplitterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="startGroupCopyTransfer">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="startGroupCopyTransferResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="createBookmark">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="groups" type="tns:consistencyGroupUID" />
      <xs:element minOccurs="0" name="bookmarkName" type="xs:string" />
      <xs:element minOccurs="0" name="consolidationPolicy" type="tns:bookmarkConsolidationPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createBookmarkResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getDefaultUsersNames">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getDefaultUsersNamesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeUserVolume">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="replicationSet" type="tns:replicationSetUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeUserVolumeResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getBrocadeSplitterInitiators">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBrocadeSplitterInitiatorsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:brocadeSplitterInitiators" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateConsolidateSnapshots">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="start" type="tns:snapshot" />
      <xs:element minOccurs="0" name="end" type="tns:snapshot" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateConsolidateSnapshotsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="acquireSiteManagementIP">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="acquireSiteManagementIPResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setAccountInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="accountInformation" type="tns:accountInformation" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setAccountInformationResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="rescanSANSplittersInSite">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rescanSANSplittersInSiteResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateClearSplitterCredentials">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateClearSplitterCredentialsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getTrackedEventIDs">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getTrackedEventIDsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSiteTimeZone">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element minOccurs="0" name="newTimeZoneID" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setSiteTimeZoneResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getConflictingFullRecoverPointSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getConflictingFullRecoverPointSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:fullRecoverPointSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAllGroupCopiesProtectionWindows">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAllGroupCopiesProtectionWindowsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:consistencyGroupCopyProtectionWindowsInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="consistencyGroupCopyProtectionWindowsInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopyUID" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="protectionWindows" type="tns:protectionWindowsInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="areThereSystemSettingsConflicts">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="areThereSystemSettingsConflictsResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="attachVolumeToSplitter">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="volumeParam" type="tns:setVolumeParam" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="attachVolumeToSplitterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateDisableImageAccess">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateDisableImageAccessResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setVCenterServerFilterForUnknownLuns">
    <xs:sequence>
      <xs:element minOccurs="0" name="vCenterServer" type="tns:vCenterServerUID" />
      <xs:element name="shouldFilterUnknownLuns" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setVCenterServerFilterForUnknownLunsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateAddDistributedConsistencyGroupWithDefaultPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupName" type="xs:string" />
      <xs:element minOccurs="0" name="primaryRPA" type="tns:rpaUID" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="secondaryRPAsList" type="tns:rpaUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateAddDistributedConsistencyGroupWithDefaultPolicyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getFullConsistencyGroupPolicy">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getFullConsistencyGroupPolicyResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:fullConsistencyGroupPolicy" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="moveToImage">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="accessType" type="tns:specificImageAccessType" />
      <xs:element minOccurs="0" name="imageType" type="tns:searchImageType" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="moveToImageResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getGroupCopySnapshots">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupCopySnapshotsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupCopySnapshots" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="startGroupTransfer">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="startGroupTransferResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setLDAPSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settings" type="tns:ldapSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setLDAPSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="validateForceLongInitialization">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateForceLongInitializationResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setCurrentUserEventLogsFilter">
    <xs:sequence>
      <xs:element minOccurs="0" name="filter" type="tns:userEventLogsFilter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setCurrentUserEventLogsFilterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="enableConsistencyGroupCopy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element name="startTransfer" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="enableConsistencyGroupCopyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setUsersSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settings" type="tns:usersSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setUsersSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemAlertsSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSystemAlertsSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:systemAlertsSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetAccountInformation">
    <xs:sequence>
      <xs:element minOccurs="0" name="accountInformation" type="tns:accountInformation" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateSetAccountInformationResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="setCallHomeEvents">
    <xs:sequence>
      <xs:element minOccurs="0" name="callHomeEvents" type="tns:callHomeEvents" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setCallHomeEventsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="removeConsistencyGroupSet">
    <xs:sequence>
      <xs:element minOccurs="0" name="getGroupSetName" type="tns:consistencyGroupSetUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeConsistencyGroupSetResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="verifyGroupCopySnapshots">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="state" type="tns:verifyGroupCopySnapshotsParam" />
      <xs:element name="timeoutInSeconds" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyGroupCopySnapshotsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupSnapshots">
    <xs:sequence>
      <xs:element minOccurs="0" name="group" type="tns:consistencyGroupUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupSnapshotsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:consistencyGroupSnapshots" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableSplittersFromAllSites">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getAvailableSplittersFromAllSitesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:siteAvailableSplitters" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRenameConsistencyGroupCopy">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
      <xs:element minOccurs="0" name="newName" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="validateRenameConsistencyGroupCopyResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getSplitterSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSplitterSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:splitterSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifySplitterCredentials">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element minOccurs="0" name="credentials" type="tns:baseSplitterCredentials" />
      <xs:element minOccurs="0" name="password" nillable="true" type="xs:base64Binary" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifySplitterCredentialsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="removeVCenterServerFilter">
    <xs:sequence>
      <xs:element minOccurs="0" name="vCenterServer" type="tns:vCenterServerUID" />
      <xs:element minOccurs="0" name="filter" type="tns:vCenterServerFilter" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeVCenterServerFilterResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="approveBrocadeSafeBindings">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
      <xs:element name="boundedEntityWWN" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="approveBrocadeSafeBindingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getUsersSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getUsersSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:usersSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="markGroupCopyVolumesAsClean">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupCopy" type="tns:consistencyGroupCopyUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="markGroupCopyVolumesAsCleanResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getLDAPSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getLDAPSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:ldapSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSplitterState">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSplitterStateResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:splitterState" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="enableSyslog">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="enableSyslogResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="clearSettings">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="clearSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="getUserVolumeSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="site" type="tns:siteUID" />
      <xs:element minOccurs="0" name="volumeID" type="tns:deviceUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getUserVolumeSettingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:userVolumeSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="clearSplitterCredentials">
    <xs:sequence>
      <xs:element minOccurs="0" name="splitter" type="tns:splitterUID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="clearSplitterCredentialsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:complexType name="exportConsolidatedStatisticsByTimeFrames">
    <xs:sequence>
      <xs:element minOccurs="0" name="timeFrames" type="tns:longTermStatisticsTimeFrames" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="exportConsolidatedStatisticsByTimeFramesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:transactionID" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setVCenterServersViewSettings">
    <xs:sequence>
      <xs:element minOccurs="0" name="settings" type="tns:vCenterServersViewSettings" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setVCenterServersViewSettingsResponse">
    <xs:sequence />
  </xs:complexType>
  <xs:simpleType name="shareType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NFS23" />
      <xs:enumeration value="NFS4" />
      <xs:enumeration value="CIFS" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="connectivityStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="StatusOk" />
      <xs:enumeration value="AuthenticationFailure" />
      <xs:enumeration value="IpNotReachable" />
      <xs:enumeration value="InvalidPort" />
      <xs:enumeration value="UnknownError" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="authenticationType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Global" />
      <xs:enumeration value="Local" />
      <xs:enumeration value="LDAP" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="replicationSetType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Block" />
      <xs:enumeration value="FileSystem" />
      <xs:enumeration value="VDM" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="splitterType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Clariion" />
      <xs:enumeration value="CiscoSantap" />
      <xs:enumeration value="BrocadeScimitar" />
      <xs:enumeration value="Windows" />
      <xs:enumeration value="Solaris" />
      <xs:enumeration value="AIX" />
      <xs:enumeration value="Symmetrix" />
      <xs:enumeration value="NEO" />
      <xs:enumeration value="VplexArray" />
      <xs:enumeration value="VplexDirector" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="vCenterServerFilterType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ESX" />
      <xs:enumeration value="VM" />
      <xs:enumeration value="Lun" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="systemSecurityLevel">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Low" />
      <xs:enumeration value="High" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="snapshotGranularity">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Dynamic" />
      <xs:enumeration value="FixedPerSecond" />
      <xs:enumeration value="FixedPerWrite" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="priority">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Idle" />
      <xs:enumeration value="Low" />
      <xs:enumeration value="Normal" />
      <xs:enumeration value="High" />
      <xs:enumeration value="Critical" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="wanCompression">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Low" />
      <xs:enumeration value="Medium" />
      <xs:enumeration value="High" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="protectionMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Asynchronous" />
      <xs:enumeration value="Synchronous" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="quantityType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="microseconds" />
      <xs:enumeration value="milliseconds" />
      <xs:enumeration value="seconds" />
      <xs:enumeration value="minutes" />
      <xs:enumeration value="hours" />
      <xs:enumeration value="days" />
      <xs:enumeration value="bytes" />
      <xs:enumeration value="KB" />
      <xs:enumeration value="MB" />
      <xs:enumeration value="GB" />
      <xs:enumeration value="TB" />
      <xs:enumeration value="writes" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="rpoMinimizationType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MinimizeLag" />
      <xs:enumeration value="MinimizeBandwidth" />
      <xs:enumeration value="Irrelevant" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="volumeAccessStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OK" />
      <xs:enumeration value="Error" />
      <xs:enumeration value="Reserved" />
      <xs:enumeration value="BadSector" />
      <xs:enumeration value="ReadOnly" />
      <xs:enumeration value="NA" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="volumeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="User" />
      <xs:enumeration value="Journal" />
      <xs:enumeration value="Repository" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="phoenixClusterStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OK" />
      <xs:enumeration value="Down" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="replicationMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Unknown" />
      <xs:enumeration value="NA" />
      <xs:enumeration value="Snapshot" />
      <xs:enumeration value="Asynchronous" />
      <xs:enumeration value="PingPong" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="generalStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OK" />
      <xs:enumeration value="Error" />
      <xs:enumeration value="Unknown" />
      <xs:enumeration value="Warning" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="splitterStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OK" />
      <xs:enumeration value="Down" />
      <xs:enumeration value="UnsupportedVersion" />
      <xs:enumeration value="Uncontrollable" />
      <xs:enumeration value="Warning" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="failallVariant">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Auto" />
      <xs:enumeration value="Level_1" />
      <xs:enumeration value="Level_2" />
      <xs:enumeration value="Level_3" />
      <xs:enumeration value="Level_4" />
      <xs:enumeration value="Level_5" />
      <xs:enumeration value="Level_6" />
      <xs:enumeration value="Level_7" />
      <xs:enumeration value="Level_8" />
      <xs:enumeration value="Level_9" />
      <xs:enumeration value="Level_10" />
      <xs:enumeration value="Level_11" />
      <xs:enumeration value="Level_12" />
      <xs:enumeration value="Level_13" />
      <xs:enumeration value="Level_14" />
      <xs:enumeration value="Level_15" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="hostOS">
    <xs:restriction base="xs:string">
      <xs:enumeration value="AIX" />
      <xs:enumeration value="HPUX" />
      <xs:enumeration value="Linux2_4" />
      <xs:enumeration value="Linux2_6" />
      <xs:enumeration value="Solaris" />
      <xs:enumeration value="VMware_ESX" />
      <xs:enumeration value="VMware_ESX_Windows" />
      <xs:enumeration value="Windows" />
      <xs:enumeration value="Other_Mixed" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="journalCompressionLevel">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="Medium" />
      <xs:enumeration value="High" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="phoenixClusterProtectionPolicy">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Domino" />
      <xs:enumeration value="RegulateOnly" />
      <xs:enumeration value="NoRegulation" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="reservationsPolicy">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Auto" />
      <xs:enumeration value="IF" />
      <xs:enumeration value="PowerPath" />
      <xs:enumeration value="PowerPath_NonAuto" />
      <xs:enumeration value="SCSI3" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="bookmarkConsolidationPolicy">
    <xs:restriction base="xs:string">
      <xs:enumeration value="AlwaysConsolidate" />
      <xs:enumeration value="SurviveDaily" />
      <xs:enumeration value="SurviveWeekly" />
      <xs:enumeration value="SurviveMonthly" />
      <xs:enumeration value="NeverConsolidate" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="snapshotConsolidationType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NoConsolidation" />
      <xs:enumeration value="Manual" />
      <xs:enumeration value="Daily" />
      <xs:enumeration value="Weekly" />
      <xs:enumeration value="Monthly" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="eventLogLevel">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Info" />
      <xs:enumeration value="Warning" />
      <xs:enumeration value="TransientWarning" />
      <xs:enumeration value="ClearedWarning" />
      <xs:enumeration value="Error" />
      <xs:enumeration value="TransientError" />
      <xs:enumeration value="ClearedError" />
      <xs:enumeration value="Critical" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="eventLogScope">
    <xs:restriction base="xs:string">
      <xs:enumeration value="RootCause" />
      <xs:enumeration value="Normal" />
      <xs:enumeration value="Advanced" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="eventLogTopic">
    <xs:restriction base="xs:string">
      <xs:enumeration value="All" />
      <xs:enumeration value="Management" />
      <xs:enumeration value="Site" />
      <xs:enumeration value="RPA" />
      <xs:enumeration value="ConsistencyGroup" />
      <xs:enumeration value="Splitter" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="journalState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Distributing" />
      <xs:enumeration value="EnablingLoggedAccess" />
      <xs:enumeration value="EnablingVirtualAccess" />
      <xs:enumeration value="SnapshotAccess" />
      <xs:enumeration value="ErrorAccessingVirtualImage" />
      <xs:enumeration value="Locking" />
      <xs:enumeration value="Locked" />
      <xs:enumeration value="LongResync" />
      <xs:enumeration value="Recovering" />
      <xs:enumeration value="Inaccessible" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="splitVariant">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Standard" />
      <xs:enumeration value="TSP" />
      <xs:enumeration value="Redirect" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="storageAccessState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DirectAccess" />
      <xs:enumeration value="LoggedAccess" />
      <xs:enumeration value="VirtualAccess" />
      <xs:enumeration value="EnablingLoggedAccess" />
      <xs:enumeration value="EnablingVirtualAccess" />
      <xs:enumeration value="VirtualAccessRollingImage" />
      <xs:enumeration value="LoggedAccessRollComplete" />
      <xs:enumeration value="NoAccess" />
      <xs:enumeration value="NoAccessUndoingWrites" />
      <xs:enumeration value="NoAccessSpaceFull" />
      <xs:enumeration value="NoAccessJournalPreserved" />
      <xs:enumeration value="NoAccessBFSGroup" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="pipeState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Initializing" />
      <xs:enumeration value="Active" />
      <xs:enumeration value="FlushingBuffer" />
      <xs:enumeration value="FlushingRemoteBufferToJournal" />
      <xs:enumeration value="ReadyToReplicate" />
      <xs:enumeration value="Flushed" />
      <xs:enumeration value="Paused" />
      <xs:enumeration value="PausedBySystem" />
      <xs:enumeration value="Error" />
      <xs:enumeration value="InHighLoad" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="monitoredParameterType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NumberOfGroups" />
      <xs:enumeration value="NumberOfTransferringGroups" />
      <xs:enumeration value="NumberOfReplicatingSets" />
      <xs:enumeration value="NumberOfSplittingHosts" />
      <xs:enumeration value="NumberOfClariionHosts" />
      <xs:enumeration value="DaysLicenseLeft" />
      <xs:enumeration value="LocalReplicatedStorage" />
      <xs:enumeration value="RemoteReplicatedStorage" />
      <xs:enumeration value="NumberOfGridGroups" />
      <xs:enumeration value="BrocadeNumberOfVirtualEntities" />
      <xs:enumeration value="BrocadeNumberOfITLs" />
      <xs:enumeration value="BrocadeNumberOfReplicatedLUNs" />
      <xs:enumeration value="BrocadeNumberOfITNexuses" />
      <xs:enumeration value="BrocadeNumberOfDRLs" />
      <xs:enumeration value="BrocadeDRLMemoryConsumption" />
      <xs:enumeration value="BrocadeDiskFreeSpace" />
      <xs:enumeration value="BrocadeNumberOfFRBindings" />
      <xs:enumeration value="LagTransaction" />
      <xs:enumeration value="LagTime" />
      <xs:enumeration value="LagData" />
      <xs:enumeration value="PauseJournalTSPUsage" />
      <xs:enumeration value="PauseVirtualMemoryUsage" />
      <xs:enumeration value="CiscoSANTAPLicenseExpiry" />
      <xs:enumeration value="CiscoHostsPerDVT" />
      <xs:enumeration value="CiscoLUNsPerHostPerDVT" />
      <xs:enumeration value="CiscoLUNsPerDVT" />
      <xs:enumeration value="CiscoOldSoftwareDVTsPerSSM" />
      <xs:enumeration value="CiscoNewSoftwareDVTsPerSSM" />
      <xs:enumeration value="CiscoSessions" />
      <xs:enumeration value="CiscoHostITLPerSSM" />
      <xs:enumeration value="CiscoOldHardwareITLsPerDPP" />
      <xs:enumeration value="CiscoNewHardwareITLsPerDPP" />
      <xs:enumeration value="CiscoITLsPerSSM" />
      <xs:enumeration value="NumberOfSplitterClusters" />
      <xs:enumeration value="TotalNumberOfSplitterLUNs" />
      <xs:enumeration value="SymmetrixProtectedVolumes" />
      <xs:enumeration value="CiscoModITLPerDVT" />
      <xs:enumeration value="NumberOfVplexHosts" />
      <xs:enumeration value="NumberOfVplexDirectors" />
      <xs:enumeration value="NumberOfSymmetrixHosts" />
      <xs:enumeration value="SymmetrixSessions" />
      <xs:enumeration value="NumberOfWLPS" />
      <xs:enumeration value="NumberOfGUIDS" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="interfaceType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="WAN" />
      <xs:enumeration value="LAN" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="siteEntityType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="RPA" />
      <xs:enumeration value="Splitter" />
      <xs:enumeration value="Volume" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="rpaStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OK" />
      <xs:enumeration value="Down" />
      <xs:enumeration value="RemovedForMaintenance" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="imageAccessMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="LoggedAccess" />
      <xs:enumeration value="VirtualAccess" />
      <xs:enumeration value="VirtualAccessWithRoll" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="alertType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Immediate" />
      <xs:enumeration value="Daily" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="systemReportTransferMethod">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ESRS" />
      <xs:enumeration value="SMTP" />
      <xs:enumeration value="FTPS" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="syslogFacility">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Auth" />
      <xs:enumeration value="Authpriv" />
      <xs:enumeration value="Cron" />
      <xs:enumeration value="Daemon" />
      <xs:enumeration value="Ftp" />
      <xs:enumeration value="Kern" />
      <xs:enumeration value="Local0" />
      <xs:enumeration value="Local1" />
      <xs:enumeration value="Local2" />
      <xs:enumeration value="Local3" />
      <xs:enumeration value="Local4" />
      <xs:enumeration value="Local5" />
      <xs:enumeration value="Local6" />
      <xs:enumeration value="Local7" />
      <xs:enumeration value="Lpr" />
      <xs:enumeration value="Mail" />
      <xs:enumeration value="News" />
      <xs:enumeration value="Syslog" />
      <xs:enumeration value="User" />
      <xs:enumeration value="UUCP" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ldapSearchScope">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SubTree" />
      <xs:enumeration value="OneLevel" />
      <xs:enumeration value="BaseLevel" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ldapBindingType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Anonymous" />
      <xs:enumeration value="Simple" />
      <xs:enumeration value="Kerberos" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ldapProtocolType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="LDAP" />
      <xs:enumeration value="LDAPs" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="recoverPointUserType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="LocalUser" />
      <xs:enumeration value="LDAPUser" />
      <xs:enumeration value="LDAPGroup" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="permission">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Splitter" />
      <xs:enumeration value="Group" />
      <xs:enumeration value="Transfer" />
      <xs:enumeration value="TargetImage" />
      <xs:enumeration value="Failover" />
      <xs:enumeration value="System" />
      <xs:enumeration value="Security" />
      <xs:enumeration value="Upgrade" />
      <xs:enumeration value="Monitor" />
      <xs:enumeration value="BoxManagement" />
      <xs:enumeration value="WebDownload" />
      <xs:enumeration value="SE" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="executionState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Unknown" />
      <xs:enumeration value="Running" />
      <xs:enumeration value="Finished" />
      <xs:enumeration value="Aborted" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="irThrottleType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Low" />
      <xs:enumeration value="High" />
      <xs:enumeration value="None" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="externalManagement">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="RPCE" />
      <xs:enumeration value="SRM" />
      <xs:enumeration value="REE" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="volumeStorageType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ClariionOrVNX" />
      <xs:enumeration value="Symmetrix" />
      <xs:enumeration value="VPLEX" />
      <xs:enumeration value="Other" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="vplexVolumeLocality">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Local" />
      <xs:enumeration value="MetroDR1" />
      <xs:enumeration value="Geo" />
      <xs:enumeration value="RemoteExported" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="clariionSplitterCredentialsType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Password" />
      <xs:enumeration value="SecureFiles" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="splitterCredentialsStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OK" />
      <xs:enumeration value="None" />
      <xs:enumeration value="Undecided" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="connectionStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Success" />
      <xs:enumeration value="PasswordExpired" />
      <xs:enumeration value="TooManyConnections" />
      <xs:enumeration value="NoPermission" />
      <xs:enumeration value="Error" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="statisticsGranularity">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Minutes" />
      <xs:enumeration value="Hours" />
      <xs:enumeration value="Days" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="searchImageType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="All" />
      <xs:enumeration value="AllBookmarks" />
      <xs:enumeration value="SystemBookmarks" />
      <xs:enumeration value="UserBookmarks" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="consistencyGroupCopyRole">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Active" />
      <xs:enumeration value="TemporaryActive" />
      <xs:enumeration value="Replica" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="protectionWindowStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Sufficient" />
      <xs:enumeration value="Insufficient" />
      <xs:enumeration value="Extending" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="vCenterServerConnectionStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Connected" />
      <xs:enumeration value="AuthenticationFailure" />
      <xs:enumeration value="IPUnreachable" />
      <xs:enumeration value="UnsupportedVersion" />
      <xs:enumeration value="InvalidPort" />
      <xs:enumeration value="InvalidPortOrCertificate" />
      <xs:enumeration value="UnknownError" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="vmProtectionStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NotProtected" />
      <xs:enumeration value="PartiallyProtected" />
      <xs:enumeration value="FullyProtected" />
      <xs:enumeration value="NoLuns" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="problemSeverity">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Error" />
      <xs:enumeration value="Warning" />
      <xs:enumeration value="Unknown" />
      <xs:enumeration value="OK" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="systemMaintenanceMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="MinorUpgrade" />
      <xs:enumeration value="MajorUpgrade" />
      <xs:enumeration value="HWReplacement" />
      <xs:enumeration value="ClusterUpgrade" />
      <xs:enumeration value="RepositoryChange" />
      <xs:enumeration value="RPSEConversion" />
      <xs:enumeration value="SystemModification" />
      <xs:enumeration value="UserInitiatedMaintenanceMode" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="specificImageAccessType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Next" />
      <xs:enumeration value="Previous" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="bottlenecksDetectionMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SystemOverviewAndBottleneckAnalysis" />
      <xs:enumeration value="DetectionOfInitializationPeriods" />
      <xs:enumeration value="DetectionOfHighLoadPeriods" />
      <xs:enumeration value="GeneralDetectionIncludingInitializationAndHighLoadPeriodsWithPeakWritingAnalysis" />
      <xs:enumeration value="AdvancedAndDetailedGeneralDetection" />
      <xs:enumeration value="PeakWritingAnalysis" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
</xs:schema>